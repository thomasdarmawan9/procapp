{"file_contents":{"backend/models/approval.go":{"content":"package models\n\nimport (\n        \"time\"\n        \"gorm.io/gorm\"\n)\n\ntype Approval struct {\n        gorm.Model\n        RequestID     uint      `gorm:\"not null;index\" json:\"request_id\"`\n        ApproverID    uint      `gorm:\"not null;index\" json:\"approver_id\"`\n        Approver      User      `gorm:\"foreignKey:ApproverID\" json:\"approver\"`\n        Status        string    `gorm:\"not null;index\" json:\"status\"` // approved, rejected\n        Comments      string    `gorm:\"type:text\" json:\"comments\"`\n        ApprovedAt    time.Time `json:\"approved_at\"`\n}\n","size_bytes":550},"backend/handlers/request.go":{"content":"package handlers\n\nimport (\n        \"log\"\n        \"net/http\"\n        \"procurement-app/database\"\n        \"procurement-app/models\"\n        \"procurement-app/services\"\n\n        \"github.com/gin-gonic/gin\"\n)\n\ntype CreateRequestInput struct {\n        ItemName      string  `json:\"item_name\" binding:\"required\"`\n        Description   string  `json:\"description\"`\n        Quantity      int     `json:\"quantity\" binding:\"required,min=1\"`\n        UnitPrice     float64 `json:\"unit_price\" binding:\"required,min=0\"`\n        Justification string  `json:\"justification\"`\n        VendorID      *uint   `json:\"vendor_id\"`\n}\n\nfunc CreateRequest(c *gin.Context) {\n        var input CreateRequestInput\n        if err := c.ShouldBindJSON(&input); err != nil {\n                c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n                return\n        }\n\n        userID := c.GetUint(\"user_id\")\n        totalCost := float64(input.Quantity) * input.UnitPrice\n\n        request := models.ProcurementRequest{\n                ItemName:      input.ItemName,\n                Description:   input.Description,\n                Quantity:      input.Quantity,\n                UnitPrice:     input.UnitPrice,\n                TotalCost:     totalCost,\n                Justification: input.Justification,\n                RequestorID:   userID,\n                VendorID:      input.VendorID,\n                Status:        \"pending\",\n        }\n\n        if err := database.DB.Create(&request).Error; err != nil {\n                c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Failed to create request\"})\n                return\n        }\n\n        database.DB.Preload(\"Requestor\").Preload(\"Vendor\").Preload(\"Approvals.Approver\").First(&request, request.ID)\n\n        // Send email notifications asynchronously\n        go func() {\n                // Notify requestor\n                if err := services.SendRequestCreatedEmail(&request, &request.Requestor); err != nil {\n                        log.Printf(\"Failed to send request created email: %v\", err)\n                }\n\n                // Notify approvers (managers and directors)\n                var approvers []models.User\n                database.DB.Where(\"role IN ?\", []string{\"manager\", \"director\"}).Find(&approvers)\n                for _, approver := range approvers {\n                        if err := services.SendApproverNotificationEmail(&request, &request.Requestor, approver.Email); err != nil {\n                                log.Printf(\"Failed to send approver notification to %s: %v\", approver.Email, err)\n                        }\n                }\n        }()\n\n        c.JSON(http.StatusCreated, request)\n}\n\nfunc GetRequests(c *gin.Context) {\n        userID := c.GetUint(\"user_id\")\n        role := c.GetString(\"role\")\n        status := c.Query(\"status\")\n\n        var requests []models.ProcurementRequest\n        query := database.DB.Preload(\"Requestor\").Preload(\"Vendor\").Preload(\"Approvals.Approver\")\n\n        if role == \"user\" || role == \"superuser\" {\n                query = query.Where(\"requestor_id = ?\", userID)\n        }\n\n        if status != \"\" {\n                query = query.Where(\"status = ?\", status)\n        }\n\n        if err := query.Order(\"created_at desc\").Find(&requests).Error; err != nil {\n                c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Failed to fetch requests\"})\n                return\n        }\n\n        c.JSON(http.StatusOK, requests)\n}\n\nfunc GetRequestByID(c *gin.Context) {\n        id := c.Param(\"id\")\n        userID := c.GetUint(\"user_id\")\n        role := c.GetString(\"role\")\n\n        var request models.ProcurementRequest\n        query := database.DB.Preload(\"Requestor\").Preload(\"Vendor\").Preload(\"Approvals.Approver\")\n\n        if err := query.First(&request, id).Error; err != nil {\n                c.JSON(http.StatusNotFound, gin.H{\"error\": \"Request not found\"})\n                return\n        }\n\n        if (role == \"user\" || role == \"superuser\") && request.RequestorID != userID {\n                c.JSON(http.StatusForbidden, gin.H{\"error\": \"Access denied\"})\n                return\n        }\n\n        c.JSON(http.StatusOK, request)\n}\n\nfunc UpdateRequestStatus(c *gin.Context) {\n        id := c.Param(\"id\")\n        \n        var input struct {\n                Status string `json:\"status\" binding:\"required,oneof=pending approved rejected\"`\n        }\n        \n        if err := c.ShouldBindJSON(&input); err != nil {\n                c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n                return\n        }\n\n        var request models.ProcurementRequest\n        if err := database.DB.First(&request, id).Error; err != nil {\n                c.JSON(http.StatusNotFound, gin.H{\"error\": \"Request not found\"})\n                return\n        }\n\n        request.Status = input.Status\n        if err := database.DB.Save(&request).Error; err != nil {\n                c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Failed to update status\"})\n                return\n        }\n\n        c.JSON(http.StatusOK, request)\n}\n","size_bytes":5037},"replit.md":{"content":"# PROCAPP - Procurement Application\n\n## Overview\nPROCAPP is a modern full-stack procurement management system designed to streamline the request and approval workflow within organizations. Built with React for the frontend and Go (Gin Gonic) for the backend, it features role-based access control, comprehensive vendor management, and automated email notifications. The application provides a professional enterprise experience with a clean, modern UI inspired by TailAdmin design principles.\n\n## User Preferences\nI prefer detailed explanations.\nDo not make changes to the folder `Z`.\nDo not make changes to the file `Y`.\n\n## System Architecture\n\n### UI/UX Decisions (Updated October 2025)\nThe application features a clean, modern UI/UX with design principles inspired by TailAdmin, utilizing Tailwind CSS for consistent styling. After initial challenges with the full TailAdmin template's complex dependency structure, we implemented a streamlined, custom design that maintains the TailAdmin aesthetic while ensuring reliability and performance.\n\n**Frontend Design Approach:**\n- Clean, sidebar-based layout with dark navigation sidebar\n- Modern login page with gradient background and quick-login demo buttons\n- Tailwind CSS for all styling (no complex dependencies)\n- Responsive design with mobile-first approach\n- Professional color scheme: Blue primary (#3B82F6), with semantic colors for status indicators\n\n**Current UI Components:**\n- Login page with 4-role quick login (user, superuser, manager, director)\n- Sidebar navigation with Dashboard, Requests, New Request, and Vendors sections\n- Dashboard with statistics cards (pending implementation with real data)\n- Placeholder pages for Requests, New Request, and Vendors (ready for implementation)\n\n### Technical Implementations\n- **Backend**: Go 1.24 with Gin Gonic framework, GORM ORM, and PostgreSQL database. Authentication is JWT-based.\n- **Frontend**: React 19 with Vite 7, React Router v7, Axios for HTTP requests, and Tailwind CSS for styling.\n- **Authentication**: JWT-based authentication with 4 hardcoded user roles (user, superuser, manager, director) for role-based access control (RBAC). Passwords are currently plaintext for demo purposes.\n  - **Demo Users**: user/password123, superuser/password123, manager/password123, director/password123\n- **Request Management**: Allows creation, viewing, and status filtering of procurement requests with item details and optional vendor selection.\n- **Vendor Management**: Provides full CRUD operations for vendors, including details like contact information, category, and rating. Managers/Directors have full management access, while other users can view and select vendors.\n- **Approval Workflow**: A multi-level approval system where Managers and Directors can approve/reject requests, with approval history tracking.\n- **Email Notifications**: Automated notifications for request creation, approval, and rejection, leveraging the Replit Gmail connector for sending emails via Gmail API.\n- **Database Schema**: Includes tables for Users, Procurement Requests, Approvals, and Vendors, with defined relationships and indexes for optimized query performance.\n- **Development Setup**: Both frontend and backend are configured to run automatically. The frontend uses Vite's proxy for API requests to the backend. CORS is currently set to allow all origins for development.\n\n### Feature Specifications\n- **Role-Based Access Control**:\n    - **User/Superuser**: Create and view own requests, view all vendors.\n    - **Manager/Director**: View all requests, approve/reject, manage vendors.\n- **Dashboard**: Statistics cards showing total requests, pending, approved, and rejected counts (placeholders ready for backend integration).\n- **Authentication Flow**: Protected routes redirect to login, JWT tokens stored in localStorage, automatic session restoration on page refresh.\n\n## Current Status (October 2025)\n- ✅ Backend API fully functional with authentication, requests, vendors, and approvals\n- ✅ Frontend structure established with clean, modern design\n- ✅ Login page working with all 4 user roles\n- ✅ Protected routing and authentication flow complete\n- ✅ Basic dashboard with statistics card placeholders\n- ⏳ Pending: Connect frontend pages to backend API for full CRUD operations\n- ⏳ Pending: Implement request listing, creation, and detail views\n- ⏳ Pending: Implement vendor management interface\n- ⏳ Pending: Implement approval workflow UI for managers/directors\n\n## External Dependencies\n- **Database**: PostgreSQL (Replit-managed)\n- **Email Service**: Gmail API (via Replit Gmail connector)\n- **Frontend Libraries**:\n    - React 19 (for UI)\n    - Vite 7 (build tool)\n    - React Router v7 (for navigation)\n    - Axios (HTTP client)\n    - Tailwind CSS (for styling)\n- **Backend Libraries**:\n    - Gin Gonic (Go web framework)\n    - GORM (Go ORM)\n    - `google.golang.org/api/gmail/v1` (for Gmail API integration)\n","size_bytes":4952},"frontend/eslint.config.js":{"content":"import js from '@eslint/js'\nimport globals from 'globals'\nimport reactHooks from 'eslint-plugin-react-hooks'\nimport reactRefresh from 'eslint-plugin-react-refresh'\nimport { defineConfig, globalIgnores } from 'eslint/config'\n\nexport default defineConfig([\n  globalIgnores(['dist']),\n  {\n    files: ['**/*.{js,jsx}'],\n    extends: [\n      js.configs.recommended,\n      reactHooks.configs['recommended-latest'],\n      reactRefresh.configs.vite,\n    ],\n    languageOptions: {\n      ecmaVersion: 2020,\n      globals: globals.browser,\n      parserOptions: {\n        ecmaVersion: 'latest',\n        ecmaFeatures: { jsx: true },\n        sourceType: 'module',\n      },\n    },\n    rules: {\n      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],\n    },\n  },\n])\n","size_bytes":763},"backend/models/user.go":{"content":"package models\n\nimport (\n        \"gorm.io/gorm\"\n)\n\ntype User struct {\n        gorm.Model\n        Username string `gorm:\"uniqueIndex;not null\" json:\"username\"`\n        Password string `gorm:\"not null\" json:\"-\"`\n        FullName string `gorm:\"not null\" json:\"full_name\"`\n        Email    string `json:\"email\"`\n        Role     string `gorm:\"not null\" json:\"role\"` // user, superuser, manager, director\n}\n","size_bytes":402},"backend/main.go":{"content":"package main\n\nimport (\n        \"log\"\n        \"procurement-app/database\"\n        \"procurement-app/handlers\"\n        \"procurement-app/middleware\"\n\n        \"github.com/gin-contrib/cors\"\n        \"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n        database.InitDatabase()\n\n        router := gin.Default()\n\n        router.Use(cors.New(cors.Config{\n                AllowOriginFunc: func(origin string) bool {\n                        return true\n                },\n                AllowMethods:     []string{\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"},\n                AllowHeaders:     []string{\"Origin\", \"Content-Type\", \"Authorization\"},\n                ExposeHeaders:    []string{\"Content-Length\"},\n                AllowCredentials: true,\n        }))\n\n        router.POST(\"/api/auth/login\", handlers.Login)\n\n        protected := router.Group(\"/api\")\n        protected.Use(middleware.AuthMiddleware())\n        {\n                protected.GET(\"/requests\", handlers.GetRequests)\n                protected.POST(\"/requests\", handlers.CreateRequest)\n                protected.GET(\"/requests/:id\", handlers.GetRequestByID)\n                protected.PUT(\"/requests/:id/status\", handlers.UpdateRequestStatus)\n                \n                protected.POST(\"/requests/:id/approvals\", handlers.CreateApproval)\n                protected.GET(\"/requests/:id/approvals\", handlers.GetApprovals)\n                \n                protected.GET(\"/vendors\", handlers.GetVendors)\n                protected.POST(\"/vendors\", handlers.CreateVendor)\n                protected.GET(\"/vendors/:id\", handlers.GetVendorByID)\n                protected.PUT(\"/vendors/:id\", handlers.UpdateVendor)\n                protected.DELETE(\"/vendors/:id\", handlers.DeleteVendor)\n        }\n\n        log.Println(\"Server starting on :8080\")\n        if err := router.Run(\":8080\"); err != nil {\n                log.Fatal(\"Failed to start server:\", err)\n        }\n}\n","size_bytes":1912},"frontend/src/api/client.js":{"content":"import axios from 'axios';\n\nconst apiClient = axios.create({\n  baseURL: '/api',\n});\n\napiClient.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const authAPI = {\n  login: (credentials) => apiClient.post('/auth/login', credentials),\n};\n\nexport const requestsAPI = {\n  getAll: (status = '') => apiClient.get(`/requests${status ? `?status=${status}` : ''}`),\n  getById: (id) => apiClient.get(`/requests/${id}`),\n  create: (data) => apiClient.post('/requests', data),\n  updateStatus: (id, status) => apiClient.put(`/requests/${id}/status`, { status }),\n};\n\nexport const approvalsAPI = {\n  create: (requestId, data) => apiClient.post(`/requests/${requestId}/approvals`, data),\n  getByRequest: (requestId) => apiClient.get(`/requests/${requestId}/approvals`),\n};\n\nexport const vendorsAPI = {\n  getAll: (params = {}) => apiClient.get('/vendors', { params }),\n  getById: (id) => apiClient.get(`/vendors/${id}`),\n  create: (data) => apiClient.post('/vendors', data),\n  update: (id, data) => apiClient.put(`/vendors/${id}`, data),\n  delete: (id) => apiClient.delete(`/vendors/${id}`),\n};\n\nexport default apiClient;\n","size_bytes":1244},"backend/middleware/auth.go":{"content":"package middleware\n\nimport (\n\t\"net/http\"\n\t\"os\"\n\t\"strings\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/golang-jwt/jwt/v5\"\n)\n\ntype Claims struct {\n\tUserID   uint   `json:\"user_id\"`\n\tUsername string `json:\"username\"`\n\tRole     string `json:\"role\"`\n\tjwt.RegisteredClaims\n}\n\nfunc AuthMiddleware() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tauthHeader := c.GetHeader(\"Authorization\")\n\t\tif authHeader == \"\" {\n\t\t\tc.JSON(http.StatusUnauthorized, gin.H{\"error\": \"Authorization header required\"})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\ttokenString := strings.TrimPrefix(authHeader, \"Bearer \")\n\t\tif tokenString == authHeader {\n\t\t\tc.JSON(http.StatusUnauthorized, gin.H{\"error\": \"Invalid token format\"})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tclaims := &Claims{}\n\t\ttoken, err := jwt.ParseWithClaims(tokenString, claims, func(token *jwt.Token) (interface{}, error) {\n\t\t\treturn []byte(getJWTSecret()), nil\n\t\t})\n\n\t\tif err != nil || !token.Valid {\n\t\t\tc.JSON(http.StatusUnauthorized, gin.H{\"error\": \"Invalid token\"})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Set(\"user_id\", claims.UserID)\n\t\tc.Set(\"username\", claims.Username)\n\t\tc.Set(\"role\", claims.Role)\n\t\tc.Next()\n\t}\n}\n\nfunc getJWTSecret() string {\n\tsecret := os.Getenv(\"JWT_SECRET\")\n\tif secret == \"\" {\n\t\treturn \"your-secret-key-change-in-production\"\n\t}\n\treturn secret\n}\n","size_bytes":1282},"frontend/vite.config.js":{"content":"import { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\nimport tailwindcss from '@tailwindcss/vite'\n\n// https://vite.dev/config/\nexport default defineConfig({\n  plugins: [\n    react(),\n    tailwindcss(),\n  ],\n  server: {\n    host: '0.0.0.0',\n    port: 5000,\n    strictPort: true,\n    allowedHosts: true,\n    hmr: {\n      clientPort: 5000,\n    },\n    proxy: {\n      '/api': {\n        target: 'http://localhost:8080',\n        changeOrigin: true,\n      },\n    },\n  },\n})\n","size_bytes":489},"backend/database/database.go":{"content":"package database\n\nimport (\n        \"fmt\"\n        \"log\"\n        \"os\"\n        \"procurement-app/models\"\n\n        \"gorm.io/driver/postgres\"\n        \"gorm.io/gorm\"\n)\n\nvar DB *gorm.DB\n\nfunc InitDatabase() {\n        dsn := os.Getenv(\"DATABASE_URL\")\n        if dsn == \"\" {\n                log.Fatal(\"DATABASE_URL environment variable is not set\")\n        }\n\n        var err error\n        DB, err = gorm.Open(postgres.Open(dsn), &gorm.Config{})\n        if err != nil {\n                log.Fatal(\"Failed to connect to database:\", err)\n        }\n\n        fmt.Println(\"Database connection established\")\n\n        err = DB.AutoMigrate(&models.User{}, &models.Vendor{}, &models.ProcurementRequest{}, &models.Approval{})\n        if err != nil {\n                log.Fatal(\"Failed to migrate database:\", err)\n        }\n\n        fmt.Println(\"Database migration completed\")\n\n        seedUsers()\n}\n\nfunc seedUsers() {\n        users := []models.User{\n                {Username: \"user\", Password: \"password123\", FullName: \"Regular User\", Email: \"user@procurement.com\", Role: \"user\"},\n                {Username: \"superuser\", Password: \"password123\", FullName: \"Super User\", Email: \"superuser@procurement.com\", Role: \"superuser\"},\n                {Username: \"manager\", Password: \"password123\", FullName: \"Manager User\", Email: \"manager@procurement.com\", Role: \"manager\"},\n                {Username: \"director\", Password: \"password123\", FullName: \"Director User\", Email: \"director@procurement.com\", Role: \"director\"},\n        }\n\n        for _, user := range users {\n                var existingUser models.User\n                result := DB.Where(\"username = ?\", user.Username).First(&existingUser)\n                if result.Error == gorm.ErrRecordNotFound {\n                        DB.Create(&user)\n                        fmt.Printf(\"Created user: %s\\n\", user.Username)\n                } else {\n                        // Update existing user's email if it's empty\n                        if existingUser.Email == \"\" {\n                                existingUser.Email = user.Email\n                                DB.Save(&existingUser)\n                                fmt.Printf(\"Updated email for user: %s\\n\", user.Username)\n                        }\n                }\n        }\n}\n","size_bytes":2259},"frontend/README.md":{"content":"# React + Vite\n\nThis template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.\n\nCurrently, two official plugins are available:\n\n- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) (or [oxc](https://oxc.rs) when used in [rolldown-vite](https://vite.dev/guide/rolldown)) for Fast Refresh\n- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh\n\n## React Compiler\n\nThe React Compiler is not enabled on this template because of its impact on dev & build performances. To add it, see [this documentation](https://react.dev/learn/react-compiler/installation).\n\n## Expanding the ESLint configuration\n\nIf you are developing a production application, we recommend using TypeScript with type-aware lint rules enabled. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) for information on how to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.\n","size_bytes":1157},"frontend/src/index.css":{"content":"@import url(\"https://fonts.googleapis.com/css2?family=Outfit:wght@100..900&display=swap\")\nlayer(base);\n\n@import \"tailwindcss\";\n\n@custom-variant dark (&:is(.dark *));\n\n@theme {\n  --font-*: initial;\n  --font-outfit: Outfit, sans-serif;\n\n  --breakpoint-*: initial;\n  --breakpoint-2xsm: 375px;\n  --breakpoint-xsm: 425px;\n  --breakpoint-3xl: 2000px;\n  --breakpoint-sm: 640px;\n  --breakpoint-md: 768px;\n  --breakpoint-lg: 1024px;\n  --breakpoint-xl: 1280px;\n  --breakpoint-2xl: 1536px;\n\n  --text-title-2xl: 72px;\n  --text-title-2xl--line-height: 90px;\n  --text-title-xl: 60px;\n  --text-title-xl--line-height: 72px;\n  --text-title-lg: 48px;\n  --text-title-lg--line-height: 60px;\n  --text-title-md: 36px;\n  --text-title-md--line-height: 44px;\n  --text-title-sm: 30px;\n  --text-title-sm--line-height: 38px;\n  --text-theme-xl: 20px;\n  --text-theme-xl--line-height: 30px;\n  --text-theme-sm: 14px;\n  --text-theme-sm--line-height: 20px;\n  --text-theme-xs: 12px;\n  --text-theme-xs--line-height: 18px;\n\n  --color-current: currentColor;\n  --color-transparent: transparent;\n  --color-white: #ffffff;\n  --color-black: #101828;\n\n  --color-brand-25: #f2f7ff;\n  --color-brand-50: #ecf3ff;\n  --color-brand-100: #dde9ff;\n  --color-brand-200: #c2d6ff;\n  --color-brand-300: #9cb9ff;\n  --color-brand-400: #7592ff;\n  --color-brand-500: #465fff;\n  --color-brand-600: #3641f5;\n  --color-brand-700: #2a31d8;\n  --color-brand-800: #252dae;\n  --color-brand-900: #262e89;\n  --color-brand-950: #161950;\n\n  --color-blue-light-25: #f5fbff;\n  --color-blue-light-50: #f0f9ff;\n  --color-blue-light-100: #e0f2fe;\n  --color-blue-light-200: #b9e6fe;\n  --color-blue-light-300: #7cd4fd;\n  --color-blue-light-400: #36bffa;\n  --color-blue-light-500: #0ba5ec;\n  --color-blue-light-600: #0086c9;\n  --color-blue-light-700: #026aa2;\n  --color-blue-light-800: #065986;\n  --color-blue-light-900: #0b4a6f;\n  --color-blue-light-950: #062c41;\n\n  --color-gray-25: #fcfcfd;\n  --color-gray-50: #f9fafb;\n  --color-gray-100: #f2f4f7;\n  --color-gray-200: #e4e7ec;\n  --color-gray-300: #d0d5dd;\n  --color-gray-400: #98a2b3;\n  --color-gray-500: #667085;\n  --color-gray-600: #475467;\n  --color-gray-700: #344054;\n  --color-gray-800: #1d2939;\n  --color-gray-900: #101828;\n  --color-gray-950: #0c111d;\n  --color-gray-dark: #1a2231;\n\n  --color-orange-25: #fffaf5;\n  --color-orange-50: #fff6ed;\n  --color-orange-100: #ffead5;\n  --color-orange-200: #fddcab;\n  --color-orange-300: #feb273;\n  --color-orange-400: #fd853a;\n  --color-orange-500: #fb6514;\n  --color-orange-600: #ec4a0a;\n  --color-orange-700: #c4320a;\n  --color-orange-800: #9c2a10;\n  --color-orange-900: #7e2410;\n  --color-orange-950: #511c10;\n\n  --color-success-25: #f6fef9;\n  --color-success-50: #ecfdf3;\n  --color-success-100: #d1fadf;\n  --color-success-200: #a6f4c5;\n  --color-success-300: #6ce9a6;\n  --color-success-400: #32d583;\n  --color-success-500: #12b76a;\n  --color-success-600: #039855;\n  --color-success-700: #027a48;\n  --color-success-800: #05603a;\n  --color-success-900: #054f31;\n  --color-success-950: #053321;\n\n  --color-error-25: #fffbfa;\n  --color-error-50: #fef3f2;\n  --color-error-100: #fee4e2;\n  --color-error-200: #fecdca;\n  --color-error-300: #fda29b;\n  --color-error-400: #f97066;\n  --color-error-500: #f04438;\n  --color-error-600: #d92d20;\n  --color-error-700: #b42318;\n  --color-error-800: #912018;\n  --color-error-900: #7a271a;\n  --color-error-950: #55160c;\n\n  --color-warning-25: #fffcf5;\n  --color-warning-50: #fffaeb;\n  --color-warning-100: #fef0c7;\n  --color-warning-200: #fedf89;\n  --color-warning-300: #fec84b;\n  --color-warning-400: #fdb022;\n  --color-warning-500: #f79009;\n  --color-warning-600: #dc6803;\n  --color-warning-700: #b54708;\n  --color-warning-800: #93370d;\n  --color-warning-900: #7a2e0e;\n  --color-warning-950: #4e1d09;\n\n  --color-theme-pink-500: #ee46bc;\n\n  --color-theme-purple-500: #7a5af8;\n\n  --shadow-theme-md: 0px 4px 8px -2px rgba(16, 24, 40, 0.1),\n    0px 2px 4px -2px rgba(16, 24, 40, 0.06);\n  --shadow-theme-lg: 0px 12px 16px -4px rgba(16, 24, 40, 0.08),\n    0px 4px 6px -2px rgba(16, 24, 40, 0.03);\n  --shadow-theme-sm: 0px 1px 3px 0px rgba(16, 24, 40, 0.1),\n    0px 1px 2px 0px rgba(16, 24, 40, 0.06);\n  --shadow-theme-xs: 0px 1px 2px 0px rgba(16, 24, 40, 0.05);\n  --shadow-theme-xl: 0px 20px 24px -4px rgba(16, 24, 40, 0.08),\n    0px 8px 8px -4px rgba(16, 24, 40, 0.03);\n  --shadow-datepicker: -5px 0 0 #262d3c, 5px 0 0 #262d3c;\n  --shadow-focus-ring: 0px 0px 0px 4px rgba(70, 95, 255, 0.12);\n  --shadow-slider-navigation: 0px 1px 2px 0px rgba(16, 24, 40, 0.1),\n    0px 1px 3px 0px rgba(16, 24, 40, 0.1);\n  --shadow-tooltip: 0px 4px 6px -2px rgba(16, 24, 40, 0.05),\n    -8px 0px 20px 8px rgba(16, 24, 40, 0.05);\n\n  --drop-shadow-4xl: 0 35px 35px rgba(0, 0, 0, 0.25),\n    0 45px 65px rgba(0, 0, 0, 0.15);\n\n  --z-index-1: 1;\n  --z-index-9: 9;\n  --z-index-99: 99;\n  --z-index-999: 999;\n  --z-index-9999: 9999;\n  --z-index-99999: 99999;\n  --z-index-999999: 999999;\n}\n\n/*\n  The default border color has changed to `currentColor` in Tailwind CSS v4,\n  so we've added these compatibility styles to make sure everything still\n  looks the same as it did with Tailwind CSS v3.\n\n  If we ever want to remove these styles, we need to add an explicit border\n  color utility to any element that depends on these defaults.\n*/\n@layer base {\n  *,\n  ::after,\n  ::before,\n  ::backdrop,\n  ::file-selector-button {\n    border-color: var(--color-gray-200, currentColor);\n  }\n  button:not(:disabled),\n  [role=\"button\"]:not(:disabled) {\n    cursor: pointer;\n  }\n  body {\n    @apply relative font-normal font-outfit z-1 bg-gray-50;\n  }\n}\n\n@utility menu-item {\n  @apply relative flex items-center w-full gap-3 px-3 py-2 font-medium rounded-lg text-theme-sm;\n}\n\n@utility menu-item-active {\n  @apply bg-brand-50 text-brand-500 dark:bg-brand-500/[0.12] dark:text-brand-400;\n}\n\n@utility menu-item-inactive {\n  @apply text-gray-700 hover:bg-gray-100 group-hover:text-gray-700 dark:text-gray-300 dark:hover:bg-white/5 dark:hover:text-gray-300;\n}\n\n@utility menu-item-icon {\n  @apply text-gray-500 group-hover:text-gray-700 dark:text-gray-400;\n}\n\n@utility menu-item-icon-active {\n  @apply text-brand-500 dark:text-brand-400;\n}\n\n@utility menu-item-icon-size {\n  & svg {\n    @apply !size-6;\n  }\n}\n\n@utility menu-item-icon-inactive {\n  @apply text-gray-500 group-hover:text-gray-700 dark:text-gray-400 dark:group-hover:text-gray-300;\n}\n\n@utility menu-item-arrow {\n  @apply relative;\n}\n\n@utility menu-item-arrow-active {\n  @apply rotate-180 text-brand-500 dark:text-brand-400;\n}\n\n@utility menu-item-arrow-inactive {\n  @apply text-gray-500 group-hover:text-gray-700 dark:text-gray-400 dark:group-hover:text-gray-300;\n}\n\n@utility menu-dropdown-item {\n  @apply relative flex items-center gap-3 rounded-lg px-3 py-2.5 text-theme-sm font-medium;\n}\n\n@utility menu-dropdown-item-active {\n  @apply bg-brand-50 text-brand-500 dark:bg-brand-500/[0.12] dark:text-brand-400;\n}\n\n@utility menu-dropdown-item-inactive {\n  @apply text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-white/5;\n}\n\n@utility menu-dropdown-badge {\n  @apply block rounded-full px-2.5 py-0.5 text-xs font-medium uppercase text-brand-500 dark:text-brand-400;\n}\n\n@utility menu-dropdown-badge-active {\n  @apply bg-brand-100 dark:bg-brand-500/20;\n}\n\n@utility menu-dropdown-badge-inactive {\n  @apply bg-brand-50 group-hover:bg-brand-100 dark:bg-brand-500/15 dark:group-hover:bg-brand-500/20;\n}\n@utility no-scrollbar {\n  /* Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\n@utility custom-scrollbar {\n  &::-webkit-scrollbar {\n    @apply size-1.5;\n  }\n\n  &::-webkit-scrollbar-track {\n    @apply rounded-full;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    @apply bg-gray-200 rounded-full dark:bg-gray-700;\n  }\n}\n.dark .custom-scrollbar::-webkit-scrollbar-thumb {\n  background-color: #344054;\n}\n\n@layer utilities {\n  /* For Remove Date Icon */\n  input[type=\"date\"]::-webkit-inner-spin-button,\n  input[type=\"time\"]::-webkit-inner-spin-button,\n  input[type=\"date\"]::-webkit-calendar-picker-indicator,\n  input[type=\"time\"]::-webkit-calendar-picker-indicator {\n    display: none;\n    -webkit-appearance: none;\n  }\n}\n\n.tableCheckbox:checked ~ span span {\n  @apply opacity-100;\n}\n.tableCheckbox:checked ~ span {\n  @apply border-brand-500 bg-brand-500;\n}\n\n/* third-party libraries CSS */\n.apexcharts-legend-text {\n  @apply !text-gray-700 dark:!text-gray-400;\n}\n\n.apexcharts-text {\n  @apply !fill-gray-700 dark:!fill-gray-400;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  @apply gap-1 !rounded-lg !border-gray-200 p-3 !shadow-theme-sm dark:!border-gray-800 dark:!bg-gray-900;\n}\n\n.apexcharts-tooltip-marker {\n  margin-right: 6px;\n  height: 6px;\n  width: 6px;\n}\n.apexcharts-legend-text {\n  @apply !pl-5 !text-gray-700 dark:!text-gray-400;\n}\n.apexcharts-tooltip-series-group {\n  @apply !p-0;\n}\n.apexcharts-tooltip-y-group {\n  @apply !p-0;\n}\n.apexcharts-tooltip-title {\n  @apply !mb-0 !border-b-0 !bg-transparent !p-0 !text-[10px] !leading-4 !text-gray-800 dark:!text-white/90;\n}\n.apexcharts-tooltip-text {\n  @apply !text-theme-xs !text-gray-700 dark:!text-white/90;\n}\n.apexcharts-tooltip-text-y-value {\n  @apply !font-medium;\n}\n\n.apexcharts-gridline {\n  @apply !stroke-gray-100 dark:!stroke-gray-800;\n}\n#chartTwo .apexcharts-datalabels-group {\n  @apply !-translate-y-24;\n}\n#chartTwo .apexcharts-datalabels-group .apexcharts-text {\n  @apply !fill-gray-800 !font-semibold dark:!fill-white/90;\n}\n\n#chartDarkStyle .apexcharts-datalabels-group .apexcharts-text {\n  @apply !fill-gray-800 !font-semibold dark:!fill-white/90;\n}\n\n#chartSixteen .apexcharts-legend {\n  @apply !p-0 !pl-6;\n}\n\n.jvectormap-container {\n  @apply !bg-gray-50 dark:!bg-gray-900;\n}\n.jvectormap-region.jvectormap-element {\n  @apply !fill-gray-300 hover:!fill-brand-500 dark:!fill-gray-700 dark:hover:!fill-brand-500;\n}\n.jvectormap-marker.jvectormap-element {\n  @apply !stroke-gray-200 dark:!stroke-gray-800;\n}\n.jvectormap-tip {\n  @apply !bg-brand-500 !border-none !px-2 !py-1;\n}\n.jvectormap-zoomin,\n.jvectormap-zoomout {\n  @apply !hidden;\n}\n\n.stocks-slider-outer .swiper-button-next:after,\n.stocks-slider-outer .swiper-button-prev:after {\n  @apply hidden;\n}\n\n.stocks-slider-outer .swiper-button-next,\n.stocks-slider-outer .swiper-button-prev {\n  @apply static! mt-0 h-8 w-9 rounded-full border dark:hover:bg-white/[0.05] border-gray-200 !text-gray-700 transition hover:bg-gray-100 dark:border-white/[0.03] dark:bg-gray-800 dark:!text-gray-400  dark:hover:!text-white/90;\n}\n\n.stocks-slider-outer .swiper-button-next.swiper-button-disabled,\n.stocks-slider-outer .swiper-button-prev.swiper-button-disabled {\n  @apply bg-white opacity-50 dark:bg-gray-900;\n}\n\n.stocks-slider-outer .swiper-button-next svg,\n.stocks-slider-outer .swiper-button-prev svg {\n  @apply !h-auto !w-auto;\n}\n\n.flatpickr-wrapper {\n  @apply w-full;\n}\n.flatpickr-calendar {\n  @apply mt-2 !bg-white !rounded-xl !p-5 !border !border-gray-200 !text-gray-500 dark:!bg-gray-dark dark:!border-gray-700 dark:!text-gray-400 dark:!shadow-theme-xl 2xsm:!w-auto;\n}\n\n.flatpickr-months .flatpickr-prev-month:hover svg,\n.flatpickr-months .flatpickr-next-month:hover svg {\n  @apply stroke-brand-500;\n}\n.flatpickr-calendar.arrowTop:before,\n.flatpickr-calendar.arrowTop:after {\n  @apply hidden;\n}\n\n.flatpickr-current-month {\n  @apply !p-0;\n}\n.flatpickr-current-month .cur-month,\n.flatpickr-current-month input.cur-year {\n  @apply !h-auto !pt-0 !text-lg !font-medium !text-gray-800 dark:!text-white/90;\n}\n\n.flatpickr-prev-month,\n.flatpickr-next-month {\n  @apply !p-0;\n}\n\n.flatpickr-weekdays {\n  @apply h-auto mt-6 mb-4 !bg-transparent;\n}\n\n.flatpickr-weekday {\n  @apply !text-theme-sm !font-medium !text-gray-500 dark:!text-gray-400 !bg-transparent;\n}\n\n.flatpickr-day {\n  @apply !flex !items-center !text-theme-sm !font-medium !text-gray-800 dark:!text-white/90 dark:hover:!border-gray-300 dark:hover:!bg-gray-900;\n}\n.flatpickr-day.nextMonthDay,\n.flatpickr-day.prevMonthDay {\n  @apply !text-gray-400;\n}\n\n.flatpickr-months > .flatpickr-month {\n  background: none !important;\n}\n.flatpickr-month .flatpickr-current-month .flatpickr-monthDropdown-months {\n  background: none !important;\n  appearance: none;\n  background-image: none !important;\n  font-weight: 500;\n}\n.flatpickr-month\n  .flatpickr-current-month\n  .flatpickr-monthDropdown-months:focus {\n  outline: none !important;\n  border: 0 !important;\n}\n.flatpickr-months .flatpickr-prev-month,\n.flatpickr-months .flatpickr-next-month {\n  @apply !top-7 dark:!fill-white dark:!text-white !bg-transparent;\n}\n.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month,\n.flatpickr-months .flatpickr-next-month.flatpickr-prev-month {\n  @apply !left-7;\n}\n.flatpickr-months .flatpickr-prev-month.flatpickr-next-month,\n.flatpickr-months .flatpickr-next-month.flatpickr-next-month {\n  @apply !right-7;\n}\n.flatpickr-days {\n  @apply !border-0;\n}\nspan.flatpickr-weekday,\n.flatpickr-months .flatpickr-month {\n  @apply dark:!fill-white dark:!text-white !bg-none;\n}\n.flatpickr-innerContainer {\n  @apply !border-b-0;\n}\n.flatpickr-months .flatpickr-month {\n  @apply !bg-none;\n}\n.flatpickr-day.inRange {\n  box-shadow: -5px 0 0 #f9fafb, 5px 0 0 #f9fafb !important;\n  @apply dark:!shadow-datepicker;\n}\n.flatpickr-day.inRange,\n.flatpickr-day.prevMonthDay.inRange,\n.flatpickr-day.nextMonthDay.inRange,\n.flatpickr-day.today.inRange,\n.flatpickr-day.prevMonthDay.today.inRange,\n.flatpickr-day.nextMonthDay.today.inRange,\n.flatpickr-day:hover,\n.flatpickr-day.prevMonthDay:hover,\n.flatpickr-day.nextMonthDay:hover,\n.flatpickr-day:focus,\n.flatpickr-day.prevMonthDay:focus,\n.flatpickr-day.nextMonthDay:focus {\n  @apply !border-gray-50 !bg-gray-50 dark:!border-0 dark:!border-white/5 dark:!bg-white/5;\n}\n.flatpickr-day.selected,\n.flatpickr-day.startRange,\n.flatpickr-day.selected,\n.flatpickr-day.endRange {\n  @apply !text-white dark:!text-white;\n}\n.flatpickr-day.selected,\n.flatpickr-day.startRange,\n.flatpickr-day.endRange,\n.flatpickr-day.selected.inRange,\n.flatpickr-day.startRange.inRange,\n.flatpickr-day.endRange.inRange,\n.flatpickr-day.selected:focus,\n.flatpickr-day.startRange:focus,\n.flatpickr-day.endRange:focus,\n.flatpickr-day.selected:hover,\n.flatpickr-day.startRange:hover,\n.flatpickr-day.endRange:hover,\n.flatpickr-day.selected.prevMonthDay,\n.flatpickr-day.startRange.prevMonthDay,\n.flatpickr-day.endRange.prevMonthDay,\n.flatpickr-day.selected.nextMonthDay,\n.flatpickr-day.startRange.nextMonthDay,\n.flatpickr-day.endRange.nextMonthDay {\n  background: #465fff;\n  @apply !border-brand-500 !bg-brand-500 hover:!border-brand-500 hover:!bg-brand-500;\n}\n.flatpickr-day.selected.startRange + .endRange:not(:nth-child(7n + 1)),\n.flatpickr-day.startRange.startRange + .endRange:not(:nth-child(7n + 1)),\n.flatpickr-day.endRange.startRange + .endRange:not(:nth-child(7n + 1)) {\n  box-shadow: -10px 0 0 #465fff;\n}\n\n.flatpickr-months .flatpickr-prev-month svg,\n.flatpickr-months .flatpickr-next-month svg,\n.flatpickr-months .flatpickr-prev-month,\n.flatpickr-months .flatpickr-next-month {\n  @apply hover:!fill-none;\n}\n.flatpickr-months .flatpickr-prev-month:hover svg,\n.flatpickr-months .flatpickr-next-month:hover svg {\n  fill: none !important;\n}\n\n.flatpickr-calendar.static {\n  @apply right-0;\n}\n\n.fc .fc-view-harness {\n  @apply max-w-full overflow-x-auto custom-scrollbar;\n}\n.fc-dayGridMonth-view.fc-view.fc-daygrid {\n  @apply min-w-[718px];\n}\n.fc .fc-scrollgrid-section > * {\n  border-right-width: 0;\n  border-bottom-width: 0;\n}\n.fc .fc-scrollgrid {\n  border-left-width: 0;\n}\n.fc .fc-toolbar.fc-header-toolbar {\n  @apply flex-col gap-4 px-6 pt-6 sm:flex-row;\n}\n.fc-button-group {\n  @apply gap-2;\n}\n.fc-button-group .fc-button {\n  @apply flex h-10 w-10 items-center justify-center !rounded-lg border border-gray-200 bg-transparent hover:border-gray-200 hover:bg-gray-50 focus:shadow-none active:!border-gray-200 active:!bg-transparent active:!shadow-none dark:border-gray-800 dark:hover:border-gray-800 dark:hover:bg-gray-900 dark:active:border-gray-800!;\n}\n\n.fc-button-group .fc-button.fc-prev-button:before {\n  @apply inline-block mt-1;\n  content: url(\"data:image/svg+xml,%3Csvg width='25' height='24' viewBox='0 0 25 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M16.0068 6L9.75684 12.25L16.0068 18.5' stroke='%23344054' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E%0A\");\n}\n.fc-button-group .fc-button.fc-next-button:before {\n  @apply inline-block mt-1;\n  content: url(\"data:image/svg+xml,%3Csvg width='25' height='24' viewBox='0 0 25 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M9.50684 19L15.7568 12.75L9.50684 6.5' stroke='%23344054' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E%0A\");\n}\n.dark .fc-button-group .fc-button.fc-prev-button:before {\n  content: url(\"data:image/svg+xml,%3Csvg width='25' height='24' viewBox='0 0 25 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M16.0068 6L9.75684 12.25L16.0068 18.5' stroke='%2398A2B3' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E%0A\");\n}\n.dark .fc-button-group .fc-button.fc-next-button:before {\n  content: url(\"data:image/svg+xml,%3Csvg width='25' height='24' viewBox='0 0 25 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M9.50684 19L15.7568 12.75L9.50684 6.5' stroke='%2398A2B3' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E%0A\");\n}\n.fc-button-group .fc-button .fc-icon {\n  @apply hidden;\n}\n.fc-addEventButton-button {\n  @apply !rounded-lg !border-0 !bg-brand-500 !px-4 !py-2.5 !text-sm !font-medium hover:!bg-brand-600 focus:!shadow-none;\n}\n.fc-toolbar-title {\n  @apply !text-lg !font-medium text-gray-800 dark:text-white/90;\n}\n.fc-header-toolbar.fc-toolbar .fc-toolbar-chunk:last-child {\n  @apply rounded-lg bg-gray-100 p-0.5 dark:bg-gray-900;\n}\n.fc-header-toolbar.fc-toolbar .fc-toolbar-chunk:last-child .fc-button {\n  @apply !h-auto !w-auto rounded-md !border-0 bg-transparent !px-5 !py-2 text-sm font-medium text-gray-500 hover:text-gray-700 focus:!shadow-none dark:text-gray-400;\n}\n.fc-header-toolbar.fc-toolbar\n  .fc-toolbar-chunk:last-child\n  .fc-button.fc-button-active {\n  @apply text-gray-900 bg-white dark:bg-gray-800 dark:text-white;\n}\n.fc-theme-standard th {\n  @apply !border-x-0 border-t !border-gray-200 bg-gray-50 !text-left dark:!border-gray-800 dark:bg-gray-900;\n}\n.fc-theme-standard td,\n.fc-theme-standard .fc-scrollgrid {\n  @apply !border-gray-200 dark:!border-gray-800;\n}\n.fc .fc-col-header-cell-cushion {\n  @apply !px-5 !py-4 text-sm font-medium uppercase text-gray-400;\n}\n.fc .fc-daygrid-day.fc-day-today {\n  @apply bg-transparent;\n}\n.fc .fc-daygrid-day {\n  @apply p-2;\n}\n.fc .fc-daygrid-day.fc-day-today .fc-scrollgrid-sync-inner {\n  @apply rounded-sm bg-gray-100 dark:bg-white/[0.03];\n}\n.fc .fc-daygrid-day-number {\n  @apply !p-3 text-sm font-medium text-gray-700 dark:text-gray-400;\n}\n.fc .fc-daygrid-day-top {\n  @apply !flex-row;\n}\n.fc .fc-day-other .fc-daygrid-day-top {\n  opacity: 1;\n}\n.fc .fc-day-other .fc-daygrid-day-top .fc-daygrid-day-number {\n  @apply text-gray-400 dark:text-white/30;\n}\n.event-fc-color {\n  @apply rounded-lg py-2.5 pl-4 pr-3;\n}\n.event-fc-color .fc-event-title {\n  @apply p-0 text-sm font-normal text-gray-700;\n}\n.fc-daygrid-event-dot {\n  @apply w-1 h-5 ml-0 mr-3 border-none rounded-sm;\n}\n.fc-event {\n  @apply focus:shadow-none;\n}\n.fc-daygrid-event.fc-event-start {\n  @apply !ml-3;\n}\n.event-fc-color.fc-bg-success {\n  @apply border-success-50 bg-success-50;\n}\n.event-fc-color.fc-bg-danger {\n  @apply border-error-50 bg-error-50;\n}\n.event-fc-color.fc-bg-primary {\n  @apply border-brand-50 bg-brand-50;\n}\n.event-fc-color.fc-bg-warning {\n  @apply border-orange-50 bg-orange-50;\n}\n.event-fc-color.fc-bg-success .fc-daygrid-event-dot {\n  @apply bg-success-500;\n}\n.event-fc-color.fc-bg-danger .fc-daygrid-event-dot {\n  @apply bg-error-500;\n}\n.event-fc-color.fc-bg-primary .fc-daygrid-event-dot {\n  @apply bg-brand-500;\n}\n.event-fc-color.fc-bg-warning .fc-daygrid-event-dot {\n  @apply bg-orange-500;\n}\n.fc-direction-ltr .fc-timegrid-slot-label-frame {\n  @apply px-3 py-1.5 text-left text-sm font-medium text-gray-500 dark:text-gray-400;\n}\n.fc .fc-timegrid-axis-cushion {\n  @apply text-sm font-medium text-gray-500 dark:text-gray-400;\n}\n\n.input-date-icon::-webkit-inner-spin-button,\n.input-date-icon::-webkit-calendar-picker-indicator {\n  opacity: 0;\n  -webkit-appearance: none;\n}\n\n.swiper-button-prev svg,\n.swiper-button-next svg {\n  @apply !h-auto !w-auto;\n}\n\n.carouselTwo .swiper-button-next:after,\n.carouselTwo .swiper-button-prev:after,\n.carouselFour .swiper-button-next:after,\n.carouselFour .swiper-button-prev:after {\n  @apply hidden;\n}\n.carouselTwo .swiper-button-next.swiper-button-disabled,\n.carouselTwo .swiper-button-prev.swiper-button-disabled,\n.carouselFour .swiper-button-next.swiper-button-disabled,\n.carouselFour .swiper-button-prev.swiper-button-disabled {\n  @apply bg-white/60 !opacity-100;\n}\n.carouselTwo .swiper-button-next,\n.carouselTwo .swiper-button-prev,\n.carouselFour .swiper-button-next,\n.carouselFour .swiper-button-prev {\n  @apply h-10 w-10 rounded-full border-[0.5px] border-white/10 bg-white/90 !text-gray-700 shadow-slider-navigation backdrop-blur-[10px];\n}\n\n.carouselTwo .swiper-button-prev,\n.carouselFour .swiper-button-prev {\n  @apply !left-3 sm:!left-4;\n}\n\n.carouselTwo .swiper-button-next,\n.carouselFour .swiper-button-next {\n  @apply !right-3 sm:!right-4;\n}\n\n.carouselThree .swiper-pagination,\n.carouselFour .swiper-pagination {\n  @apply !bottom-3 !left-1/2 inline-flex !w-auto -translate-x-1/2 items-center gap-1.5 rounded-[40px] border-[0.5px] border-white/10 bg-white/60 px-2 py-1.5 shadow-slider-navigation backdrop-blur-[10px] sm:!bottom-5;\n}\n\n.carouselThree .swiper-pagination-bullet,\n.carouselFour .swiper-pagination-bullet {\n  @apply !m-0 h-2.5 w-2.5 bg-white opacity-100 shadow-theme-xs duration-200 ease-in-out;\n}\n\n.carouselThree .swiper-pagination-bullet-active,\n.carouselFour .swiper-pagination-bullet-active {\n  @apply w-6.5 rounded-xl;\n}\n\n.form-check-input:checked ~ span {\n  @apply border-[6px] border-brand-500 bg-brand-500 dark:border-brand-500;\n}\n\n.taskCheckbox:checked ~ .box span {\n  @apply opacity-100 bg-brand-500;\n}\n.taskCheckbox:checked ~ p {\n  @apply text-gray-400 line-through;\n}\n.taskCheckbox:checked ~ .box {\n  @apply border-brand-500 bg-brand-500 dark:border-brand-500;\n}\n\n.task {\n  transition: all 0.2s ease; /* Smooth transition for visual effects */\n}\n\n.task {\n  border-radius: 0.75rem;\n  box-shadow: 0px 1px 3px 0px rgba(16, 24, 40, 0.1),\n    0px 1px 2px 0px rgba(16, 24, 40, 0.06);\n  opacity: 0.8;\n  cursor: grabbing; /* Changes the cursor to indicate dragging */\n}\n\n.custom-calendar .fc-h-event {\n  background-color: transparent;\n  border: none;\n  color: black;\n}\n.fc.fc-media-screen {\n  @apply min-h-screen;\n}\n\n.simplebar-scrollbar::before {\n  @apply !bg-gray-200 !rounded-full dark:!bg-gray-700 !opacity-100;\n}\n\n.dark .simplebar-scrollbar::before {\n  @apply !bg-gray-700;\n}\n\n.simplebar-scrollbar.simplebar-visible:before {\n  @apply opacity-100;\n}\n","size_bytes":23043},"backend/handlers/approval.go":{"content":"package handlers\n\nimport (\n        \"log\"\n        \"net/http\"\n        \"procurement-app/database\"\n        \"procurement-app/models\"\n        \"procurement-app/services\"\n        \"time\"\n\n        \"github.com/gin-gonic/gin\"\n)\n\ntype ApprovalInput struct {\n        Status   string `json:\"status\" binding:\"required,oneof=approved rejected\"`\n        Comments string `json:\"comments\"`\n}\n\nfunc CreateApproval(c *gin.Context) {\n        requestID := c.Param(\"id\")\n        userID := c.GetUint(\"user_id\")\n        role := c.GetString(\"role\")\n\n        if role != \"manager\" && role != \"director\" {\n                c.JSON(http.StatusForbidden, gin.H{\"error\": \"Only managers and directors can approve requests\"})\n                return\n        }\n\n        var input ApprovalInput\n        if err := c.ShouldBindJSON(&input); err != nil {\n                c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n                return\n        }\n\n        var request models.ProcurementRequest\n        if err := database.DB.First(&request, requestID).Error; err != nil {\n                c.JSON(http.StatusNotFound, gin.H{\"error\": \"Request not found\"})\n                return\n        }\n\n        if request.Status != \"pending\" {\n                c.JSON(http.StatusBadRequest, gin.H{\"error\": \"Request has already been processed\"})\n                return\n        }\n\n        approval := models.Approval{\n                RequestID:  request.ID,\n                ApproverID: userID,\n                Status:     input.Status,\n                Comments:   input.Comments,\n                ApprovedAt: time.Now(),\n        }\n\n        if err := database.DB.Create(&approval).Error; err != nil {\n                c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Failed to create approval\"})\n                return\n        }\n\n        request.Status = input.Status\n        database.DB.Save(&request)\n\n        database.DB.Preload(\"Approver\").First(&approval, approval.ID)\n\n        // Send email notification to requestor asynchronously\n        go func() {\n                var requestor models.User\n                database.DB.First(&requestor, request.RequestorID)\n                \n                var approver models.User\n                database.DB.First(&approver, userID)\n                \n                if err := services.SendApprovalEmail(&request, &requestor, &approver, input.Status, input.Comments); err != nil {\n                        log.Printf(\"Failed to send approval email: %v\", err)\n                }\n        }()\n\n        c.JSON(http.StatusCreated, approval)\n}\n\nfunc GetApprovals(c *gin.Context) {\n        requestID := c.Param(\"id\")\n\n        var approvals []models.Approval\n        if err := database.DB.Preload(\"Approver\").Where(\"request_id = ?\", requestID).Order(\"created_at desc\").Find(&approvals).Error; err != nil {\n                c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Failed to fetch approvals\"})\n                return\n        }\n\n        c.JSON(http.StatusOK, approvals)\n}\n","size_bytes":2972},"backend/handlers/auth.go":{"content":"package handlers\n\nimport (\n\t\"net/http\"\n\t\"os\"\n\t\"procurement-app/database\"\n\t\"procurement-app/models\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/golang-jwt/jwt/v5\"\n)\n\ntype LoginRequest struct {\n\tUsername string `json:\"username\" binding:\"required\"`\n\tPassword string `json:\"password\" binding:\"required\"`\n}\n\ntype Claims struct {\n\tUserID   uint   `json:\"user_id\"`\n\tUsername string `json:\"username\"`\n\tRole     string `json:\"role\"`\n\tjwt.RegisteredClaims\n}\n\nfunc Login(c *gin.Context) {\n\tvar req LoginRequest\n\tif err := c.ShouldBindJSON(&req); err != nil {\n\t\tc.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n\t\treturn\n\t}\n\n\tvar user models.User\n\tif err := database.DB.Where(\"username = ? AND password = ?\", req.Username, req.Password).First(&user).Error; err != nil {\n\t\tc.JSON(http.StatusUnauthorized, gin.H{\"error\": \"Invalid credentials\"})\n\t\treturn\n\t}\n\n\tclaims := Claims{\n\t\tUserID:   user.ID,\n\t\tUsername: user.Username,\n\t\tRole:     user.Role,\n\t\tRegisteredClaims: jwt.RegisteredClaims{\n\t\t\tExpiresAt: jwt.NewNumericDate(time.Now().Add(24 * time.Hour)),\n\t\t\tIssuedAt:  jwt.NewNumericDate(time.Now()),\n\t\t},\n\t}\n\n\ttoken := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)\n\ttokenString, err := token.SignedString([]byte(getJWTSecret()))\n\tif err != nil {\n\t\tc.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Could not generate token\"})\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, gin.H{\n\t\t\"token\": tokenString,\n\t\t\"user\": gin.H{\n\t\t\t\"id\":        user.ID,\n\t\t\t\"username\":  user.Username,\n\t\t\t\"full_name\": user.FullName,\n\t\t\t\"role\":      user.Role,\n\t\t},\n\t})\n}\n\nfunc getJWTSecret() string {\n\tsecret := os.Getenv(\"JWT_SECRET\")\n\tif secret == \"\" {\n\t\treturn \"your-secret-key-change-in-production\"\n\t}\n\treturn secret\n}\n","size_bytes":1699},"backend/models/request.go":{"content":"package models\n\nimport (\n        \"gorm.io/gorm\"\n)\n\ntype ProcurementRequest struct {\n        gorm.Model\n        ItemName     string    `gorm:\"not null\" json:\"item_name\"`\n        Description  string    `gorm:\"type:text\" json:\"description\"`\n        Quantity     int       `gorm:\"not null\" json:\"quantity\"`\n        UnitPrice    float64   `gorm:\"not null\" json:\"unit_price\"`\n        TotalCost    float64   `gorm:\"not null\" json:\"total_cost\"`\n        Justification string   `gorm:\"type:text\" json:\"justification\"`\n        Status       string    `gorm:\"default:'pending';index\" json:\"status\"` // pending, approved, rejected\n        RequestorID  uint      `gorm:\"not null;index\" json:\"requestor_id\"`\n        Requestor    User      `gorm:\"foreignKey:RequestorID\" json:\"requestor\"`\n        VendorID     *uint     `gorm:\"index\" json:\"vendor_id\"`\n        Vendor       *Vendor   `gorm:\"foreignKey:VendorID\" json:\"vendor,omitempty\"`\n        Approvals    []Approval `gorm:\"foreignKey:RequestID\" json:\"approvals,omitempty\"`\n}\n","size_bytes":1010},"backend/handlers/vendor.go":{"content":"package handlers\n\nimport (\n        \"net/http\"\n        \"procurement-app/database\"\n        \"procurement-app/models\"\n\n        \"github.com/gin-gonic/gin\"\n)\n\ntype CreateVendorInput struct {\n        Name          string  `json:\"name\" binding:\"required\"`\n        ContactPerson string  `json:\"contact_person\" binding:\"required\"`\n        Email         string  `json:\"email\" binding:\"required,email\"`\n        Phone         string  `json:\"phone\"`\n        Category      string  `json:\"category\" binding:\"required\"`\n        Rating        float64 `json:\"rating\"`\n        Address       string  `json:\"address\"`\n        Status        string  `json:\"status\"`\n        Notes         string  `json:\"notes\"`\n}\n\ntype UpdateVendorInput struct {\n        Name          string  `json:\"name\"`\n        ContactPerson string  `json:\"contact_person\"`\n        Email         string  `json:\"email\"`\n        Phone         string  `json:\"phone\"`\n        Category      string  `json:\"category\"`\n        Rating        float64 `json:\"rating\"`\n        Address       string  `json:\"address\"`\n        Status        string  `json:\"status\"`\n        Notes         string  `json:\"notes\"`\n}\n\nfunc GetVendors(c *gin.Context) {\n        // All authenticated users can view vendors (for vendor selection in requests)\n        category := c.Query(\"category\")\n        status := c.Query(\"status\")\n        search := c.Query(\"search\")\n\n        var vendors []models.Vendor\n        query := database.DB\n\n        if category != \"\" {\n                query = query.Where(\"category = ?\", category)\n        }\n\n        if status != \"\" {\n                query = query.Where(\"status = ?\", status)\n        }\n\n        if search != \"\" {\n                query = query.Where(\"name ILIKE ? OR contact_person ILIKE ?\", \"%\"+search+\"%\", \"%\"+search+\"%\")\n        }\n\n        if err := query.Order(\"name asc\").Find(&vendors).Error; err != nil {\n                c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Failed to fetch vendors\"})\n                return\n        }\n\n        c.JSON(http.StatusOK, vendors)\n}\n\nfunc GetVendorByID(c *gin.Context) {\n        // All authenticated users can view vendor details\n        id := c.Param(\"id\")\n\n        var vendor models.Vendor\n        if err := database.DB.Preload(\"Requests.Requestor\").First(&vendor, id).Error; err != nil {\n                c.JSON(http.StatusNotFound, gin.H{\"error\": \"Vendor not found\"})\n                return\n        }\n\n        c.JSON(http.StatusOK, vendor)\n}\n\nfunc CreateVendor(c *gin.Context) {\n        role := c.GetString(\"role\")\n        \n        if role != \"manager\" && role != \"director\" {\n                c.JSON(http.StatusForbidden, gin.H{\"error\": \"Access denied\"})\n                return\n        }\n\n        var input CreateVendorInput\n        if err := c.ShouldBindJSON(&input); err != nil {\n                c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n                return\n        }\n\n        if input.Status == \"\" {\n                input.Status = \"active\"\n        }\n\n        vendor := models.Vendor{\n                Name:          input.Name,\n                ContactPerson: input.ContactPerson,\n                Email:         input.Email,\n                Phone:         input.Phone,\n                Category:      input.Category,\n                Rating:        input.Rating,\n                Address:       input.Address,\n                Status:        input.Status,\n                Notes:         input.Notes,\n        }\n\n        if err := database.DB.Create(&vendor).Error; err != nil {\n                c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Failed to create vendor\"})\n                return\n        }\n\n        c.JSON(http.StatusCreated, vendor)\n}\n\nfunc UpdateVendor(c *gin.Context) {\n        role := c.GetString(\"role\")\n        \n        if role != \"manager\" && role != \"director\" {\n                c.JSON(http.StatusForbidden, gin.H{\"error\": \"Access denied\"})\n                return\n        }\n\n        id := c.Param(\"id\")\n\n        var vendor models.Vendor\n        if err := database.DB.First(&vendor, id).Error; err != nil {\n                c.JSON(http.StatusNotFound, gin.H{\"error\": \"Vendor not found\"})\n                return\n        }\n\n        var input UpdateVendorInput\n        if err := c.ShouldBindJSON(&input); err != nil {\n                c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n                return\n        }\n\n        if input.Name != \"\" {\n                vendor.Name = input.Name\n        }\n        if input.ContactPerson != \"\" {\n                vendor.ContactPerson = input.ContactPerson\n        }\n        if input.Email != \"\" {\n                vendor.Email = input.Email\n        }\n        if input.Phone != \"\" {\n                vendor.Phone = input.Phone\n        }\n        if input.Category != \"\" {\n                vendor.Category = input.Category\n        }\n        if input.Rating > 0 {\n                vendor.Rating = input.Rating\n        }\n        if input.Address != \"\" {\n                vendor.Address = input.Address\n        }\n        if input.Status != \"\" {\n                vendor.Status = input.Status\n        }\n        if input.Notes != \"\" {\n                vendor.Notes = input.Notes\n        }\n\n        if err := database.DB.Save(&vendor).Error; err != nil {\n                c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Failed to update vendor\"})\n                return\n        }\n\n        c.JSON(http.StatusOK, vendor)\n}\n\nfunc DeleteVendor(c *gin.Context) {\n        role := c.GetString(\"role\")\n        \n        if role != \"manager\" && role != \"director\" {\n                c.JSON(http.StatusForbidden, gin.H{\"error\": \"Access denied\"})\n                return\n        }\n\n        id := c.Param(\"id\")\n\n        var vendor models.Vendor\n        if err := database.DB.First(&vendor, id).Error; err != nil {\n                c.JSON(http.StatusNotFound, gin.H{\"error\": \"Vendor not found\"})\n                return\n        }\n\n        if err := database.DB.Delete(&vendor).Error; err != nil {\n                c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Failed to delete vendor\"})\n                return\n        }\n\n        c.JSON(http.StatusOK, gin.H{\"message\": \"Vendor deleted successfully\"})\n}\n","size_bytes":6177},"backend/models/vendor.go":{"content":"package models\n\nimport (\n\t\"gorm.io/gorm\"\n)\n\ntype Vendor struct {\n\tgorm.Model\n\tName            string  `gorm:\"not null\" json:\"name\"`\n\tContactPerson   string  `gorm:\"not null\" json:\"contact_person\"`\n\tEmail           string  `gorm:\"not null\" json:\"email\"`\n\tPhone           string  `json:\"phone\"`\n\tCategory        string  `gorm:\"not null\" json:\"category\"` // IT, Office Supplies, Services, etc.\n\tRating          float64 `gorm:\"default:0\" json:\"rating\"`  // 0-5 rating\n\tAddress         string  `gorm:\"type:text\" json:\"address\"`\n\tTotalOrders     int     `gorm:\"default:0\" json:\"total_orders\"`\n\tTotalSpent      float64 `gorm:\"default:0\" json:\"total_spent\"`\n\tStatus          string  `gorm:\"default:'active'\" json:\"status\"` // active, inactive\n\tNotes           string  `gorm:\"type:text\" json:\"notes\"`\n\tRequests        []ProcurementRequest `gorm:\"foreignKey:VendorID\" json:\"requests,omitempty\"`\n}\n","size_bytes":887},"backend/services/email.go":{"content":"package services\n\nimport (\n        \"context\"\n        \"encoding/base64\"\n        \"encoding/json\"\n        \"fmt\"\n        \"io\"\n        \"net/http\"\n        \"os\"\n        \"procurement-app/models\"\n        \"strings\"\n        \"time\"\n\n        \"golang.org/x/oauth2\"\n        \"google.golang.org/api/gmail/v1\"\n        \"google.golang.org/api/option\"\n)\n\ntype GmailConnectionSettings struct {\n        Settings struct {\n                AccessToken string `json:\"access_token\"`\n                OAuth       struct {\n                        Credentials struct {\n                                AccessToken string `json:\"access_token\"`\n                        } `json:\"credentials\"`\n                } `json:\"oauth\"`\n                ExpiresAt string `json:\"expires_at\"`\n        } `json:\"settings\"`\n}\n\ntype GmailConnectionResponse struct {\n        Items []GmailConnectionSettings `json:\"items\"`\n}\n\nfunc getGmailAccessToken() (string, error) {\n        hostname := os.Getenv(\"REPLIT_CONNECTORS_HOSTNAME\")\n        if hostname == \"\" {\n                hostname = \"connectors.replit.com\"\n        }\n\n        xReplitToken := \"\"\n        if replIdentity := os.Getenv(\"REPL_IDENTITY\"); replIdentity != \"\" {\n                xReplitToken = \"repl \" + replIdentity\n        } else if webReplRenewal := os.Getenv(\"WEB_REPL_RENEWAL\"); webReplRenewal != \"\" {\n                xReplitToken = \"depl \" + webReplRenewal\n        }\n\n        if xReplitToken == \"\" {\n                return \"\", fmt.Errorf(\"X_REPLIT_TOKEN not found for repl/depl\")\n        }\n\n        url := fmt.Sprintf(\"https://%s/api/v2/connection?include_secrets=true&connector_names=google-mail\", hostname)\n        req, err := http.NewRequest(\"GET\", url, nil)\n        if err != nil {\n                return \"\", err\n        }\n\n        req.Header.Set(\"Accept\", \"application/json\")\n        req.Header.Set(\"X_REPLIT_TOKEN\", xReplitToken)\n\n        client := &http.Client{}\n        resp, err := client.Do(req)\n        if err != nil {\n                return \"\", err\n        }\n        defer resp.Body.Close()\n\n        body, err := io.ReadAll(resp.Body)\n        if err != nil {\n                return \"\", err\n        }\n\n        var connResp GmailConnectionResponse\n        if err := json.Unmarshal(body, &connResp); err != nil {\n                return \"\", err\n        }\n\n        if len(connResp.Items) == 0 {\n                return \"\", fmt.Errorf(\"Gmail not connected\")\n        }\n\n        accessToken := connResp.Items[0].Settings.AccessToken\n        if accessToken == \"\" {\n                accessToken = connResp.Items[0].Settings.OAuth.Credentials.AccessToken\n        }\n\n        if accessToken == \"\" {\n                return \"\", fmt.Errorf(\"Gmail access token not found\")\n        }\n\n        return accessToken, nil\n}\n\nfunc createGmailService() (*gmail.Service, error) {\n        ctx := context.Background()\n        accessToken, err := getGmailAccessToken()\n        if err != nil {\n                return nil, err\n        }\n\n        token := &oauth2.Token{\n                AccessToken: accessToken,\n        }\n\n        client := oauth2.NewClient(ctx, oauth2.StaticTokenSource(token))\n        gmailService, err := gmail.NewService(ctx, option.WithHTTPClient(client))\n        if err != nil {\n                return nil, err\n        }\n\n        return gmailService, nil\n}\n\n// func getGmailUserEmail(gmailService *gmail.Service) (string, error) {\n//         profile, err := gmailService.Users.GetProfile(\"me\").Do()\n//         if err != nil {\n//                 return \"\", err\n//         }\n//         return profile.EmailAddress, nil\n// }\n\nfunc sendGmailMessage(to, subject, htmlBody string) error {\n    gmailService, err := createGmailService()\n    if err != nil {\n        return err\n    }\n\n    var message strings.Builder\n    message.WriteString(\"To: \" + to + \"\\r\\n\")\n    message.WriteString(\"Subject: \" + subject + \"\\r\\n\")\n    message.WriteString(\"Date: \" + time.Now().Format(time.RFC1123Z) + \"\\r\\n\")\n    message.WriteString(\"MIME-Version: 1.0\\r\\n\")\n    message.WriteString(\"Content-Type: text/html; charset=UTF-8\\r\\n\")\n    message.WriteString(\"\\r\\n\")\n    message.WriteString(htmlBody)\n\n    var gmailMessage gmail.Message\n    gmailMessage.Raw = base64.RawURLEncoding.EncodeToString([]byte(message.String()))\n\n    _, err = gmailService.Users.Messages.Send(\"me\", &gmailMessage).Do()\n    return err\n}\n\nfunc SendRequestCreatedEmail(request *models.ProcurementRequest, requestor *models.User) error {\n        subject := fmt.Sprintf(\"New Procurement Request: %s\", request.ItemName)\n        htmlContent := fmt.Sprintf(`\n                <h2>New Procurement Request Created</h2>\n                <p>A new procurement request has been submitted and requires approval.</p>\n                <h3>Request Details:</h3>\n                <ul>\n                        <li><strong>Item:</strong> %s</li>\n                        <li><strong>Requestor:</strong> %s (%s)</li>\n                        <li><strong>Quantity:</strong> %d</li>\n                        <li><strong>Unit Price:</strong> Rp %.2f</li>\n                        <li><strong>Total Cost:</strong> Rp %.2f</li>\n                        <li><strong>Status:</strong> %s</li>\n                </ul>\n                <p><strong>Justification:</strong> %s</p>\n                <p>Please review and process this request at your earliest convenience.</p>\n        `, request.ItemName, requestor.FullName, requestor.Role, request.Quantity,\n                request.UnitPrice, request.TotalCost, request.Status, request.Justification)\n\n        return sendGmailMessage(requestor.Email, subject, htmlContent)\n}\n\nfunc SendApprovalEmail(request *models.ProcurementRequest, requestor *models.User, approver *models.User, status string, comments string) error {\n        statusText := \"Approved\"\n        statusEmoji := \"✅\"\n        if status == \"rejected\" {\n                statusText = \"Rejected\"\n                statusEmoji = \"❌\"\n        }\n\n        subject := fmt.Sprintf(\"Request %s: %s\", statusText, request.ItemName)\n        htmlContent := fmt.Sprintf(`\n                <h2>%s Your Procurement Request Has Been %s</h2>\n                <p>Your procurement request has been reviewed and %s.</p>\n                <h3>Request Details:</h3>\n                <ul>\n                        <li><strong>Item:</strong> %s</li>\n                        <li><strong>Total Cost:</strong> Rp %.2f</li>\n                        <li><strong>Status:</strong> %s %s</li>\n                </ul>\n                <h3>Approval Details:</h3>\n                <ul>\n                        <li><strong>Reviewed By:</strong> %s (%s)</li>\n                        <li><strong>Comments:</strong> %s</li>\n                </ul>\n                <p>Thank you for using the procurement system.</p>\n        `, statusEmoji, statusText, statusText, request.ItemName, request.TotalCost,\n                statusEmoji, statusText, approver.FullName, approver.Role, comments)\n\n        return sendGmailMessage(requestor.Email, subject, htmlContent)\n}\n\nfunc SendApproverNotificationEmail(request *models.ProcurementRequest, requestor *models.User, approverEmail string) error {\n        subject := fmt.Sprintf(\"Action Required: Approve Procurement Request - %s\", request.ItemName)\n        htmlContent := fmt.Sprintf(`\n                <h2>New Procurement Request Awaiting Your Approval</h2>\n                <p>A procurement request has been submitted and requires your review.</p>\n                <h3>Request Details:</h3>\n                <ul>\n                        <li><strong>Item:</strong> %s</li>\n                        <li><strong>Requestor:</strong> %s (%s)</li>\n                        <li><strong>Quantity:</strong> %d</li>\n                        <li><strong>Total Cost:</strong> Rp %.2f</li>\n                </ul>\n                <p><strong>Justification:</strong> %s</p>\n                <p>Please log in to the procurement system to review and process this request.</p>\n        `, request.ItemName, requestor.FullName, requestor.Role, request.Quantity,\n                request.TotalCost, request.Justification)\n\n        return sendGmailMessage(approverEmail, subject, htmlContent)\n}\n","size_bytes":8074},"frontend/postcss.config.js":{"content":"export default {\n  plugins: {\n    '@tailwindcss/postcss': {},\n  },\n}\n","size_bytes":69},"frontend/src/components/ecommerce/CountryMap.tsx":{"content":"// react plugin for creating vector maps\nimport { VectorMap } from \"@react-jvectormap/core\";\nimport { worldMill } from \"@react-jvectormap/world\";\n\n// Define the component props\ninterface CountryMapProps {\n  mapColor?: string;\n}\n\nconst CountryMap: React.FC<CountryMapProps> = ({ mapColor }) => {\n  return (\n    <VectorMap\n      map={worldMill}\n      backgroundColor=\"transparent\"\n      markerStyle={{\n        initial: {\n          fill: \"#465FFF\",\n          r: 4, // Custom radius for markers\n        } as any, // Type assertion to bypass strict CSS property checks\n      }}\n      markersSelectable={true}\n      markers={[\n        {\n          latLng: [37.2580397, -104.657039],\n          name: \"United States\",\n          style: {\n            fill: \"#465FFF\",\n            borderWidth: 1,\n            borderColor: \"white\",\n            stroke: \"#383f47\",\n          },\n        },\n        {\n          latLng: [20.7504374, 73.7276105],\n          name: \"India\",\n          style: { fill: \"#465FFF\", borderWidth: 1, borderColor: \"white\" },\n        },\n        {\n          latLng: [53.613, -11.6368],\n          name: \"United Kingdom\",\n          style: { fill: \"#465FFF\", borderWidth: 1, borderColor: \"white\" },\n        },\n        {\n          latLng: [-25.0304388, 115.2092761],\n          name: \"Sweden\",\n          style: {\n            fill: \"#465FFF\",\n            borderWidth: 1,\n            borderColor: \"white\",\n            strokeOpacity: 0,\n          },\n        },\n      ]}\n      zoomOnScroll={false}\n      zoomMax={12}\n      zoomMin={1}\n      zoomAnimate={true}\n      zoomStep={1.5}\n      regionStyle={{\n        initial: {\n          fill: mapColor || \"#D0D5DD\",\n          fillOpacity: 1,\n          fontFamily: \"Outfit\",\n          stroke: \"none\",\n          strokeWidth: 0,\n          strokeOpacity: 0,\n        },\n        hover: {\n          fillOpacity: 0.7,\n          cursor: \"pointer\",\n          fill: \"#465fff\",\n          stroke: \"none\",\n        },\n        selected: {\n          fill: \"#465FFF\",\n        },\n        selectedHover: {},\n      }}\n      regionLabelStyle={{\n        initial: {\n          fill: \"#35373e\",\n          fontWeight: 500,\n          fontSize: \"13px\",\n          stroke: \"none\",\n        },\n        hover: {},\n        selected: {},\n        selectedHover: {},\n      }}\n    />\n  );\n};\n\nexport default CountryMap;\n","size_bytes":2318},"frontend/src/components/ecommerce/MonthlyTarget.tsx":{"content":"import Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\nimport { useState } from \"react\";\nimport { Dropdown } from \"../ui/dropdown/Dropdown\";\nimport { DropdownItem } from \"../ui/dropdown/DropdownItem\";\nimport { MoreDotIcon } from \"../../icons\";\n\nexport default function MonthlyTarget() {\n  const series = [75.55];\n  const options: ApexOptions = {\n    colors: [\"#465FFF\"],\n    chart: {\n      fontFamily: \"Outfit, sans-serif\",\n      type: \"radialBar\",\n      height: 330,\n      sparkline: {\n        enabled: true,\n      },\n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -85,\n        endAngle: 85,\n        hollow: {\n          size: \"80%\",\n        },\n        track: {\n          background: \"#E4E7EC\",\n          strokeWidth: \"100%\",\n          margin: 5, // margin is in pixels\n        },\n        dataLabels: {\n          name: {\n            show: false,\n          },\n          value: {\n            fontSize: \"36px\",\n            fontWeight: \"600\",\n            offsetY: -40,\n            color: \"#1D2939\",\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n    },\n    fill: {\n      type: \"solid\",\n      colors: [\"#465FFF\"],\n    },\n    stroke: {\n      lineCap: \"round\",\n    },\n    labels: [\"Progress\"],\n  };\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  function closeDropdown() {\n    setIsOpen(false);\n  }\n  return (\n    <div className=\"rounded-2xl border border-gray-200 bg-gray-100 dark:border-gray-800 dark:bg-white/[0.03]\">\n      <div className=\"px-5 pt-5 bg-white shadow-default rounded-2xl pb-11 dark:bg-gray-900 sm:px-6 sm:pt-6\">\n        <div className=\"flex justify-between\">\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-white/90\">\n              Monthly Target\n            </h3>\n            <p className=\"mt-1 text-gray-500 text-theme-sm dark:text-gray-400\">\n              Target you’ve set for each month\n            </p>\n          </div>\n          <div className=\"relative inline-block\">\n            <button className=\"dropdown-toggle\" onClick={toggleDropdown}>\n              <MoreDotIcon className=\"text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 size-6\" />\n            </button>\n            <Dropdown\n              isOpen={isOpen}\n              onClose={closeDropdown}\n              className=\"w-40 p-2\"\n            >\n              <DropdownItem\n                onItemClick={closeDropdown}\n                className=\"flex w-full font-normal text-left text-gray-500 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-white/5 dark:hover:text-gray-300\"\n              >\n                View More\n              </DropdownItem>\n              <DropdownItem\n                onItemClick={closeDropdown}\n                className=\"flex w-full font-normal text-left text-gray-500 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-white/5 dark:hover:text-gray-300\"\n              >\n                Delete\n              </DropdownItem>\n            </Dropdown>\n          </div>\n        </div>\n        <div className=\"relative \">\n          <div className=\"max-h-[330px]\" id=\"chartDarkStyle\">\n            <Chart\n              options={options}\n              series={series}\n              type=\"radialBar\"\n              height={330}\n            />\n          </div>\n\n          <span className=\"absolute left-1/2 top-full -translate-x-1/2 -translate-y-[95%] rounded-full bg-success-50 px-3 py-1 text-xs font-medium text-success-600 dark:bg-success-500/15 dark:text-success-500\">\n            +10%\n          </span>\n        </div>\n        <p className=\"mx-auto mt-10 w-full max-w-[380px] text-center text-sm text-gray-500 sm:text-base\">\n          You earn $3287 today, it's higher than last month. Keep up your good\n          work!\n        </p>\n      </div>\n\n      <div className=\"flex items-center justify-center gap-5 px-6 py-3.5 sm:gap-8 sm:py-5\">\n        <div>\n          <p className=\"mb-1 text-center text-gray-500 text-theme-xs dark:text-gray-400 sm:text-sm\">\n            Target\n          </p>\n          <p className=\"flex items-center justify-center gap-1 text-base font-semibold text-gray-800 dark:text-white/90 sm:text-lg\">\n            $20K\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M7.26816 13.6632C7.4056 13.8192 7.60686 13.9176 7.8311 13.9176C7.83148 13.9176 7.83187 13.9176 7.83226 13.9176C8.02445 13.9178 8.21671 13.8447 8.36339 13.6981L12.3635 9.70076C12.6565 9.40797 12.6567 8.9331 12.3639 8.6401C12.0711 8.34711 11.5962 8.34694 11.3032 8.63973L8.5811 11.36L8.5811 2.5C8.5811 2.08579 8.24531 1.75 7.8311 1.75C7.41688 1.75 7.0811 2.08579 7.0811 2.5L7.0811 11.3556L4.36354 8.63975C4.07055 8.34695 3.59568 8.3471 3.30288 8.64009C3.01008 8.93307 3.01023 9.40794 3.30321 9.70075L7.26816 13.6632Z\"\n                fill=\"#D92D20\"\n              />\n            </svg>\n          </p>\n        </div>\n\n        <div className=\"w-px bg-gray-200 h-7 dark:bg-gray-800\"></div>\n\n        <div>\n          <p className=\"mb-1 text-center text-gray-500 text-theme-xs dark:text-gray-400 sm:text-sm\">\n            Revenue\n          </p>\n          <p className=\"flex items-center justify-center gap-1 text-base font-semibold text-gray-800 dark:text-white/90 sm:text-lg\">\n            $20K\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M7.60141 2.33683C7.73885 2.18084 7.9401 2.08243 8.16435 2.08243C8.16475 2.08243 8.16516 2.08243 8.16556 2.08243C8.35773 2.08219 8.54998 2.15535 8.69664 2.30191L12.6968 6.29924C12.9898 6.59203 12.9899 7.0669 12.6971 7.3599C12.4044 7.6529 11.9295 7.65306 11.6365 7.36027L8.91435 4.64004L8.91435 13.5C8.91435 13.9142 8.57856 14.25 8.16435 14.25C7.75013 14.25 7.41435 13.9142 7.41435 13.5L7.41435 4.64442L4.69679 7.36025C4.4038 7.65305 3.92893 7.6529 3.63613 7.35992C3.34333 7.06693 3.34348 6.59206 3.63646 6.29926L7.60141 2.33683Z\"\n                fill=\"#039855\"\n              />\n            </svg>\n          </p>\n        </div>\n\n        <div className=\"w-px bg-gray-200 h-7 dark:bg-gray-800\"></div>\n\n        <div>\n          <p className=\"mb-1 text-center text-gray-500 text-theme-xs dark:text-gray-400 sm:text-sm\">\n            Today\n          </p>\n          <p className=\"flex items-center justify-center gap-1 text-base font-semibold text-gray-800 dark:text-white/90 sm:text-lg\">\n            $20K\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M7.60141 2.33683C7.73885 2.18084 7.9401 2.08243 8.16435 2.08243C8.16475 2.08243 8.16516 2.08243 8.16556 2.08243C8.35773 2.08219 8.54998 2.15535 8.69664 2.30191L12.6968 6.29924C12.9898 6.59203 12.9899 7.0669 12.6971 7.3599C12.4044 7.6529 11.9295 7.65306 11.6365 7.36027L8.91435 4.64004L8.91435 13.5C8.91435 13.9142 8.57856 14.25 8.16435 14.25C7.75013 14.25 7.41435 13.9142 7.41435 13.5L7.41435 4.64442L4.69679 7.36025C4.4038 7.65305 3.92893 7.6529 3.63613 7.35992C3.34333 7.06693 3.34348 6.59206 3.63646 6.29926L7.60141 2.33683Z\"\n                fill=\"#039855\"\n              />\n            </svg>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7862},"frontend/src/components/form/Label.tsx":{"content":"import { FC, ReactNode } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { clsx } from \"clsx\";\n\ninterface LabelProps {\n  htmlFor?: string;\n  children: ReactNode;\n  className?: string;\n}\n\nconst Label: FC<LabelProps> = ({ htmlFor, children, className }) => {\n  return (\n    <label\n      htmlFor={htmlFor}\n      className={clsx(\n        twMerge(\n          \"mb-1.5 block text-sm font-medium text-gray-700 dark:text-gray-400\",\n          className,\n        ),\n      )}\n    >\n      {children}\n    </label>\n  );\n};\n\nexport default Label;\n","size_bytes":545},"frontend/src/components/common/ThemeToggleButton.tsx":{"content":"import { useTheme } from \"../../context/ThemeContext\";\n\nexport const ThemeToggleButton: React.FC = () => {\n  const { toggleTheme } = useTheme();\n\n  return (\n    <button\n      onClick={toggleTheme}\n      className=\"relative flex items-center justify-center text-gray-500 transition-colors bg-white border border-gray-200 rounded-full hover:text-dark-900 h-11 w-11 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-800 dark:bg-gray-900 dark:text-gray-400 dark:hover:bg-gray-800 dark:hover:text-white\"\n    >\n      <svg\n        className=\"hidden dark:block\"\n        width=\"20\"\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M9.99998 1.5415C10.4142 1.5415 10.75 1.87729 10.75 2.2915V3.5415C10.75 3.95572 10.4142 4.2915 9.99998 4.2915C9.58577 4.2915 9.24998 3.95572 9.24998 3.5415V2.2915C9.24998 1.87729 9.58577 1.5415 9.99998 1.5415ZM10.0009 6.79327C8.22978 6.79327 6.79402 8.22904 6.79402 10.0001C6.79402 11.7712 8.22978 13.207 10.0009 13.207C11.772 13.207 13.2078 11.7712 13.2078 10.0001C13.2078 8.22904 11.772 6.79327 10.0009 6.79327ZM5.29402 10.0001C5.29402 7.40061 7.40135 5.29327 10.0009 5.29327C12.6004 5.29327 14.7078 7.40061 14.7078 10.0001C14.7078 12.5997 12.6004 14.707 10.0009 14.707C7.40135 14.707 5.29402 12.5997 5.29402 10.0001ZM15.9813 5.08035C16.2742 4.78746 16.2742 4.31258 15.9813 4.01969C15.6884 3.7268 15.2135 3.7268 14.9207 4.01969L14.0368 4.90357C13.7439 5.19647 13.7439 5.67134 14.0368 5.96423C14.3297 6.25713 14.8045 6.25713 15.0974 5.96423L15.9813 5.08035ZM18.4577 10.0001C18.4577 10.4143 18.1219 10.7501 17.7077 10.7501H16.4577C16.0435 10.7501 15.7077 10.4143 15.7077 10.0001C15.7077 9.58592 16.0435 9.25013 16.4577 9.25013H17.7077C18.1219 9.25013 18.4577 9.58592 18.4577 10.0001ZM14.9207 15.9806C15.2135 16.2735 15.6884 16.2735 15.9813 15.9806C16.2742 15.6877 16.2742 15.2128 15.9813 14.9199L15.0974 14.036C14.8045 13.7431 14.3297 13.7431 14.0368 14.036C13.7439 14.3289 13.7439 14.8038 14.0368 15.0967L14.9207 15.9806ZM9.99998 15.7088C10.4142 15.7088 10.75 16.0445 10.75 16.4588V17.7088C10.75 18.123 10.4142 18.4588 9.99998 18.4588C9.58577 18.4588 9.24998 18.123 9.24998 17.7088V16.4588C9.24998 16.0445 9.58577 15.7088 9.99998 15.7088ZM5.96356 15.0972C6.25646 14.8043 6.25646 14.3295 5.96356 14.0366C5.67067 13.7437 5.1958 13.7437 4.9029 14.0366L4.01902 14.9204C3.72613 15.2133 3.72613 15.6882 4.01902 15.9811C4.31191 16.274 4.78679 16.274 5.07968 15.9811L5.96356 15.0972ZM4.29224 10.0001C4.29224 10.4143 3.95645 10.7501 3.54224 10.7501H2.29224C1.87802 10.7501 1.54224 10.4143 1.54224 10.0001C1.54224 9.58592 1.87802 9.25013 2.29224 9.25013H3.54224C3.95645 9.25013 4.29224 9.58592 4.29224 10.0001ZM4.9029 5.9637C5.1958 6.25659 5.67067 6.25659 5.96356 5.9637C6.25646 5.6708 6.25646 5.19593 5.96356 4.90303L5.07968 4.01915C4.78679 3.72626 4.31191 3.72626 4.01902 4.01915C3.72613 4.31204 3.72613 4.78692 4.01902 5.07981L4.9029 5.9637Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n      <svg\n        className=\"dark:hidden\"\n        width=\"20\"\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M17.4547 11.97L18.1799 12.1611C18.265 11.8383 18.1265 11.4982 17.8401 11.3266C17.5538 11.1551 17.1885 11.1934 16.944 11.4207L17.4547 11.97ZM8.0306 2.5459L8.57989 3.05657C8.80718 2.81209 8.84554 2.44682 8.67398 2.16046C8.50243 1.8741 8.16227 1.73559 7.83948 1.82066L8.0306 2.5459ZM12.9154 13.0035C9.64678 13.0035 6.99707 10.3538 6.99707 7.08524H5.49707C5.49707 11.1823 8.81835 14.5035 12.9154 14.5035V13.0035ZM16.944 11.4207C15.8869 12.4035 14.4721 13.0035 12.9154 13.0035V14.5035C14.8657 14.5035 16.6418 13.7499 17.9654 12.5193L16.944 11.4207ZM16.7295 11.7789C15.9437 14.7607 13.2277 16.9586 10.0003 16.9586V18.4586C13.9257 18.4586 17.2249 15.7853 18.1799 12.1611L16.7295 11.7789ZM10.0003 16.9586C6.15734 16.9586 3.04199 13.8433 3.04199 10.0003H1.54199C1.54199 14.6717 5.32892 18.4586 10.0003 18.4586V16.9586ZM3.04199 10.0003C3.04199 6.77289 5.23988 4.05695 8.22173 3.27114L7.83948 1.82066C4.21532 2.77574 1.54199 6.07486 1.54199 10.0003H3.04199ZM6.99707 7.08524C6.99707 5.52854 7.5971 4.11366 8.57989 3.05657L7.48132 2.03522C6.25073 3.35885 5.49707 5.13487 5.49707 7.08524H6.99707Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </button>\n  );\n};\n","size_bytes":4440},"frontend/src/components/ecommerce/RecentOrders.tsx":{"content":"import {\n  Table,\n  TableBody,\n  TableCell,\n  TableHeader,\n  TableRow,\n} from \"../ui/table\";\nimport Badge from \"../ui/badge/Badge\";\n\n// Define the TypeScript interface for the table rows\ninterface Product {\n  id: number; // Unique identifier for each product\n  name: string; // Product name\n  variants: string; // Number of variants (e.g., \"1 Variant\", \"2 Variants\")\n  category: string; // Category of the product\n  price: string; // Price of the product (as a string with currency symbol)\n  // status: string; // Status of the product\n  image: string; // URL or path to the product image\n  status: \"Delivered\" | \"Pending\" | \"Canceled\"; // Status of the product\n}\n\n// Define the table data using the interface\nconst tableData: Product[] = [\n  {\n    id: 1,\n    name: \"MacBook Pro 13”\",\n    variants: \"2 Variants\",\n    category: \"Laptop\",\n    price: \"$2399.00\",\n    status: \"Delivered\",\n    image: \"/images/product/product-01.jpg\", // Replace with actual image URL\n  },\n  {\n    id: 2,\n    name: \"Apple Watch Ultra\",\n    variants: \"1 Variant\",\n    category: \"Watch\",\n    price: \"$879.00\",\n    status: \"Pending\",\n    image: \"/images/product/product-02.jpg\", // Replace with actual image URL\n  },\n  {\n    id: 3,\n    name: \"iPhone 15 Pro Max\",\n    variants: \"2 Variants\",\n    category: \"SmartPhone\",\n    price: \"$1869.00\",\n    status: \"Delivered\",\n    image: \"/images/product/product-03.jpg\", // Replace with actual image URL\n  },\n  {\n    id: 4,\n    name: \"iPad Pro 3rd Gen\",\n    variants: \"2 Variants\",\n    category: \"Electronics\",\n    price: \"$1699.00\",\n    status: \"Canceled\",\n    image: \"/images/product/product-04.jpg\", // Replace with actual image URL\n  },\n  {\n    id: 5,\n    name: \"AirPods Pro 2nd Gen\",\n    variants: \"1 Variant\",\n    category: \"Accessories\",\n    price: \"$240.00\",\n    status: \"Delivered\",\n    image: \"/images/product/product-05.jpg\", // Replace with actual image URL\n  },\n];\n\nexport default function RecentOrders() {\n  return (\n    <div className=\"overflow-hidden rounded-2xl border border-gray-200 bg-white px-4 pb-3 pt-4 dark:border-gray-800 dark:bg-white/[0.03] sm:px-6\">\n      <div className=\"flex flex-col gap-2 mb-4 sm:flex-row sm:items-center sm:justify-between\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-800 dark:text-white/90\">\n            Recent Orders\n          </h3>\n        </div>\n\n        <div className=\"flex items-center gap-3\">\n          <button className=\"inline-flex items-center gap-2 rounded-lg border border-gray-300 bg-white px-4 py-2.5 text-theme-sm font-medium text-gray-700 shadow-theme-xs hover:bg-gray-50 hover:text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-white/[0.03] dark:hover:text-gray-200\">\n            <svg\n              className=\"stroke-current fill-white dark:fill-gray-800\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 20 20\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M2.29004 5.90393H17.7067\"\n                stroke=\"\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n              <path\n                d=\"M17.7075 14.0961H2.29085\"\n                stroke=\"\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n              <path\n                d=\"M12.0826 3.33331C13.5024 3.33331 14.6534 4.48431 14.6534 5.90414C14.6534 7.32398 13.5024 8.47498 12.0826 8.47498C10.6627 8.47498 9.51172 7.32398 9.51172 5.90415C9.51172 4.48432 10.6627 3.33331 12.0826 3.33331Z\"\n                fill=\"\"\n                stroke=\"\"\n                strokeWidth=\"1.5\"\n              />\n              <path\n                d=\"M7.91745 11.525C6.49762 11.525 5.34662 12.676 5.34662 14.0959C5.34661 15.5157 6.49762 16.6667 7.91745 16.6667C9.33728 16.6667 10.4883 15.5157 10.4883 14.0959C10.4883 12.676 9.33728 11.525 7.91745 11.525Z\"\n                fill=\"\"\n                stroke=\"\"\n                strokeWidth=\"1.5\"\n              />\n            </svg>\n            Filter\n          </button>\n          <button className=\"inline-flex items-center gap-2 rounded-lg border border-gray-300 bg-white px-4 py-2.5 text-theme-sm font-medium text-gray-700 shadow-theme-xs hover:bg-gray-50 hover:text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-white/[0.03] dark:hover:text-gray-200\">\n            See all\n          </button>\n        </div>\n      </div>\n      <div className=\"max-w-full overflow-x-auto\">\n        <Table>\n          {/* Table Header */}\n          <TableHeader className=\"border-gray-100 dark:border-gray-800 border-y\">\n            <TableRow>\n              <TableCell\n                isHeader\n                className=\"py-3 font-medium text-gray-500 text-start text-theme-xs dark:text-gray-400\"\n              >\n                Products\n              </TableCell>\n              <TableCell\n                isHeader\n                className=\"py-3 font-medium text-gray-500 text-start text-theme-xs dark:text-gray-400\"\n              >\n                Category\n              </TableCell>\n              <TableCell\n                isHeader\n                className=\"py-3 font-medium text-gray-500 text-start text-theme-xs dark:text-gray-400\"\n              >\n                Price\n              </TableCell>\n              <TableCell\n                isHeader\n                className=\"py-3 font-medium text-gray-500 text-start text-theme-xs dark:text-gray-400\"\n              >\n                Status\n              </TableCell>\n            </TableRow>\n          </TableHeader>\n\n          {/* Table Body */}\n\n          <TableBody className=\"divide-y divide-gray-100 dark:divide-gray-800\">\n            {tableData.map((product) => (\n              <TableRow key={product.id} className=\"\">\n                <TableCell className=\"py-3\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"h-[50px] w-[50px] overflow-hidden rounded-md\">\n                      <img\n                        src={product.image}\n                        className=\"h-[50px] w-[50px]\"\n                        alt={product.name}\n                      />\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-gray-800 text-theme-sm dark:text-white/90\">\n                        {product.name}\n                      </p>\n                      <span className=\"text-gray-500 text-theme-xs dark:text-gray-400\">\n                        {product.variants}\n                      </span>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell className=\"py-3 text-gray-500 text-theme-sm dark:text-gray-400\">\n                  {product.price}\n                </TableCell>\n                <TableCell className=\"py-3 text-gray-500 text-theme-sm dark:text-gray-400\">\n                  {product.category}\n                </TableCell>\n                <TableCell className=\"py-3 text-gray-500 text-theme-sm dark:text-gray-400\">\n                  <Badge\n                    size=\"sm\"\n                    color={\n                      product.status === \"Delivered\"\n                        ? \"success\"\n                        : product.status === \"Pending\"\n                        ? \"warning\"\n                        : \"error\"\n                    }\n                  >\n                    {product.status}\n                  </Badge>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7684},"frontend/src/pages/Vendors.tsx":{"content":"const Vendors = () => {\n  return (\n    <div>\n      <h1 className=\"text-3xl font-bold text-gray-900\">Vendor Management</h1>\n      <p className=\"mt-2 text-gray-600\">Manage vendor information</p>\n      \n      <div className=\"mt-8 rounded-lg bg-white p-8 shadow text-center\">\n        <p className=\"text-gray-500\">Coming soon...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Vendors;\n","size_bytes":385},"frontend/src/components/ecommerce/EcommerceMetrics.tsx":{"content":"import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  BoxIconLine,\n  GroupIcon,\n} from \"../../icons\";\nimport Badge from \"../ui/badge/Badge\";\n\nexport default function EcommerceMetrics() {\n  return (\n    <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-6\">\n      {/* <!-- Metric Item Start --> */}\n      <div className=\"rounded-2xl border border-gray-200 bg-white p-5 dark:border-gray-800 dark:bg-white/[0.03] md:p-6\">\n        <div className=\"flex items-center justify-center w-12 h-12 bg-gray-100 rounded-xl dark:bg-gray-800\">\n          <GroupIcon className=\"text-gray-800 size-6 dark:text-white/90\" />\n        </div>\n\n        <div className=\"flex items-end justify-between mt-5\">\n          <div>\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n              Customers\n            </span>\n            <h4 className=\"mt-2 font-bold text-gray-800 text-title-sm dark:text-white/90\">\n              3,782\n            </h4>\n          </div>\n          <Badge color=\"success\">\n            <ArrowUpIcon />\n            11.01%\n          </Badge>\n        </div>\n      </div>\n      {/* <!-- Metric Item End --> */}\n\n      {/* <!-- Metric Item Start --> */}\n      <div className=\"rounded-2xl border border-gray-200 bg-white p-5 dark:border-gray-800 dark:bg-white/[0.03] md:p-6\">\n        <div className=\"flex items-center justify-center w-12 h-12 bg-gray-100 rounded-xl dark:bg-gray-800\">\n          <BoxIconLine className=\"text-gray-800 size-6 dark:text-white/90\" />\n        </div>\n        <div className=\"flex items-end justify-between mt-5\">\n          <div>\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n              Orders\n            </span>\n            <h4 className=\"mt-2 font-bold text-gray-800 text-title-sm dark:text-white/90\">\n              5,359\n            </h4>\n          </div>\n\n          <Badge color=\"error\">\n            <ArrowDownIcon />\n            9.05%\n          </Badge>\n        </div>\n      </div>\n      {/* <!-- Metric Item End --> */}\n    </div>\n  );\n}\n","size_bytes":2013},"frontend/src/components/form/form-elements/InputGroup.tsx":{"content":"import ComponentCard from \"../../common/ComponentCard\";\nimport Label from \"../Label\";\nimport Input from \"../input/InputField\";\nimport { EnvelopeIcon } from \"../../../icons\";\nimport PhoneInput from \"../group-input/PhoneInput\";\n\nexport default function InputGroup() {\n  const countries = [\n    { code: \"US\", label: \"+1\" },\n    { code: \"GB\", label: \"+44\" },\n    { code: \"CA\", label: \"+1\" },\n    { code: \"AU\", label: \"+61\" },\n  ];\n  const handlePhoneNumberChange = (phoneNumber: string) => {\n    console.log(\"Updated phone number:\", phoneNumber);\n  };\n  return (\n    <ComponentCard title=\"Input Group\">\n      <div className=\"space-y-6\">\n        <div>\n          <Label>Email</Label>\n          <div className=\"relative\">\n            <Input\n              placeholder=\"info@gmail.com\"\n              type=\"text\"\n              className=\"pl-[62px]\"\n            />\n            <span className=\"absolute left-0 top-1/2 -translate-y-1/2 border-r border-gray-200 px-3.5 py-3 text-gray-500 dark:border-gray-800 dark:text-gray-400\">\n              <EnvelopeIcon className=\"size-6\" />\n            </span>\n          </div>\n        </div>\n        <div>\n          <Label>Phone</Label>\n          <PhoneInput\n            selectPosition=\"start\"\n            countries={countries}\n            placeholder=\"+1 (555) 000-0000\"\n            onChange={handlePhoneNumberChange}\n          />\n        </div>{\" \"}\n        <div>\n          <Label>Phone</Label>\n          <PhoneInput\n            selectPosition=\"end\"\n            countries={countries}\n            placeholder=\"+1 (555) 000-0000\"\n            onChange={handlePhoneNumberChange}\n          />\n        </div>\n      </div>\n    </ComponentCard>\n  );\n}\n","size_bytes":1673},"frontend/src/layout/Backdrop.tsx":{"content":"import { useSidebar } from \"../context/SidebarContext\";\n\nconst Backdrop: React.FC = () => {\n  const { isMobileOpen, toggleMobileSidebar } = useSidebar();\n\n  if (!isMobileOpen) return null;\n\n  return (\n    <div\n      className=\"fixed inset-0 z-40 bg-gray-900/50 lg:hidden\"\n      onClick={toggleMobileSidebar}\n    />\n  );\n};\n\nexport default Backdrop;\n","size_bytes":349},"frontend/src/components/form/form-elements/ToggleSwitch.tsx":{"content":"import ComponentCard from \"../../common/ComponentCard\";\nimport Switch from \"../switch/Switch\";\n\nexport default function ToggleSwitch() {\n  const handleSwitchChange = (checked: boolean) => {\n    console.log(\"Switch is now:\", checked ? \"ON\" : \"OFF\");\n  };\n  return (\n    <ComponentCard title=\"Toggle switch input\">\n      <div className=\"flex gap-4\">\n        <Switch\n          label=\"Default\"\n          defaultChecked={true}\n          onChange={handleSwitchChange}\n        />\n        <Switch\n          label=\"Checked\"\n          defaultChecked={true}\n          onChange={handleSwitchChange}\n        />\n        <Switch label=\"Disabled\" disabled={true} />\n      </div>{\" \"}\n      <div className=\"flex gap-4\">\n        <Switch\n          label=\"Default\"\n          defaultChecked={true}\n          onChange={handleSwitchChange}\n          color=\"gray\"\n        />\n        <Switch\n          label=\"Checked\"\n          defaultChecked={true}\n          onChange={handleSwitchChange}\n          color=\"gray\"\n        />\n        <Switch label=\"Disabled\" disabled={true} color=\"gray\" />\n      </div>\n    </ComponentCard>\n  );\n}\n","size_bytes":1105},"frontend/src/components/charts/line/LineChartOne.tsx":{"content":"import Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\nexport default function LineChartOne() {\n  const options: ApexOptions = {\n    legend: {\n      show: false, // Hide legend\n      position: \"top\",\n      horizontalAlign: \"left\",\n    },\n    colors: [\"#465FFF\", \"#9CB9FF\"], // Define line colors\n    chart: {\n      fontFamily: \"Outfit, sans-serif\",\n      height: 310,\n      type: \"line\", // Set the chart type to 'line'\n      toolbar: {\n        show: false, // Hide chart toolbar\n      },\n    },\n    stroke: {\n      curve: \"straight\", // Define the line style (straight, smooth, or step)\n      width: [2, 2], // Line width for each dataset\n    },\n\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        opacityFrom: 0.55,\n        opacityTo: 0,\n      },\n    },\n    markers: {\n      size: 0, // Size of the marker points\n      strokeColors: \"#fff\", // Marker border color\n      strokeWidth: 2,\n      hover: {\n        size: 6, // Marker size on hover\n      },\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: false, // Hide grid lines on x-axis\n        },\n      },\n      yaxis: {\n        lines: {\n          show: true, // Show grid lines on y-axis\n        },\n      },\n    },\n    dataLabels: {\n      enabled: false, // Disable data labels\n    },\n    tooltip: {\n      enabled: true, // Enable tooltip\n      x: {\n        format: \"dd MMM yyyy\", // Format for x-axis tooltip\n      },\n    },\n    xaxis: {\n      type: \"category\", // Category-based x-axis\n      categories: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ],\n      axisBorder: {\n        show: false, // Hide x-axis border\n      },\n      axisTicks: {\n        show: false, // Hide x-axis ticks\n      },\n      tooltip: {\n        enabled: false, // Disable tooltip for x-axis points\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          fontSize: \"12px\", // Adjust font size for y-axis labels\n          colors: [\"#6B7280\"], // Color of the labels\n        },\n      },\n      title: {\n        text: \"\", // Remove y-axis title\n        style: {\n          fontSize: \"0px\",\n        },\n      },\n    },\n  };\n\n  const series = [\n    {\n      name: \"Sales\",\n      data: [180, 190, 170, 160, 175, 165, 170, 205, 230, 210, 240, 235],\n    },\n    {\n      name: \"Revenue\",\n      data: [40, 30, 50, 40, 55, 40, 70, 100, 110, 120, 150, 140],\n    },\n  ];\n  return (\n    <div className=\"max-w-full overflow-x-auto custom-scrollbar\">\n      <div id=\"chartEight\" className=\"min-w-[1000px]\">\n        <Chart options={options} series={series} type=\"area\" height={310} />\n      </div>\n    </div>\n  );\n}\n","size_bytes":2735},"frontend/src/hooks/useGoBack.ts":{"content":"import { useNavigate } from \"react-router\";\n\nconst useGoBack = () => {\n  const navigate = useNavigate();\n\n  const goBack = () => {\n    if (window.history.state && window.history.state.idx > 0) {\n      navigate(-1); // Go back to the previous page\n    } else {\n      navigate(\"/\"); // Redirect to home if no history exists\n    }\n  };\n\n  return goBack;\n};\n\nexport default useGoBack;\n","size_bytes":381},"frontend/src/components/common/ComponentCard.tsx":{"content":"interface ComponentCardProps {\n  title: string;\n  children: React.ReactNode;\n  className?: string; // Additional custom classes for styling\n  desc?: string; // Description text\n}\n\nconst ComponentCard: React.FC<ComponentCardProps> = ({\n  title,\n  children,\n  className = \"\",\n  desc = \"\",\n}) => {\n  return (\n    <div\n      className={`rounded-2xl border border-gray-200 bg-white dark:border-gray-800 dark:bg-white/[0.03] ${className}`}\n    >\n      {/* Card Header */}\n      <div className=\"px-6 py-5\">\n        <h3 className=\"text-base font-medium text-gray-800 dark:text-white/90\">\n          {title}\n        </h3>\n        {desc && (\n          <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n            {desc}\n          </p>\n        )}\n      </div>\n\n      {/* Card Body */}\n      <div className=\"p-4 border-t border-gray-100 dark:border-gray-800 sm:p-6\">\n        <div className=\"space-y-6\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComponentCard;\n","size_bytes":982},"frontend/src/components/form/form-elements/InputStates.tsx":{"content":"import { useState } from \"react\";\nimport ComponentCard from \"../../common/ComponentCard\";\nimport Input from \"../input/InputField\";\nimport Label from \"../Label\";\nexport default function InputStates() {\n  const [email, setEmail] = useState(\"\");\n  const [emailTwo, setEmailTwo] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  // Simulate a validation check\n  const validateEmail = (value: string) => {\n    const isValidEmail =\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(value);\n    setError(!isValidEmail);\n    return isValidEmail;\n  };\n\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setEmail(value);\n    validateEmail(value);\n  };\n  const handleEmailTwoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setEmailTwo(value);\n    validateEmail(value);\n  };\n  return (\n    <ComponentCard\n      title=\"Input States\"\n      desc=\"Validation styles for error, success and disabled states on form controls.\"\n    >\n      <div className=\"space-y-5 sm:space-y-6\">\n        {/* Error Input */}\n        <div>\n          <Label>Email</Label>\n          <Input\n            type=\"email\"\n            value={email}\n            error={error}\n            onChange={handleEmailChange}\n            placeholder=\"Enter your email\"\n            hint={error ? \"This is an invalid email address.\" : \"\"}\n          />\n        </div>\n\n        {/* Success Input */}\n        <div>\n          <Label>Email</Label>\n          <Input\n            type=\"email\"\n            value={emailTwo}\n            success={!error}\n            onChange={handleEmailTwoChange}\n            placeholder=\"Enter your email\"\n            hint={!error ? \"This is an success message.\" : \"\"}\n          />\n        </div>\n\n        {/* Disabled Input */}\n        <div>\n          <Label>Email</Label>\n          <Input\n            type=\"text\"\n            value=\"disabled@example.com\"\n            disabled={true}\n            placeholder=\"Disabled email\"\n          />\n        </div>\n      </div>\n    </ComponentCard>\n  );\n}\n","size_bytes":2092},"frontend/src/pages/Tables/BasicTables.tsx":{"content":"import PageBreadcrumb from \"../../components/common/PageBreadCrumb\";\nimport ComponentCard from \"../../components/common/ComponentCard\";\nimport PageMeta from \"../../components/common/PageMeta\";\nimport BasicTableOne from \"../../components/tables/BasicTables/BasicTableOne\";\n\nexport default function BasicTables() {\n  return (\n    <>\n      <PageMeta\n        title=\"React.js Basic Tables Dashboard | TailAdmin - Next.js Admin Dashboard Template\"\n        description=\"This is React.js Basic Tables Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Basic Tables\" />\n      <div className=\"space-y-6\">\n        <ComponentCard title=\"Basic Table 1\">\n          <BasicTableOne />\n        </ComponentCard>\n      </div>\n    </>\n  );\n}\n","size_bytes":792},"frontend/src/pages/Calendar.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { EventInput, DateSelectArg, EventClickArg } from \"@fullcalendar/core\";\nimport { Modal } from \"../components/ui/modal\";\nimport { useModal } from \"../hooks/useModal\";\nimport PageMeta from \"../components/common/PageMeta\";\n\ninterface CalendarEvent extends EventInput {\n  extendedProps: {\n    calendar: string;\n  };\n}\n\nconst Calendar: React.FC = () => {\n  const [selectedEvent, setSelectedEvent] = useState<CalendarEvent | null>(\n    null\n  );\n  const [eventTitle, setEventTitle] = useState(\"\");\n  const [eventStartDate, setEventStartDate] = useState(\"\");\n  const [eventEndDate, setEventEndDate] = useState(\"\");\n  const [eventLevel, setEventLevel] = useState(\"\");\n  const [events, setEvents] = useState<CalendarEvent[]>([]);\n  const calendarRef = useRef<FullCalendar>(null);\n  const { isOpen, openModal, closeModal } = useModal();\n\n  const calendarsEvents = {\n    Danger: \"danger\",\n    Success: \"success\",\n    Primary: \"primary\",\n    Warning: \"warning\",\n  };\n\n  useEffect(() => {\n    // Initialize with some events\n    setEvents([\n      {\n        id: \"1\",\n        title: \"Event Conf.\",\n        start: new Date().toISOString().split(\"T\")[0],\n        extendedProps: { calendar: \"Danger\" },\n      },\n      {\n        id: \"2\",\n        title: \"Meeting\",\n        start: new Date(Date.now() + 86400000).toISOString().split(\"T\")[0],\n        extendedProps: { calendar: \"Success\" },\n      },\n      {\n        id: \"3\",\n        title: \"Workshop\",\n        start: new Date(Date.now() + 172800000).toISOString().split(\"T\")[0],\n        end: new Date(Date.now() + 259200000).toISOString().split(\"T\")[0],\n        extendedProps: { calendar: \"Primary\" },\n      },\n    ]);\n  }, []);\n\n  const handleDateSelect = (selectInfo: DateSelectArg) => {\n    resetModalFields();\n    setEventStartDate(selectInfo.startStr);\n    setEventEndDate(selectInfo.endStr || selectInfo.startStr);\n    openModal();\n  };\n\n  const handleEventClick = (clickInfo: EventClickArg) => {\n    const event = clickInfo.event;\n    setSelectedEvent(event as unknown as CalendarEvent);\n    setEventTitle(event.title);\n    setEventStartDate(event.start?.toISOString().split(\"T\")[0] || \"\");\n    setEventEndDate(event.end?.toISOString().split(\"T\")[0] || \"\");\n    setEventLevel(event.extendedProps.calendar);\n    openModal();\n  };\n\n  const handleAddOrUpdateEvent = () => {\n    if (selectedEvent) {\n      // Update existing event\n      setEvents((prevEvents) =>\n        prevEvents.map((event) =>\n          event.id === selectedEvent.id\n            ? {\n                ...event,\n                title: eventTitle,\n                start: eventStartDate,\n                end: eventEndDate,\n                extendedProps: { calendar: eventLevel },\n              }\n            : event\n        )\n      );\n    } else {\n      // Add new event\n      const newEvent: CalendarEvent = {\n        id: Date.now().toString(),\n        title: eventTitle,\n        start: eventStartDate,\n        end: eventEndDate,\n        allDay: true,\n        extendedProps: { calendar: eventLevel },\n      };\n      setEvents((prevEvents) => [...prevEvents, newEvent]);\n    }\n    closeModal();\n    resetModalFields();\n  };\n\n  const resetModalFields = () => {\n    setEventTitle(\"\");\n    setEventStartDate(\"\");\n    setEventEndDate(\"\");\n    setEventLevel(\"\");\n    setSelectedEvent(null);\n  };\n\n  return (\n    <>\n      <PageMeta\n        title=\"React.js Calendar Dashboard | TailAdmin - Next.js Admin Dashboard Template\"\n        description=\"This is React.js Calendar Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <div className=\"rounded-2xl border  border-gray-200 bg-white dark:border-gray-800 dark:bg-white/[0.03]\">\n        <div className=\"custom-calendar\">\n          <FullCalendar\n            ref={calendarRef}\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            initialView=\"dayGridMonth\"\n            headerToolbar={{\n              left: \"prev,next addEventButton\",\n              center: \"title\",\n              right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n            }}\n            events={events}\n            selectable={true}\n            select={handleDateSelect}\n            eventClick={handleEventClick}\n            eventContent={renderEventContent}\n            customButtons={{\n              addEventButton: {\n                text: \"Add Event +\",\n                click: openModal,\n              },\n            }}\n          />\n        </div>\n        <Modal\n          isOpen={isOpen}\n          onClose={closeModal}\n          className=\"max-w-[700px] p-6 lg:p-10\"\n        >\n          <div className=\"flex flex-col px-2 overflow-y-auto custom-scrollbar\">\n            <div>\n              <h5 className=\"mb-2 font-semibold text-gray-800 modal-title text-theme-xl dark:text-white/90 lg:text-2xl\">\n                {selectedEvent ? \"Edit Event\" : \"Add Event\"}\n              </h5>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                Plan your next big moment: schedule or edit an event to stay on\n                track\n              </p>\n            </div>\n            <div className=\"mt-8\">\n              <div>\n                <div>\n                  <label className=\"mb-1.5 block text-sm font-medium text-gray-700 dark:text-gray-400\">\n                    Event Title\n                  </label>\n                  <input\n                    id=\"event-title\"\n                    type=\"text\"\n                    value={eventTitle}\n                    onChange={(e) => setEventTitle(e.target.value)}\n                    className=\"dark:bg-dark-900 h-11 w-full rounded-lg border border-gray-300 bg-transparent px-4 py-2.5 text-sm text-gray-800 shadow-theme-xs placeholder:text-gray-400 focus:border-brand-300 focus:outline-hidden focus:ring-3 focus:ring-brand-500/10 dark:border-gray-700 dark:bg-gray-900 dark:text-white/90 dark:placeholder:text-white/30 dark:focus:border-brand-800\"\n                  />\n                </div>\n              </div>\n              <div className=\"mt-6\">\n                <label className=\"block mb-4 text-sm font-medium text-gray-700 dark:text-gray-400\">\n                  Event Color\n                </label>\n                <div className=\"flex flex-wrap items-center gap-4 sm:gap-5\">\n                  {Object.entries(calendarsEvents).map(([key, value]) => (\n                    <div key={key} className=\"n-chk\">\n                      <div\n                        className={`form-check form-check-${value} form-check-inline`}\n                      >\n                        <label\n                          className=\"flex items-center text-sm text-gray-700 form-check-label dark:text-gray-400\"\n                          htmlFor={`modal${key}`}\n                        >\n                          <span className=\"relative\">\n                            <input\n                              className=\"sr-only form-check-input\"\n                              type=\"radio\"\n                              name=\"event-level\"\n                              value={key}\n                              id={`modal${key}`}\n                              checked={eventLevel === key}\n                              onChange={() => setEventLevel(key)}\n                            />\n                            <span className=\"flex items-center justify-center w-5 h-5 mr-2 border border-gray-300 rounded-full box dark:border-gray-700\">\n                              <span\n                                className={`h-2 w-2 rounded-full bg-white ${\n                                  eventLevel === key ? \"block\" : \"hidden\"\n                                }`}\n                              ></span>\n                            </span>\n                          </span>\n                          {key}\n                        </label>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"mt-6\">\n                <label className=\"mb-1.5 block text-sm font-medium text-gray-700 dark:text-gray-400\">\n                  Enter Start Date\n                </label>\n                <div className=\"relative\">\n                  <input\n                    id=\"event-start-date\"\n                    type=\"date\"\n                    value={eventStartDate}\n                    onChange={(e) => setEventStartDate(e.target.value)}\n                    className=\"dark:bg-dark-900 h-11 w-full appearance-none rounded-lg border border-gray-300 bg-transparent bg-none px-4 py-2.5 pl-4 pr-11 text-sm text-gray-800 shadow-theme-xs placeholder:text-gray-400 focus:border-brand-300 focus:outline-hidden focus:ring-3 focus:ring-brand-500/10 dark:border-gray-700 dark:bg-gray-900 dark:text-white/90 dark:placeholder:text-white/30 dark:focus:border-brand-800\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"mt-6\">\n                <label className=\"mb-1.5 block text-sm font-medium text-gray-700 dark:text-gray-400\">\n                  Enter End Date\n                </label>\n                <div className=\"relative\">\n                  <input\n                    id=\"event-end-date\"\n                    type=\"date\"\n                    value={eventEndDate}\n                    onChange={(e) => setEventEndDate(e.target.value)}\n                    className=\"dark:bg-dark-900 h-11 w-full appearance-none rounded-lg border border-gray-300 bg-transparent bg-none px-4 py-2.5 pl-4 pr-11 text-sm text-gray-800 shadow-theme-xs placeholder:text-gray-400 focus:border-brand-300 focus:outline-hidden focus:ring-3 focus:ring-brand-500/10 dark:border-gray-700 dark:bg-gray-900 dark:text-white/90 dark:placeholder:text-white/30 dark:focus:border-brand-800\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-3 mt-6 modal-footer sm:justify-end\">\n              <button\n                onClick={closeModal}\n                type=\"button\"\n                className=\"flex w-full justify-center rounded-lg border border-gray-300 bg-white px-4 py-2.5 text-sm font-medium text-gray-700 hover:bg-gray-50 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-white/[0.03] sm:w-auto\"\n              >\n                Close\n              </button>\n              <button\n                onClick={handleAddOrUpdateEvent}\n                type=\"button\"\n                className=\"btn btn-success btn-update-event flex w-full justify-center rounded-lg bg-brand-500 px-4 py-2.5 text-sm font-medium text-white hover:bg-brand-600 sm:w-auto\"\n              >\n                {selectedEvent ? \"Update Changes\" : \"Add Event\"}\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    </>\n  );\n};\n\nconst renderEventContent = (eventInfo: any) => {\n  const colorClass = `fc-bg-${eventInfo.event.extendedProps.calendar.toLowerCase()}`;\n  return (\n    <div\n      className={`event-fc-color flex fc-event-main ${colorClass} p-1 rounded-sm`}\n    >\n      <div className=\"fc-daygrid-event-dot\"></div>\n      <div className=\"fc-event-time\">{eventInfo.timeText}</div>\n      <div className=\"fc-event-title\">{eventInfo.event.title}</div>\n    </div>\n  );\n};\n\nexport default Calendar;\n","size_bytes":11482},"frontend/src/pages/UserProfiles.tsx":{"content":"import PageBreadcrumb from \"../components/common/PageBreadCrumb\";\nimport UserMetaCard from \"../components/UserProfile/UserMetaCard\";\nimport UserInfoCard from \"../components/UserProfile/UserInfoCard\";\nimport UserAddressCard from \"../components/UserProfile/UserAddressCard\";\nimport PageMeta from \"../components/common/PageMeta\";\n\nexport default function UserProfiles() {\n  return (\n    <>\n      <PageMeta\n        title=\"React.js Profile Dashboard | TailAdmin - Next.js Admin Dashboard Template\"\n        description=\"This is React.js Profile Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Profile\" />\n      <div className=\"rounded-2xl border border-gray-200 bg-white p-5 dark:border-gray-800 dark:bg-white/[0.03] lg:p-6\">\n        <h3 className=\"mb-5 text-lg font-semibold text-gray-800 dark:text-white/90 lg:mb-7\">\n          Profile\n        </h3>\n        <div className=\"space-y-6\">\n          <UserMetaCard />\n          <UserInfoCard />\n          <UserAddressCard />\n        </div>\n      </div>\n    </>\n  );\n}\n","size_bytes":1081},"frontend/src/pages/UiElements/Alerts.tsx":{"content":"import PageBreadcrumb from \"../../components/common/PageBreadCrumb\";\nimport ComponentCard from \"../../components/common/ComponentCard\";\nimport Alert from \"../../components/ui/alert/Alert\";\nimport PageMeta from \"../../components/common/PageMeta\";\n\nexport default function Alerts() {\n  return (\n    <>\n      <PageMeta\n        title=\"React.js Alerts Dashboard | TailAdmin - React.js Admin Dashboard Template\"\n        description=\"This is React.js Alerts Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Alerts\" />\n      <div className=\"space-y-5 sm:space-y-6\">\n        <ComponentCard title=\"Success Alert\">\n          <Alert\n            variant=\"success\"\n            title=\"Success Message\"\n            message=\"Be cautious when performing this action.\"\n            showLink={true}\n            linkHref=\"/\"\n            linkText=\"Learn more\"\n          />\n          <Alert\n            variant=\"success\"\n            title=\"Success Message\"\n            message=\"Be cautious when performing this action.\"\n            showLink={false}\n          />\n        </ComponentCard>\n        <ComponentCard title=\"Warning Alert\">\n          <Alert\n            variant=\"warning\"\n            title=\"Warning Message\"\n            message=\"Be cautious when performing this action.\"\n            showLink={true}\n            linkHref=\"/\"\n            linkText=\"Learn more\"\n          />\n          <Alert\n            variant=\"warning\"\n            title=\"Warning Message\"\n            message=\"Be cautious when performing this action.\"\n            showLink={false}\n          />\n        </ComponentCard>{\" \"}\n        <ComponentCard title=\"Error Alert\">\n          <Alert\n            variant=\"error\"\n            title=\"Error Message\"\n            message=\"Be cautious when performing this action.\"\n            showLink={true}\n            linkHref=\"/\"\n            linkText=\"Learn more\"\n          />\n          <Alert\n            variant=\"error\"\n            title=\"Error Message\"\n            message=\"Be cautious when performing this action.\"\n            showLink={false}\n          />\n        </ComponentCard>{\" \"}\n        <ComponentCard title=\"Info Alert\">\n          <Alert\n            variant=\"info\"\n            title=\"Info Message\"\n            message=\"Be cautious when performing this action.\"\n            showLink={true}\n            linkHref=\"/\"\n            linkText=\"Learn more\"\n          />\n          <Alert\n            variant=\"info\"\n            title=\"Info Message\"\n            message=\"Be cautious when performing this action.\"\n            showLink={false}\n          />\n        </ComponentCard>\n      </div>\n    </>\n  );\n}\n","size_bytes":2663},"frontend/src/pages/Procurement/Vendors.tsx":{"content":"const Vendors = () => {\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold text-gray-900\">Vendors</h1>\n      <p className=\"mt-2 text-gray-600\">Manage vendor information</p>\n      <div className=\"mt-6 rounded-lg bg-gray-50 p-8 text-center\">\n        <p className=\"text-gray-500\">Coming soon...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Vendors;\n","size_bytes":379},"frontend/src/layout/AppSidebar.tsx":{"content":"import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Link, useLocation } from \"react-router\";\n\n// Assume these icons are imported from an icon library\nimport {\n  BoxCubeIcon,\n  CalenderIcon,\n  ChevronDownIcon,\n  GridIcon,\n  HorizontaLDots,\n  ListIcon,\n  PageIcon,\n  PieChartIcon,\n  PlugInIcon,\n  TableIcon,\n  UserCircleIcon,\n} from \"../icons\";\nimport { useSidebar } from \"../context/SidebarContext\";\nimport SidebarWidget from \"./SidebarWidget\";\n\ntype NavItem = {\n  name: string;\n  icon: React.ReactNode;\n  path?: string;\n  subItems?: { name: string; path: string; pro?: boolean; new?: boolean }[];\n};\n\nconst navItems: NavItem[] = [\n  {\n    icon: <GridIcon />,\n    name: \"Dashboard\",\n    subItems: [{ name: \"Ecommerce\", path: \"/\", pro: false }],\n  },\n  {\n    icon: <CalenderIcon />,\n    name: \"Calendar\",\n    path: \"/calendar\",\n  },\n  {\n    icon: <UserCircleIcon />,\n    name: \"User Profile\",\n    path: \"/profile\",\n  },\n  {\n    name: \"Forms\",\n    icon: <ListIcon />,\n    subItems: [{ name: \"Form Elements\", path: \"/form-elements\", pro: false }],\n  },\n  {\n    name: \"Tables\",\n    icon: <TableIcon />,\n    subItems: [{ name: \"Basic Tables\", path: \"/basic-tables\", pro: false }],\n  },\n  {\n    name: \"Pages\",\n    icon: <PageIcon />,\n    subItems: [\n      { name: \"Blank Page\", path: \"/blank\", pro: false },\n      { name: \"404 Error\", path: \"/error-404\", pro: false },\n    ],\n  },\n];\n\nconst othersItems: NavItem[] = [\n  {\n    icon: <PieChartIcon />,\n    name: \"Charts\",\n    subItems: [\n      { name: \"Line Chart\", path: \"/line-chart\", pro: false },\n      { name: \"Bar Chart\", path: \"/bar-chart\", pro: false },\n    ],\n  },\n  {\n    icon: <BoxCubeIcon />,\n    name: \"UI Elements\",\n    subItems: [\n      { name: \"Alerts\", path: \"/alerts\", pro: false },\n      { name: \"Avatar\", path: \"/avatars\", pro: false },\n      { name: \"Badge\", path: \"/badge\", pro: false },\n      { name: \"Buttons\", path: \"/buttons\", pro: false },\n      { name: \"Images\", path: \"/images\", pro: false },\n      { name: \"Videos\", path: \"/videos\", pro: false },\n    ],\n  },\n  {\n    icon: <PlugInIcon />,\n    name: \"Authentication\",\n    subItems: [\n      { name: \"Sign In\", path: \"/signin\", pro: false },\n      { name: \"Sign Up\", path: \"/signup\", pro: false },\n    ],\n  },\n];\n\nconst AppSidebar: React.FC = () => {\n  const { isExpanded, isMobileOpen, isHovered, setIsHovered } = useSidebar();\n  const location = useLocation();\n\n  const [openSubmenu, setOpenSubmenu] = useState<{\n    type: \"main\" | \"others\";\n    index: number;\n  } | null>(null);\n  const [subMenuHeight, setSubMenuHeight] = useState<Record<string, number>>(\n    {}\n  );\n  const subMenuRefs = useRef<Record<string, HTMLDivElement | null>>({});\n\n  // const isActive = (path: string) => location.pathname === path;\n  const isActive = useCallback(\n    (path: string) => location.pathname === path,\n    [location.pathname]\n  );\n\n  useEffect(() => {\n    let submenuMatched = false;\n    [\"main\", \"others\"].forEach((menuType) => {\n      const items = menuType === \"main\" ? navItems : othersItems;\n      items.forEach((nav, index) => {\n        if (nav.subItems) {\n          nav.subItems.forEach((subItem) => {\n            if (isActive(subItem.path)) {\n              setOpenSubmenu({\n                type: menuType as \"main\" | \"others\",\n                index,\n              });\n              submenuMatched = true;\n            }\n          });\n        }\n      });\n    });\n\n    if (!submenuMatched) {\n      setOpenSubmenu(null);\n    }\n  }, [location, isActive]);\n\n  useEffect(() => {\n    if (openSubmenu !== null) {\n      const key = `${openSubmenu.type}-${openSubmenu.index}`;\n      if (subMenuRefs.current[key]) {\n        setSubMenuHeight((prevHeights) => ({\n          ...prevHeights,\n          [key]: subMenuRefs.current[key]?.scrollHeight || 0,\n        }));\n      }\n    }\n  }, [openSubmenu]);\n\n  const handleSubmenuToggle = (index: number, menuType: \"main\" | \"others\") => {\n    setOpenSubmenu((prevOpenSubmenu) => {\n      if (\n        prevOpenSubmenu &&\n        prevOpenSubmenu.type === menuType &&\n        prevOpenSubmenu.index === index\n      ) {\n        return null;\n      }\n      return { type: menuType, index };\n    });\n  };\n\n  const renderMenuItems = (items: NavItem[], menuType: \"main\" | \"others\") => (\n    <ul className=\"flex flex-col gap-4\">\n      {items.map((nav, index) => (\n        <li key={nav.name}>\n          {nav.subItems ? (\n            <button\n              onClick={() => handleSubmenuToggle(index, menuType)}\n              className={`menu-item group ${\n                openSubmenu?.type === menuType && openSubmenu?.index === index\n                  ? \"menu-item-active\"\n                  : \"menu-item-inactive\"\n              } cursor-pointer ${\n                !isExpanded && !isHovered\n                  ? \"lg:justify-center\"\n                  : \"lg:justify-start\"\n              }`}\n            >\n              <span\n                className={`menu-item-icon-size  ${\n                  openSubmenu?.type === menuType && openSubmenu?.index === index\n                    ? \"menu-item-icon-active\"\n                    : \"menu-item-icon-inactive\"\n                }`}\n              >\n                {nav.icon}\n              </span>\n              {(isExpanded || isHovered || isMobileOpen) && (\n                <span className=\"menu-item-text\">{nav.name}</span>\n              )}\n              {(isExpanded || isHovered || isMobileOpen) && (\n                <ChevronDownIcon\n                  className={`ml-auto w-5 h-5 transition-transform duration-200 ${\n                    openSubmenu?.type === menuType &&\n                    openSubmenu?.index === index\n                      ? \"rotate-180 text-brand-500\"\n                      : \"\"\n                  }`}\n                />\n              )}\n            </button>\n          ) : (\n            nav.path && (\n              <Link\n                to={nav.path}\n                className={`menu-item group ${\n                  isActive(nav.path) ? \"menu-item-active\" : \"menu-item-inactive\"\n                }`}\n              >\n                <span\n                  className={`menu-item-icon-size ${\n                    isActive(nav.path)\n                      ? \"menu-item-icon-active\"\n                      : \"menu-item-icon-inactive\"\n                  }`}\n                >\n                  {nav.icon}\n                </span>\n                {(isExpanded || isHovered || isMobileOpen) && (\n                  <span className=\"menu-item-text\">{nav.name}</span>\n                )}\n              </Link>\n            )\n          )}\n          {nav.subItems && (isExpanded || isHovered || isMobileOpen) && (\n            <div\n              ref={(el) => {\n                subMenuRefs.current[`${menuType}-${index}`] = el;\n              }}\n              className=\"overflow-hidden transition-all duration-300\"\n              style={{\n                height:\n                  openSubmenu?.type === menuType && openSubmenu?.index === index\n                    ? `${subMenuHeight[`${menuType}-${index}`]}px`\n                    : \"0px\",\n              }}\n            >\n              <ul className=\"mt-2 space-y-1 ml-9\">\n                {nav.subItems.map((subItem) => (\n                  <li key={subItem.name}>\n                    <Link\n                      to={subItem.path}\n                      className={`menu-dropdown-item ${\n                        isActive(subItem.path)\n                          ? \"menu-dropdown-item-active\"\n                          : \"menu-dropdown-item-inactive\"\n                      }`}\n                    >\n                      {subItem.name}\n                      <span className=\"flex items-center gap-1 ml-auto\">\n                        {subItem.new && (\n                          <span\n                            className={`ml-auto ${\n                              isActive(subItem.path)\n                                ? \"menu-dropdown-badge-active\"\n                                : \"menu-dropdown-badge-inactive\"\n                            } menu-dropdown-badge`}\n                          >\n                            new\n                          </span>\n                        )}\n                        {subItem.pro && (\n                          <span\n                            className={`ml-auto ${\n                              isActive(subItem.path)\n                                ? \"menu-dropdown-badge-active\"\n                                : \"menu-dropdown-badge-inactive\"\n                            } menu-dropdown-badge`}\n                          >\n                            pro\n                          </span>\n                        )}\n                      </span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n\n  return (\n    <aside\n      className={`fixed mt-16 flex flex-col lg:mt-0 top-0 px-5 left-0 bg-white dark:bg-gray-900 dark:border-gray-800 text-gray-900 h-screen transition-all duration-300 ease-in-out z-50 border-r border-gray-200 \n        ${\n          isExpanded || isMobileOpen\n            ? \"w-[290px]\"\n            : isHovered\n            ? \"w-[290px]\"\n            : \"w-[90px]\"\n        }\n        ${isMobileOpen ? \"translate-x-0\" : \"-translate-x-full\"}\n        lg:translate-x-0`}\n      onMouseEnter={() => !isExpanded && setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div\n        className={`py-8 flex ${\n          !isExpanded && !isHovered ? \"lg:justify-center\" : \"justify-start\"\n        }`}\n      >\n        <Link to=\"/\">\n          {isExpanded || isHovered || isMobileOpen ? (\n            <>\n              <img\n                className=\"dark:hidden\"\n                src=\"/images/logo/logo.svg\"\n                alt=\"Logo\"\n                width={150}\n                height={40}\n              />\n              <img\n                className=\"hidden dark:block\"\n                src=\"/images/logo/logo-dark.svg\"\n                alt=\"Logo\"\n                width={150}\n                height={40}\n              />\n            </>\n          ) : (\n            <img\n              src=\"/images/logo/logo-icon.svg\"\n              alt=\"Logo\"\n              width={32}\n              height={32}\n            />\n          )}\n        </Link>\n      </div>\n      <div className=\"flex flex-col overflow-y-auto duration-300 ease-linear no-scrollbar\">\n        <nav className=\"mb-6\">\n          <div className=\"flex flex-col gap-4\">\n            <div>\n              <h2\n                className={`mb-4 text-xs uppercase flex leading-[20px] text-gray-400 ${\n                  !isExpanded && !isHovered\n                    ? \"lg:justify-center\"\n                    : \"justify-start\"\n                }`}\n              >\n                {isExpanded || isHovered || isMobileOpen ? (\n                  \"Menu\"\n                ) : (\n                  <HorizontaLDots className=\"size-6\" />\n                )}\n              </h2>\n              {renderMenuItems(navItems, \"main\")}\n            </div>\n            <div className=\"\">\n              <h2\n                className={`mb-4 text-xs uppercase flex leading-[20px] text-gray-400 ${\n                  !isExpanded && !isHovered\n                    ? \"lg:justify-center\"\n                    : \"justify-start\"\n                }`}\n              >\n                {isExpanded || isHovered || isMobileOpen ? (\n                  \"Others\"\n                ) : (\n                  <HorizontaLDots />\n                )}\n              </h2>\n              {renderMenuItems(othersItems, \"others\")}\n            </div>\n          </div>\n        </nav>\n        {isExpanded || isHovered || isMobileOpen ? <SidebarWidget /> : null}\n      </div>\n    </aside>\n  );\n};\n\nexport default AppSidebar;\n","size_bytes":11729},"frontend/src/components/form/MultiSelect.tsx":{"content":"import type React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\n\ninterface Option {\n  value: string;\n  text: string;\n}\n\ninterface MultiSelectProps {\n  label: string;\n  options: Option[];\n  defaultSelected?: string[];\n  value?: string[];\n  onChange?: (selected: string[]) => void;\n  disabled?: boolean;\n  placeholder?: string;\n}\n\nconst MultiSelect: React.FC<MultiSelectProps> = ({\n  label,\n  options,\n  defaultSelected = [],\n  value,\n  onChange,\n  disabled = false,\n  placeholder = \"Select options\",\n}) => {\n  const isControlled = value !== undefined;\n  const [internalSelected, setInternalSelected] =\n    useState<string[]>(defaultSelected);\n  const selectedOptions = isControlled ? value : internalSelected;\n  const [isOpen, setIsOpen] = useState(false);\n  const [focusedIndex, setFocusedIndex] = useState(-1);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () =>\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n  }, [isOpen]);\n\n  const updateSelection = (newSelected: string[]) => {\n    if (!isControlled) setInternalSelected(newSelected);\n    onChange?.(newSelected);\n  };\n\n  const toggleDropdown = () => {\n    if (!disabled) {\n      setIsOpen((prev) => !prev);\n      setFocusedIndex(-1);\n    }\n  };\n\n  const handleSelect = (optionValue: string) => {\n    const newSelected = selectedOptions.includes(optionValue)\n      ? selectedOptions.filter((v) => v !== optionValue)\n      : [...selectedOptions, optionValue];\n    updateSelection(newSelected);\n  };\n\n  const removeOption = (optionValue: string) => {\n    updateSelection(selectedOptions.filter((v) => v !== optionValue));\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (disabled) return;\n\n    e.preventDefault();\n    switch (e.key) {\n      case \"Enter\":\n        if (!isOpen) {\n          setIsOpen(true);\n        } else if (focusedIndex >= 0) {\n          handleSelect(options[focusedIndex].value);\n        }\n        break;\n      case \"Escape\":\n        setIsOpen(false);\n        break;\n      case \"ArrowDown\":\n        if (!isOpen) {\n          setIsOpen(true);\n        } else {\n          setFocusedIndex((prev) => (prev < options.length - 1 ? prev + 1 : 0));\n        }\n        break;\n      case \"ArrowUp\":\n        if (isOpen) {\n          setFocusedIndex((prev) => (prev > 0 ? prev - 1 : options.length - 1));\n        }\n        break;\n    }\n  };\n\n  return (\n    <div className=\"w-full\" ref={dropdownRef}>\n      <label\n        className=\"mb-1.5 block text-sm font-medium text-gray-700 dark:text-gray-400\"\n        id={`${label}-label`}\n      >\n        {label}\n      </label>\n\n      <div className=\"relative z-20 inline-block w-full\">\n        <div className=\"relative flex flex-col items-center\">\n          <div\n            onClick={toggleDropdown}\n            onKeyDown={handleKeyDown}\n            className=\"w-full\"\n            role=\"combobox\"\n            aria-expanded={isOpen}\n            aria-haspopup=\"listbox\"\n            aria-labelledby={`${label}-label`}\n            aria-disabled={disabled}\n            tabIndex={disabled ? -1 : 0}\n          >\n            <div\n              className={`mb-2 flex min-h-11  rounded-lg border border-gray-300 py-1.5 pl-3 pr-3 shadow-theme-xs outline-hidden transition focus:border-brand-300 focus:shadow-focus-ring dark:border-gray-700 dark:bg-gray-900 dark:focus:border-brand-300 ${\n                disabled\n                  ? \"opacity-50 cursor-not-allowed bg-gray-50 dark:bg-gray-800\"\n                  : \"cursor-pointer\"\n              }`}\n            >\n              <div className=\"flex flex-wrap flex-auto gap-2\">\n                {selectedOptions.length > 0 ? (\n                  selectedOptions.map((value) => {\n                    const text =\n                      options.find((opt) => opt.value === value)?.text || value;\n                    return (\n                      <div\n                        key={value}\n                        className=\"group flex items-center justify-center rounded-full border-[0.7px] border-transparent bg-gray-100 py-1 pl-2.5 pr-2 text-sm text-gray-800 hover:border-gray-200 dark:bg-gray-800 dark:text-white/90 dark:hover:border-gray-800\"\n                      >\n                        <span className=\"flex-initial max-w-full\">{text}</span>\n                        <button\n                          type=\"button\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            if (!disabled) removeOption(value);\n                          }}\n                          disabled={disabled}\n                          className=\"pl-2 text-gray-500 cursor-pointer group-hover:text-gray-400 dark:text-gray-400 disabled:cursor-not-allowed\"\n                          aria-label={`Remove ${text}`}\n                        >\n                          <svg\n                            className=\"fill-current\"\n                            width=\"14\"\n                            height=\"14\"\n                            viewBox=\"0 0 14 14\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                          >\n                            <path\n                              fillRule=\"evenodd\"\n                              clipRule=\"evenodd\"\n                              d=\"M3.40717 4.46881C3.11428 4.17591 3.11428 3.70104 3.40717 3.40815C3.70006 3.11525 4.17494 3.11525 4.46783 3.40815L6.99943 5.93975L9.53095 3.40822C9.82385 3.11533 10.2987 3.11533 10.5916 3.40822C10.8845 3.70112 10.8845 4.17599 10.5916 4.46888L8.06009 7.00041L10.5916 9.53193C10.8845 9.82482 10.8845 10.2997 10.5916 10.5926C10.2987 10.8855 9.82385 10.8855 9.53095 10.5926L6.99943 8.06107L4.46783 10.5927C4.17494 10.8856 3.70006 10.8856 3.40717 10.5927C3.11428 10.2998 3.11428 9.8249 3.40717 9.53201L5.93877 7.00041L3.40717 4.46881Z\"\n                            />\n                          </svg>\n                        </button>\n                      </div>\n                    );\n                  })\n                ) : (\n                  <div className=\"w-full h-full p-1 pr-2 text-sm text-gray-400 dark:text-gray-500 pointer-events-none\">\n                    {placeholder}\n                  </div>\n                )}\n              </div>\n              <div className=\"flex items-center self-start py-1 pl-1 pr-1 w-7\">\n                <button\n                  type=\"button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    toggleDropdown();\n                  }}\n                  disabled={disabled}\n                  className=\"w-5 h-5 text-gray-700 outline-hidden cursor-pointer focus:outline-hidden dark:text-gray-400 disabled:cursor-not-allowed\"\n                >\n                  <svg\n                    className={`stroke-current transition-transform ${\n                      isOpen ? \"rotate-180\" : \"\"\n                    }`}\n                    width=\"20\"\n                    height=\"20\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M4.79175 7.39551L10.0001 12.6038L15.2084 7.39551\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"1.5\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {isOpen && (\n            <div\n              className=\"absolute left-0 z-40 w-full overflow-y-auto bg-white rounded-lg shadow-sm top-full max-h-select dark:bg-gray-900\"\n              onClick={(e) => e.stopPropagation()}\n              role=\"listbox\"\n              aria-label={label}\n            >\n              {options.map((option, index) => {\n                const isSelected = selectedOptions.includes(option.value);\n                const isFocused = index === focusedIndex;\n\n                return (\n                  <div\n                    key={option.value}\n                    className={`hover:bg-primary/5 w-full cursor-pointer rounded-t border-b border-gray-200 dark:border-gray-800 ${\n                      isFocused ? \"bg-primary/5\" : \"\"\n                    } ${isSelected ? \"bg-primary/10\" : \"\"}`}\n                    onClick={() => handleSelect(option.value)}\n                    role=\"option\"\n                    aria-selected={isSelected}\n                  >\n                    <div className=\"relative flex w-full items-center p-2 pl-2\">\n                      <div className=\"mx-2 leading-6 text-gray-800 dark:text-white/90\">\n                        {option.text}\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MultiSelect;\n","size_bytes":9201},"frontend/src/components/tables/BasicTables/BasicTableOne.tsx":{"content":"import {\n  Table,\n  TableBody,\n  TableCell,\n  TableHeader,\n  TableRow,\n} from \"../../ui/table\";\n\nimport Badge from \"../../ui/badge/Badge\";\n\ninterface Order {\n  id: number;\n  user: {\n    image: string;\n    name: string;\n    role: string;\n  };\n  projectName: string;\n  team: {\n    images: string[];\n  };\n  status: string;\n  budget: string;\n}\n\n// Define the table data using the interface\nconst tableData: Order[] = [\n  {\n    id: 1,\n    user: {\n      image: \"/images/user/user-17.jpg\",\n      name: \"Lindsey Curtis\",\n      role: \"Web Designer\",\n    },\n    projectName: \"Agency Website\",\n    team: {\n      images: [\n        \"/images/user/user-22.jpg\",\n        \"/images/user/user-23.jpg\",\n        \"/images/user/user-24.jpg\",\n      ],\n    },\n    budget: \"3.9K\",\n    status: \"Active\",\n  },\n  {\n    id: 2,\n    user: {\n      image: \"/images/user/user-18.jpg\",\n      name: \"Kaiya George\",\n      role: \"Project Manager\",\n    },\n    projectName: \"Technology\",\n    team: {\n      images: [\"/images/user/user-25.jpg\", \"/images/user/user-26.jpg\"],\n    },\n    budget: \"24.9K\",\n    status: \"Pending\",\n  },\n  {\n    id: 3,\n    user: {\n      image: \"/images/user/user-17.jpg\",\n      name: \"Zain Geidt\",\n      role: \"Content Writing\",\n    },\n    projectName: \"Blog Writing\",\n    team: {\n      images: [\"/images/user/user-27.jpg\"],\n    },\n    budget: \"12.7K\",\n    status: \"Active\",\n  },\n  {\n    id: 4,\n    user: {\n      image: \"/images/user/user-20.jpg\",\n      name: \"Abram Schleifer\",\n      role: \"Digital Marketer\",\n    },\n    projectName: \"Social Media\",\n    team: {\n      images: [\n        \"/images/user/user-28.jpg\",\n        \"/images/user/user-29.jpg\",\n        \"/images/user/user-30.jpg\",\n      ],\n    },\n    budget: \"2.8K\",\n    status: \"Cancel\",\n  },\n  {\n    id: 5,\n    user: {\n      image: \"/images/user/user-21.jpg\",\n      name: \"Carla George\",\n      role: \"Front-end Developer\",\n    },\n    projectName: \"Website\",\n    team: {\n      images: [\n        \"/images/user/user-31.jpg\",\n        \"/images/user/user-32.jpg\",\n        \"/images/user/user-33.jpg\",\n      ],\n    },\n    budget: \"4.5K\",\n    status: \"Active\",\n  },\n];\n\nexport default function BasicTableOne() {\n  return (\n    <div className=\"overflow-hidden rounded-xl border border-gray-200 bg-white dark:border-white/[0.05] dark:bg-white/[0.03]\">\n      <div className=\"max-w-full overflow-x-auto\">\n        <Table>\n          {/* Table Header */}\n          <TableHeader className=\"border-b border-gray-100 dark:border-white/[0.05]\">\n            <TableRow>\n              <TableCell\n                isHeader\n                className=\"px-5 py-3 font-medium text-gray-500 text-start text-theme-xs dark:text-gray-400\"\n              >\n                User\n              </TableCell>\n              <TableCell\n                isHeader\n                className=\"px-5 py-3 font-medium text-gray-500 text-start text-theme-xs dark:text-gray-400\"\n              >\n                Project Name\n              </TableCell>\n              <TableCell\n                isHeader\n                className=\"px-5 py-3 font-medium text-gray-500 text-start text-theme-xs dark:text-gray-400\"\n              >\n                Team\n              </TableCell>\n              <TableCell\n                isHeader\n                className=\"px-5 py-3 font-medium text-gray-500 text-start text-theme-xs dark:text-gray-400\"\n              >\n                Status\n              </TableCell>\n              <TableCell\n                isHeader\n                className=\"px-5 py-3 font-medium text-gray-500 text-start text-theme-xs dark:text-gray-400\"\n              >\n                Budget\n              </TableCell>\n            </TableRow>\n          </TableHeader>\n\n          {/* Table Body */}\n          <TableBody className=\"divide-y divide-gray-100 dark:divide-white/[0.05]\">\n            {tableData.map((order) => (\n              <TableRow key={order.id}>\n                <TableCell className=\"px-5 py-4 sm:px-6 text-start\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-10 h-10 overflow-hidden rounded-full\">\n                      <img\n                        width={40}\n                        height={40}\n                        src={order.user.image}\n                        alt={order.user.name}\n                      />\n                    </div>\n                    <div>\n                      <span className=\"block font-medium text-gray-800 text-theme-sm dark:text-white/90\">\n                        {order.user.name}\n                      </span>\n                      <span className=\"block text-gray-500 text-theme-xs dark:text-gray-400\">\n                        {order.user.role}\n                      </span>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell className=\"px-4 py-3 text-gray-500 text-start text-theme-sm dark:text-gray-400\">\n                  {order.projectName}\n                </TableCell>\n                <TableCell className=\"px-4 py-3 text-gray-500 text-start text-theme-sm dark:text-gray-400\">\n                  <div className=\"flex -space-x-2\">\n                    {order.team.images.map((teamImage, index) => (\n                      <div\n                        key={index}\n                        className=\"w-6 h-6 overflow-hidden border-2 border-white rounded-full dark:border-gray-900\"\n                      >\n                        <img\n                          width={24}\n                          height={24}\n                          src={teamImage}\n                          alt={`Team member ${index + 1}`}\n                          className=\"w-full size-6\"\n                        />\n                      </div>\n                    ))}\n                  </div>\n                </TableCell>\n                <TableCell className=\"px-4 py-3 text-gray-500 text-start text-theme-sm dark:text-gray-400\">\n                  <Badge\n                    size=\"sm\"\n                    color={\n                      order.status === \"Active\"\n                        ? \"success\"\n                        : order.status === \"Pending\"\n                        ? \"warning\"\n                        : \"error\"\n                    }\n                  >\n                    {order.status}\n                  </Badge>\n                </TableCell>\n                <TableCell className=\"px-4 py-3 text-gray-500 text-theme-sm dark:text-gray-400\">\n                  {order.budget}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6553},"frontend/src/pages/UiElements/Avatars.tsx":{"content":"import PageBreadcrumb from \"../../components/common/PageBreadCrumb\";\nimport ComponentCard from \"../../components/common/ComponentCard\";\nimport Avatar from \"../../components/ui/avatar/Avatar\";\nimport PageMeta from \"../../components/common/PageMeta\";\n\nexport default function Avatars() {\n  return (\n    <>\n      <PageMeta\n        title=\"React.js Avatars Dashboard | TailAdmin - React.js Admin Dashboard Template\"\n        description=\"This is React.js Avatars Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Avatars\" />\n      <div className=\"space-y-5 sm:space-y-6\">\n        <ComponentCard title=\"Default Avatar\">\n          {/* Default Avatar (No Status) */}\n          <div className=\"flex flex-col items-center justify-center gap-5 sm:flex-row\">\n            <Avatar src=\"/images/user/user-01.jpg\" size=\"xsmall\" />\n            <Avatar src=\"/images/user/user-01.jpg\" size=\"small\" />\n            <Avatar src=\"/images/user/user-01.jpg\" size=\"medium\" />\n            <Avatar src=\"/images/user/user-01.jpg\" size=\"large\" />\n            <Avatar src=\"/images/user/user-01.jpg\" size=\"xlarge\" />\n            <Avatar src=\"/images/user/user-01.jpg\" size=\"xxlarge\" />\n          </div>\n        </ComponentCard>\n        <ComponentCard title=\"Avatar with online indicator\">\n          <div className=\"flex flex-col items-center justify-center gap-5 sm:flex-row\">\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"xsmall\"\n              status=\"online\"\n            />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"small\"\n              status=\"online\"\n            />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"medium\"\n              status=\"online\"\n            />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"large\"\n              status=\"online\"\n            />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"xlarge\"\n              status=\"online\"\n            />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"xxlarge\"\n              status=\"online\"\n            />\n          </div>\n        </ComponentCard>\n        <ComponentCard title=\"Avatar with Offline indicator\">\n          <div className=\"flex flex-col items-center justify-center gap-5 sm:flex-row\">\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"xsmall\"\n              status=\"offline\"\n            />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"small\"\n              status=\"offline\"\n            />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"medium\"\n              status=\"offline\"\n            />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"large\"\n              status=\"offline\"\n            />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"xlarge\"\n              status=\"offline\"\n            />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"xxlarge\"\n              status=\"offline\"\n            />\n          </div>\n        </ComponentCard>{\" \"}\n        <ComponentCard title=\"Avatar with busy indicator\">\n          <div className=\"flex flex-col items-center justify-center gap-5 sm:flex-row\">\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"xsmall\"\n              status=\"busy\"\n            />\n            <Avatar src=\"/images/user/user-01.jpg\" size=\"small\" status=\"busy\" />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"medium\"\n              status=\"busy\"\n            />\n            <Avatar src=\"/images/user/user-01.jpg\" size=\"large\" status=\"busy\" />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"xlarge\"\n              status=\"busy\"\n            />\n            <Avatar\n              src=\"/images/user/user-01.jpg\"\n              size=\"xxlarge\"\n              status=\"busy\"\n            />\n          </div>\n        </ComponentCard>\n      </div>\n    </>\n  );\n}\n","size_bytes":4238},"frontend/src/context/AuthContext.tsx":{"content":"import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: number;\n  username: string;\n  role: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (username: string, password: string) => Promise<void>;\n  logout: () => void;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    \n    if (token && storedUser) {\n      setUser(JSON.parse(storedUser));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    try {\n      const response = await axios.post('/api/auth/login', { username, password });\n      const { token, user: userData } = response.data;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      setUser(userData);\n    } catch (error) {\n      throw new Error('Invalid credentials');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, isLoading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","size_bytes":1994},"frontend/src/components/form/date-picker.tsx":{"content":"import { useEffect } from \"react\";\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.css\";\nimport Label from \"./Label\";\nimport { CalenderIcon } from \"../../icons\";\nimport Hook = flatpickr.Options.Hook;\nimport DateOption = flatpickr.Options.DateOption;\n\ntype PropsType = {\n  id: string;\n  mode?: \"single\" | \"multiple\" | \"range\" | \"time\";\n  onChange?: Hook | Hook[];\n  defaultDate?: DateOption;\n  label?: string;\n  placeholder?: string;\n};\n\nexport default function DatePicker({\n  id,\n  mode,\n  onChange,\n  label,\n  defaultDate,\n  placeholder,\n}: PropsType) {\n  useEffect(() => {\n    const flatPickr = flatpickr(`#${id}`, {\n      mode: mode || \"single\",\n      static: true,\n      monthSelectorType: \"static\",\n      dateFormat: \"Y-m-d\",\n      defaultDate,\n      onChange,\n    });\n\n    return () => {\n      if (!Array.isArray(flatPickr)) {\n        flatPickr.destroy();\n      }\n    };\n  }, [mode, onChange, id, defaultDate]);\n\n  return (\n    <div>\n      {label && <Label htmlFor={id}>{label}</Label>}\n\n      <div className=\"relative\">\n        <input\n          id={id}\n          placeholder={placeholder}\n          className=\"h-11 w-full rounded-lg border appearance-none px-4 py-2.5 text-sm shadow-theme-xs placeholder:text-gray-400 focus:outline-hidden focus:ring-3  dark:bg-gray-900 dark:text-white/90 dark:placeholder:text-white/30  bg-transparent text-gray-800 border-gray-300 focus:border-brand-300 focus:ring-brand-500/20 dark:border-gray-700  dark:focus:border-brand-800\"\n        />\n\n        <span className=\"absolute text-gray-500 -translate-y-1/2 pointer-events-none right-3 top-1/2 dark:text-gray-400\">\n          <CalenderIcon className=\"size-6\" />\n        </span>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1718},"frontend/src/components/ecommerce/DemographicCard.tsx":{"content":"import { useState } from \"react\";\nimport { Dropdown } from \"../ui/dropdown/Dropdown\";\nimport { DropdownItem } from \"../ui/dropdown/DropdownItem\";\nimport { MoreDotIcon } from \"../../icons\";\nimport CountryMap from \"./CountryMap\";\n\nexport default function DemographicCard() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  function closeDropdown() {\n    setIsOpen(false);\n  }\n  return (\n    <div className=\"rounded-2xl border border-gray-200 bg-white p-5 dark:border-gray-800 dark:bg-white/[0.03] sm:p-6\">\n      <div className=\"flex justify-between\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-800 dark:text-white/90\">\n            Customers Demographic\n          </h3>\n          <p className=\"mt-1 text-gray-500 text-theme-sm dark:text-gray-400\">\n            Number of customer based on country\n          </p>\n        </div>\n        <div className=\"relative inline-block\">\n          <button className=\"dropdown-toggle\" onClick={toggleDropdown}>\n            <MoreDotIcon className=\"text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 size-6\" />\n          </button>\n          <Dropdown\n            isOpen={isOpen}\n            onClose={closeDropdown}\n            className=\"w-40 p-2\"\n          >\n            <DropdownItem\n              onItemClick={closeDropdown}\n              className=\"flex w-full font-normal text-left text-gray-500 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-white/5 dark:hover:text-gray-300\"\n            >\n              View More\n            </DropdownItem>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              className=\"flex w-full font-normal text-left text-gray-500 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-white/5 dark:hover:text-gray-300\"\n            >\n              Delete\n            </DropdownItem>\n          </Dropdown>\n        </div>\n      </div>\n      <div className=\"px-4 py-6 my-6 overflow-hidden border border-gary-200 rounded-2xl dark:border-gray-800 sm:px-6\">\n        <div\n          id=\"mapOne\"\n          className=\"mapOne map-btn -mx-4 -my-6 h-[212px] w-[252px] 2xsm:w-[307px] xsm:w-[358px] sm:-mx-6 md:w-[668px] lg:w-[634px] xl:w-[393px] 2xl:w-[554px]\"\n        >\n          <CountryMap />\n        </div>\n      </div>\n\n      <div className=\"space-y-5\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"items-center w-full rounded-full max-w-8\">\n              <img src=\"./images/country/country-01.svg\" alt=\"usa\" />\n            </div>\n            <div>\n              <p className=\"font-semibold text-gray-800 text-theme-sm dark:text-white/90\">\n                USA\n              </p>\n              <span className=\"block text-gray-500 text-theme-xs dark:text-gray-400\">\n                2,379 Customers\n              </span>\n            </div>\n          </div>\n\n          <div className=\"flex w-full max-w-[140px] items-center gap-3\">\n            <div className=\"relative block h-2 w-full max-w-[100px] rounded-sm bg-gray-200 dark:bg-gray-800\">\n              <div className=\"absolute left-0 top-0 flex h-full w-[79%] items-center justify-center rounded-sm bg-brand-500 text-xs font-medium text-white\"></div>\n            </div>\n            <p className=\"font-medium text-gray-800 text-theme-sm dark:text-white/90\">\n              79%\n            </p>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"items-center w-full rounded-full max-w-8\">\n              <img src=\"./images/country/country-02.svg\" alt=\"france\" />\n            </div>\n            <div>\n              <p className=\"font-semibold text-gray-800 text-theme-sm dark:text-white/90\">\n                France\n              </p>\n              <span className=\"block text-gray-500 text-theme-xs dark:text-gray-400\">\n                589 Customers\n              </span>\n            </div>\n          </div>\n\n          <div className=\"flex w-full max-w-[140px] items-center gap-3\">\n            <div className=\"relative block h-2 w-full max-w-[100px] rounded-sm bg-gray-200 dark:bg-gray-800\">\n              <div className=\"absolute left-0 top-0 flex h-full w-[23%] items-center justify-center rounded-sm bg-brand-500 text-xs font-medium text-white\"></div>\n            </div>\n            <p className=\"font-medium text-gray-800 text-theme-sm dark:text-white/90\">\n              23%\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4660},"frontend/src/components/auth/SignInForm.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"react-router\";\nimport { ChevronLeftIcon, EyeCloseIcon, EyeIcon } from \"../../icons\";\nimport Label from \"../form/Label\";\nimport Input from \"../form/input/InputField\";\nimport Checkbox from \"../form/input/Checkbox\";\nimport Button from \"../ui/button/Button\";\n\nexport default function SignInForm() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n  return (\n    <div className=\"flex flex-col flex-1\">\n      <div className=\"w-full max-w-md pt-10 mx-auto\">\n        <Link\n          to=\"/\"\n          className=\"inline-flex items-center text-sm text-gray-500 transition-colors hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300\"\n        >\n          <ChevronLeftIcon className=\"size-5\" />\n          Back to dashboard\n        </Link>\n      </div>\n      <div className=\"flex flex-col justify-center flex-1 w-full max-w-md mx-auto\">\n        <div>\n          <div className=\"mb-5 sm:mb-8\">\n            <h1 className=\"mb-2 font-semibold text-gray-800 text-title-sm dark:text-white/90 sm:text-title-md\">\n              Sign In\n            </h1>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              Enter your email and password to sign in!\n            </p>\n          </div>\n          <div>\n            <div className=\"grid grid-cols-1 gap-3 sm:grid-cols-2 sm:gap-5\">\n              <button className=\"inline-flex items-center justify-center gap-3 py-3 text-sm font-normal text-gray-700 transition-colors bg-gray-100 rounded-lg px-7 hover:bg-gray-200 hover:text-gray-800 dark:bg-white/5 dark:text-white/90 dark:hover:bg-white/10\">\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M18.7511 10.1944C18.7511 9.47495 18.6915 8.94995 18.5626 8.40552H10.1797V11.6527H15.1003C15.0011 12.4597 14.4654 13.675 13.2749 14.4916L13.2582 14.6003L15.9087 16.6126L16.0924 16.6305C17.7788 15.1041 18.7511 12.8583 18.7511 10.1944Z\"\n                    fill=\"#4285F4\"\n                  />\n                  <path\n                    d=\"M10.1788 18.75C12.5895 18.75 14.6133 17.9722 16.0915 16.6305L13.274 14.4916C12.5201 15.0068 11.5081 15.3666 10.1788 15.3666C7.81773 15.3666 5.81379 13.8402 5.09944 11.7305L4.99473 11.7392L2.23868 13.8295L2.20264 13.9277C3.67087 16.786 6.68674 18.75 10.1788 18.75Z\"\n                    fill=\"#34A853\"\n                  />\n                  <path\n                    d=\"M5.10014 11.7305C4.91165 11.186 4.80257 10.6027 4.80257 9.99992C4.80257 9.3971 4.91165 8.81379 5.09022 8.26935L5.08523 8.1534L2.29464 6.02954L2.20333 6.0721C1.5982 7.25823 1.25098 8.5902 1.25098 9.99992C1.25098 11.4096 1.5982 12.7415 2.20333 13.9277L5.10014 11.7305Z\"\n                    fill=\"#FBBC05\"\n                  />\n                  <path\n                    d=\"M10.1789 4.63331C11.8554 4.63331 12.9864 5.34303 13.6312 5.93612L16.1511 3.525C14.6035 2.11528 12.5895 1.25 10.1789 1.25C6.68676 1.25 3.67088 3.21387 2.20264 6.07218L5.08953 8.26943C5.81381 6.15972 7.81776 4.63331 10.1789 4.63331Z\"\n                    fill=\"#EB4335\"\n                  />\n                </svg>\n                Sign in with Google\n              </button>\n              <button className=\"inline-flex items-center justify-center gap-3 py-3 text-sm font-normal text-gray-700 transition-colors bg-gray-100 rounded-lg px-7 hover:bg-gray-200 hover:text-gray-800 dark:bg-white/5 dark:text-white/90 dark:hover:bg-white/10\">\n                <svg\n                  width=\"21\"\n                  className=\"fill-current\"\n                  height=\"20\"\n                  viewBox=\"0 0 21 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path d=\"M15.6705 1.875H18.4272L12.4047 8.75833L19.4897 18.125H13.9422L9.59717 12.4442L4.62554 18.125H1.86721L8.30887 10.7625L1.51221 1.875H7.20054L11.128 7.0675L15.6705 1.875ZM14.703 16.475H16.2305L6.37054 3.43833H4.73137L14.703 16.475Z\" />\n                </svg>\n                Sign in with X\n              </button>\n            </div>\n            <div className=\"relative py-3 sm:py-5\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-200 dark:border-gray-800\"></div>\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"p-2 text-gray-400 bg-white dark:bg-gray-900 sm:px-5 sm:py-2\">\n                  Or\n                </span>\n              </div>\n            </div>\n            <form>\n              <div className=\"space-y-6\">\n                <div>\n                  <Label>\n                    Email <span className=\"text-error-500\">*</span>{\" \"}\n                  </Label>\n                  <Input placeholder=\"info@gmail.com\" />\n                </div>\n                <div>\n                  <Label>\n                    Password <span className=\"text-error-500\">*</span>{\" \"}\n                  </Label>\n                  <div className=\"relative\">\n                    <Input\n                      type={showPassword ? \"text\" : \"password\"}\n                      placeholder=\"Enter your password\"\n                    />\n                    <span\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute z-30 -translate-y-1/2 cursor-pointer right-4 top-1/2\"\n                    >\n                      {showPassword ? (\n                        <EyeIcon className=\"fill-gray-500 dark:fill-gray-400 size-5\" />\n                      ) : (\n                        <EyeCloseIcon className=\"fill-gray-500 dark:fill-gray-400 size-5\" />\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <Checkbox checked={isChecked} onChange={setIsChecked} />\n                    <span className=\"block font-normal text-gray-700 text-theme-sm dark:text-gray-400\">\n                      Keep me logged in\n                    </span>\n                  </div>\n                  <Link\n                    to=\"/reset-password\"\n                    className=\"text-sm text-brand-500 hover:text-brand-600 dark:text-brand-400\"\n                  >\n                    Forgot password?\n                  </Link>\n                </div>\n                <div>\n                  <Button className=\"w-full\" size=\"sm\">\n                    Sign in\n                  </Button>\n                </div>\n              </div>\n            </form>\n\n            <div className=\"mt-5\">\n              <p className=\"text-sm font-normal text-center text-gray-700 dark:text-gray-400 sm:text-start\">\n                Don&apos;t have an account? {\"\"}\n                <Link\n                  to=\"/signup\"\n                  className=\"text-brand-500 hover:text-brand-600 dark:text-brand-400\"\n                >\n                  Sign Up\n                </Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7337},"frontend/src/pages/NewRequest.tsx":{"content":"const NewRequest = () => {\n  return (\n    <div>\n      <h1 className=\"text-3xl font-bold text-gray-900\">New Procurement Request</h1>\n      <p className=\"mt-2 text-gray-600\">Create a new procurement request</p>\n      \n      <div className=\"mt-8 rounded-lg bg-white p-8 shadow text-center\">\n        <p className=\"text-gray-500\">Coming soon...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default NewRequest;\n","size_bytes":404},"frontend/src/components/ui/images/ResponsiveImage.tsx":{"content":"export default function ResponsiveImage() {\n  return (\n    <div className=\"relative\">\n      <div className=\"overflow-hidden\">\n        <img\n          src=\"/images/grid-image/image-01.png\"\n          alt=\"Cover\"\n          className=\"w-full border border-gray-200 rounded-xl dark:border-gray-800\"\n        />\n      </div>\n    </div>\n  );\n}\n","size_bytes":335},"frontend/src/pages/UiElements/Images.tsx":{"content":"import PageBreadcrumb from \"../../components/common/PageBreadCrumb\";\nimport ResponsiveImage from \"../../components/ui/images/ResponsiveImage\";\nimport TwoColumnImageGrid from \"../../components/ui/images/TwoColumnImageGrid\";\nimport ThreeColumnImageGrid from \"../../components/ui/images/ThreeColumnImageGrid\";\nimport ComponentCard from \"../../components/common/ComponentCard\";\nimport PageMeta from \"../../components/common/PageMeta\";\n\nexport default function Images() {\n  return (\n    <>\n      <PageMeta\n        title=\"React.js Images Dashboard | TailAdmin - React.js Admin Dashboard Template\"\n        description=\"This is React.js Images page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Images\" />\n      <div className=\"space-y-5 sm:space-y-6\">\n        <ComponentCard title=\"Responsive image\">\n          <ResponsiveImage />\n        </ComponentCard>\n        <ComponentCard title=\"Image in 2 Grid\">\n          <TwoColumnImageGrid />\n        </ComponentCard>\n        <ComponentCard title=\"Image in 3 Grid\">\n          <ThreeColumnImageGrid />\n        </ComponentCard>\n      </div>\n    </>\n  );\n}\n","size_bytes":1151},"frontend/src/pages/Dashboard.tsx":{"content":"import { useAuth } from '../context/AuthContext';\n\nconst Dashboard = () => {\n  const { user } = useAuth();\n\n  return (\n    <div>\n      <h1 className=\"text-3xl font-bold text-gray-900\">Dashboard</h1>\n      <p className=\"mt-2 text-gray-600\">\n        Welcome, <span className=\"font-semibold\">{user?.username}</span>!\n      </p>\n\n      <div className=\"mt-8 grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        <div className=\"rounded-lg bg-white p-6 shadow\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Total Requests</h3>\n          <p className=\"mt-2 text-3xl font-bold text-gray-900\">0</p>\n        </div>\n        <div className=\"rounded-lg bg-white p-6 shadow\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Pending</h3>\n          <p className=\"mt-2 text-3xl font-bold text-yellow-600\">0</p>\n        </div>\n        <div className=\"rounded-lg bg-white p-6 shadow\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Approved</h3>\n          <p className=\"mt-2 text-3xl font-bold text-green-600\">0</p>\n        </div>\n        <div className=\"rounded-lg bg-white p-6 shadow\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Rejected</h3>\n          <p className=\"mt-2 text-3xl font-bold text-red-600\">0</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","size_bytes":1334},"frontend/src/App-clean.tsx":{"content":"import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router\";\nimport { AuthProvider, useAuth } from \"./context/AuthContext\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Login from \"./pages/AuthPages/Login.tsx\";\nimport Dashboard from \"./pages/Dashboard.tsx\";\nimport Requests from \"./pages/Requests.tsx\";\nimport NewRequest from \"./pages/NewRequest.tsx\";\nimport Vendors from \"./pages/Vendors.tsx\";\nimport Layout from \"./components/Layout.tsx\";\n\nconst AppRoutes = () => {\n  const { user } = useAuth();\n\n  return (\n    <Routes>\n      {/* Public route */}\n      <Route \n        path=\"/login\" \n        element={user ? <Navigate to=\"/\" replace /> : <Login />} \n      />\n\n      {/* Protected routes with layout */}\n      <Route element={<ProtectedRoute><Layout /></ProtectedRoute>}>\n        <Route index element={<Dashboard />} />\n        <Route path=\"/requests\" element={<Requests />} />\n        <Route path=\"/new-request\" element={<NewRequest />} />\n        <Route path=\"/vendors\" element={<Vendors />} />\n      </Route>\n\n      {/* Fallback */}\n      <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n    </Routes>\n  );\n};\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <AppRoutes />\n      </Router>\n    </AuthProvider>\n  );\n}\n","size_bytes":1306},"frontend/src/components/header/NotificationDropdown.tsx":{"content":"import { useState } from \"react\";\nimport { Dropdown } from \"../ui/dropdown/Dropdown\";\nimport { DropdownItem } from \"../ui/dropdown/DropdownItem\";\nimport { Link } from \"react-router\";\n\nexport default function NotificationDropdown() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [notifying, setNotifying] = useState(true);\n\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  function closeDropdown() {\n    setIsOpen(false);\n  }\n\n  const handleClick = () => {\n    toggleDropdown();\n    setNotifying(false);\n  };\n  return (\n    <div className=\"relative\">\n      <button\n        className=\"relative flex items-center justify-center text-gray-500 transition-colors bg-white border border-gray-200 rounded-full dropdown-toggle hover:text-gray-700 h-11 w-11 hover:bg-gray-100 dark:border-gray-800 dark:bg-gray-900 dark:text-gray-400 dark:hover:bg-gray-800 dark:hover:text-white\"\n        onClick={handleClick}\n      >\n        <span\n          className={`absolute right-0 top-0.5 z-10 h-2 w-2 rounded-full bg-orange-400 ${\n            !notifying ? \"hidden\" : \"flex\"\n          }`}\n        >\n          <span className=\"absolute inline-flex w-full h-full bg-orange-400 rounded-full opacity-75 animate-ping\"></span>\n        </span>\n        <svg\n          className=\"fill-current\"\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M10.75 2.29248C10.75 1.87827 10.4143 1.54248 10 1.54248C9.58583 1.54248 9.25004 1.87827 9.25004 2.29248V2.83613C6.08266 3.20733 3.62504 5.9004 3.62504 9.16748V14.4591H3.33337C2.91916 14.4591 2.58337 14.7949 2.58337 15.2091C2.58337 15.6234 2.91916 15.9591 3.33337 15.9591H4.37504H15.625H16.6667C17.0809 15.9591 17.4167 15.6234 17.4167 15.2091C17.4167 14.7949 17.0809 14.4591 16.6667 14.4591H16.375V9.16748C16.375 5.9004 13.9174 3.20733 10.75 2.83613V2.29248ZM14.875 14.4591V9.16748C14.875 6.47509 12.6924 4.29248 10 4.29248C7.30765 4.29248 5.12504 6.47509 5.12504 9.16748V14.4591H14.875ZM8.00004 17.7085C8.00004 18.1228 8.33583 18.4585 8.75004 18.4585H11.25C11.6643 18.4585 12 18.1228 12 17.7085C12 17.2943 11.6643 16.9585 11.25 16.9585H8.75004C8.33583 16.9585 8.00004 17.2943 8.00004 17.7085Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n      </button>\n      <Dropdown\n        isOpen={isOpen}\n        onClose={closeDropdown}\n        className=\"absolute -right-[240px] mt-[17px] flex h-[480px] w-[350px] flex-col rounded-2xl border border-gray-200 bg-white p-3 shadow-theme-lg dark:border-gray-800 dark:bg-gray-dark sm:w-[361px] lg:right-0\"\n      >\n        <div className=\"flex items-center justify-between pb-3 mb-3 border-b border-gray-100 dark:border-gray-700\">\n          <h5 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">\n            Notification\n          </h5>\n          <button\n            onClick={toggleDropdown}\n            className=\"text-gray-500 transition dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200\"\n          >\n            <svg\n              className=\"fill-current\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M6.21967 7.28131C5.92678 6.98841 5.92678 6.51354 6.21967 6.22065C6.51256 5.92775 6.98744 5.92775 7.28033 6.22065L11.999 10.9393L16.7176 6.22078C17.0105 5.92789 17.4854 5.92788 17.7782 6.22078C18.0711 6.51367 18.0711 6.98855 17.7782 7.28144L13.0597 12L17.7782 16.7186C18.0711 17.0115 18.0711 17.4863 17.7782 17.7792C17.4854 18.0721 17.0105 18.0721 16.7176 17.7792L11.999 13.0607L7.28033 17.7794C6.98744 18.0722 6.51256 18.0722 6.21967 17.7794C5.92678 17.4865 5.92678 17.0116 6.21967 16.7187L10.9384 12L6.21967 7.28131Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n          </button>\n        </div>\n        <ul className=\"flex flex-col h-auto overflow-y-auto custom-scrollbar\">\n          {/* Example notification items */}\n          <li>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              className=\"flex gap-3 rounded-lg border-b border-gray-100 p-3 px-4.5 py-3 hover:bg-gray-100 dark:border-gray-800 dark:hover:bg-white/5\"\n            >\n              <span className=\"relative block w-full h-10 rounded-full z-1 max-w-10\">\n                <img\n                  width={40}\n                  height={40}\n                  src=\"/images/user/user-02.jpg\"\n                  alt=\"User\"\n                  className=\"w-full overflow-hidden rounded-full\"\n                />\n                <span className=\"absolute bottom-0 right-0 z-10 h-2.5 w-full max-w-2.5 rounded-full border-[1.5px] border-white bg-success-500 dark:border-gray-900\"></span>\n              </span>\n\n              <span className=\"block\">\n                <span className=\"mb-1.5 block  text-theme-sm text-gray-500 dark:text-gray-400 space-x-1\">\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Terry Franci\n                  </span>\n                  <span> requests permission to change</span>\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Project - Nganter App\n                  </span>\n                </span>\n\n                <span className=\"flex items-center gap-2 text-gray-500 text-theme-xs dark:text-gray-400\">\n                  <span>Project</span>\n                  <span className=\"w-1 h-1 bg-gray-400 rounded-full\"></span>\n                  <span>5 min ago</span>\n                </span>\n              </span>\n            </DropdownItem>\n          </li>\n\n          <li>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              className=\"flex gap-3 rounded-lg border-b border-gray-100 p-3 px-4.5 py-3 hover:bg-gray-100 dark:border-gray-800 dark:hover:bg-white/5\"\n            >\n              <span className=\"relative block w-full h-10 rounded-full z-1 max-w-10\">\n                <img\n                  width={40}\n                  height={40}\n                  src=\"/images/user/user-03.jpg\"\n                  alt=\"User\"\n                  className=\"w-full overflow-hidden rounded-full\"\n                />\n                <span className=\"absolute bottom-0 right-0 z-10 h-2.5 w-full max-w-2.5 rounded-full border-[1.5px] border-white bg-success-500 dark:border-gray-900\"></span>\n              </span>\n\n              <span className=\"block\">\n                <span className=\"mb-1.5 block space-x-1 text-theme-sm text-gray-500 dark:text-gray-400\">\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Alena Franci\n                  </span>\n                  <span>requests permission to change</span>\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Project - Nganter App\n                  </span>\n                </span>\n\n                <span className=\"flex items-center gap-2 text-gray-500 text-theme-xs dark:text-gray-400\">\n                  <span>Project</span>\n                  <span className=\"w-1 h-1 bg-gray-400 rounded-full\"></span>\n                  <span>8 min ago</span>\n                </span>\n              </span>\n            </DropdownItem>\n          </li>\n\n          <li>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              className=\"flex gap-3 rounded-lg border-b border-gray-100 p-3 px-4.5 py-3 hover:bg-gray-100 dark:border-gray-800 dark:hover:bg-white/5\"\n            >\n              <span className=\"relative block w-full h-10 rounded-full z-1 max-w-10\">\n                <img\n                  width={40}\n                  height={40}\n                  src=\"/images/user/user-04.jpg\"\n                  alt=\"User\"\n                  className=\"w-full overflow-hidden rounded-full\"\n                />\n                <span className=\"absolute bottom-0 right-0 z-10 h-2.5 w-full max-w-2.5 rounded-full border-[1.5px] border-white bg-success-500 dark:border-gray-900\"></span>\n              </span>\n\n              <span className=\"block\">\n                <span className=\"mb-1.5 block space-x-1 text-theme-sm text-gray-500 dark:text-gray-400\">\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Jocelyn Kenter\n                  </span>\n                  <span> requests permission to change</span>\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Project - Nganter App\n                  </span>\n                </span>\n\n                <span className=\"flex items-center gap-2 text-gray-500 text-theme-xs dark:text-gray-400\">\n                  <span>Project</span>\n                  <span className=\"w-1 h-1 bg-gray-400 rounded-full\"></span>\n                  <span>15 min ago</span>\n                </span>\n              </span>\n            </DropdownItem>\n          </li>\n\n          <li>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              className=\"flex gap-3 rounded-lg border-b border-gray-100 p-3 px-4.5 py-3 hover:bg-gray-100 dark:border-gray-800 dark:hover:bg-white/5\"\n              to=\"/\"\n            >\n              <span className=\"relative block w-full h-10 rounded-full z-1 max-w-10\">\n                <img\n                  width={40}\n                  height={40}\n                  src=\"/images/user/user-05.jpg\"\n                  alt=\"User\"\n                  className=\"w-full overflow-hidden rounded-full\"\n                />\n                <span className=\"absolute bottom-0 right-0 z-10 h-2.5 w-full max-w-2.5 rounded-full border-[1.5px] border-white bg-error-500 dark:border-gray-900\"></span>\n              </span>\n\n              <span className=\"block\">\n                <span className=\"mb-1.5 space-x-1 block text-theme-sm text-gray-500 dark:text-gray-400\">\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Brandon Philips\n                  </span>\n                  <span>requests permission to change</span>\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Project - Nganter App\n                  </span>\n                </span>\n\n                <span className=\"flex items-center gap-2 text-gray-500 text-theme-xs dark:text-gray-400\">\n                  <span>Project</span>\n                  <span className=\"w-1 h-1 bg-gray-400 rounded-full\"></span>\n                  <span>1 hr ago</span>\n                </span>\n              </span>\n            </DropdownItem>\n          </li>\n\n          <li>\n            <DropdownItem\n              className=\"flex gap-3 rounded-lg border-b border-gray-100 p-3 px-4.5 py-3 hover:bg-gray-100 dark:border-gray-800 dark:hover:bg-white/5\"\n              onItemClick={closeDropdown}\n            >\n              <span className=\"relative block w-full h-10 rounded-full z-1 max-w-10\">\n                <img\n                  width={40}\n                  height={40}\n                  src=\"/images/user/user-02.jpg\"\n                  alt=\"User\"\n                  className=\"w-full overflow-hidden rounded-full\"\n                />\n                <span className=\"absolute bottom-0 right-0 z-10 h-2.5 w-full max-w-2.5 rounded-full border-[1.5px] border-white bg-success-500 dark:border-gray-900\"></span>\n              </span>\n\n              <span className=\"block\">\n                <span className=\"mb-1.5 block space-x-1 text-theme-sm text-gray-500 dark:text-gray-400\">\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Terry Franci\n                  </span>\n                  <span> requests permission to change</span>\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Project - Nganter App\n                  </span>\n                </span>\n\n                <span className=\"flex items-center gap-2 text-gray-500 text-theme-xs dark:text-gray-400\">\n                  <span>Project</span>\n                  <span className=\"w-1 h-1 bg-gray-400 rounded-full\"></span>\n                  <span>5 min ago</span>\n                </span>\n              </span>\n            </DropdownItem>\n          </li>\n\n          <li>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              className=\"flex gap-3 rounded-lg border-b border-gray-100 p-3 px-4.5 py-3 hover:bg-gray-100 dark:border-gray-800 dark:hover:bg-white/5\"\n            >\n              <span className=\"relative block w-full h-10 rounded-full z-1 max-w-10\">\n                <img\n                  width={40}\n                  height={40}\n                  src=\"/images/user/user-03.jpg\"\n                  alt=\"User\"\n                  className=\"w-full overflow-hidden rounded-full\"\n                />\n                <span className=\"absolute bottom-0 right-0 z-10 h-2.5 w-full max-w-2.5 rounded-full border-[1.5px] border-white bg-success-500 dark:border-gray-900\"></span>\n              </span>\n\n              <span className=\"block\">\n                <span className=\"mb-1.5 block space-x-1 text-theme-sm text-gray-500 dark:text-gray-400\">\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Alena Franci\n                  </span>\n                  <span> requests permission to change</span>\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Project - Nganter App\n                  </span>\n                </span>\n\n                <span className=\"flex items-center gap-2 text-gray-500 text-theme-xs dark:text-gray-400\">\n                  <span>Project</span>\n                  <span className=\"w-1 h-1 bg-gray-400 rounded-full\"></span>\n                  <span>8 min ago</span>\n                </span>\n              </span>\n            </DropdownItem>\n          </li>\n\n          <li>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              className=\"flex gap-3 rounded-lg border-b border-gray-100 p-3 px-4.5 py-3 hover:bg-gray-100 dark:border-gray-800 dark:hover:bg-white/5\"\n            >\n              <span className=\"relative block w-full h-10 rounded-full z-1 max-w-10\">\n                <img\n                  width={40}\n                  height={40}\n                  src=\"/images/user/user-04.jpg\"\n                  alt=\"User\"\n                  className=\"w-full overflow-hidden rounded-full\"\n                />\n                <span className=\"absolute bottom-0 right-0 z-10 h-2.5 w-full max-w-2.5 rounded-full border-[1.5px] border-white bg-success-500 dark:border-gray-900\"></span>\n              </span>\n\n              <span className=\"block\">\n                <span className=\"mb-1.5 block  space-x-1 text-theme-sm text-gray-500 dark:text-gray-400\">\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Jocelyn Kenter\n                  </span>\n                  <span> requests permission to change</span>\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Project - Nganter App\n                  </span>\n                </span>\n\n                <span className=\"flex items-center gap-2 text-gray-500 text-theme-xs dark:text-gray-400\">\n                  <span>Project</span>\n                  <span className=\"w-1 h-1 bg-gray-400 rounded-full\"></span>\n                  <span>15 min ago</span>\n                </span>\n              </span>\n            </DropdownItem>\n          </li>\n\n          <li>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              className=\"flex gap-3 rounded-lg border-b border-gray-100 p-3 px-4.5 py-3 hover:bg-gray-100 dark:border-gray-800 dark:hover:bg-white/5\"\n            >\n              <span className=\"relative block w-full h-10 rounded-full z-1 max-w-10\">\n                <img\n                  width={40}\n                  height={40}\n                  src=\"/images/user/user-05.jpg\"\n                  alt=\"User\"\n                  className=\"overflow-hidden rounded-full\"\n                />\n                <span className=\"absolute bottom-0 right-0 z-10 h-2.5 w-full max-w-2.5 rounded-full border-[1.5px] border-white bg-error-500 dark:border-gray-900\"></span>\n              </span>\n\n              <span className=\"block\">\n                <span className=\"mb-1.5 block space-x-1 text-theme-sm text-gray-500 dark:text-gray-400\">\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Brandon Philips\n                  </span>\n                  <span>requests permission to change</span>\n                  <span className=\"font-medium text-gray-800 dark:text-white/90\">\n                    Project - Nganter App\n                  </span>\n                </span>\n\n                <span className=\"flex items-center gap-2 text-gray-500 text-theme-xs dark:text-gray-400\">\n                  <span>Project</span>\n                  <span className=\"w-1 h-1 bg-gray-400 rounded-full\"></span>\n                  <span>1 hr ago</span>\n                </span>\n              </span>\n            </DropdownItem>\n          </li>\n          {/* Add more items as needed */}\n        </ul>\n        <Link\n          to=\"/\"\n          className=\"block px-4 py-2 mt-3 text-sm font-medium text-center text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700\"\n        >\n          View All Notifications\n        </Link>\n      </Dropdown>\n    </div>\n  );\n}\n","size_bytes":17769},"frontend/src/components/header/Header.tsx":{"content":"import { useState } from \"react\";\nimport { ThemeToggleButton } from \"../common/ThemeToggleButton\";\nimport NotificationDropdown from \"./NotificationDropdown\";\nimport UserDropdown from \"./UserDropdown\";\nimport { Link } from \"react-router\";\n\n// Define the interface for the props\ninterface HeaderProps {\n  onClick?: () => void; // Optional function that takes no arguments and returns void\n  onToggle: () => void;\n}\nconst Header: React.FC<HeaderProps> = ({ onClick, onToggle }) => {\n  const [isApplicationMenuOpen, setApplicationMenuOpen] = useState(false);\n\n  const toggleApplicationMenu = () => {\n    setApplicationMenuOpen(!isApplicationMenuOpen);\n  };\n\n  return (\n    <header className=\"sticky top-0 flex w-full bg-white border-gray-200 z-99999 dark:border-gray-800 dark:bg-gray-900 lg:border-b\">\n      <div className=\"flex flex-col items-center justify-between grow lg:flex-row lg:px-6\">\n        <div className=\"flex items-center justify-between w-full gap-2 px-3 py-3 border-b border-gray-200 dark:border-gray-800 sm:gap-4 lg:justify-normal lg:border-b-0 lg:px-0 lg:py-4\">\n          <button\n            className=\"block w-10 h-10 text-gray-500 lg:hidden dark:text-gray-400\"\n            onClick={onToggle}\n          >\n            {/* Hamburger Icon */}\n            <svg\n              className={`block`}\n              width=\"16\"\n              height=\"12\"\n              viewBox=\"0 0 16 12\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M0.583252 1C0.583252 0.585788 0.919038 0.25 1.33325 0.25H14.6666C15.0808 0.25 15.4166 0.585786 15.4166 1C15.4166 1.41421 15.0808 1.75 14.6666 1.75L1.33325 1.75C0.919038 1.75 0.583252 1.41422 0.583252 1ZM0.583252 11C0.583252 10.5858 0.919038 10.25 1.33325 10.25L14.6666 10.25C15.0808 10.25 15.4166 10.5858 15.4166 11C15.4166 11.4142 15.0808 11.75 14.6666 11.75L1.33325 11.75C0.919038 11.75 0.583252 11.4142 0.583252 11ZM1.33325 5.25C0.919038 5.25 0.583252 5.58579 0.583252 6C0.583252 6.41421 0.919038 6.75 1.33325 6.75L7.99992 6.75C8.41413 6.75 8.74992 6.41421 8.74992 6C8.74992 5.58579 8.41413 5.25 7.99992 5.25L1.33325 5.25Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n            <svg\n              className=\"hidden\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M6.21967 7.28131C5.92678 6.98841 5.92678 6.51354 6.21967 6.22065C6.51256 5.92775 6.98744 5.92775 7.28033 6.22065L11.999 10.9393L16.7176 6.22078C17.0105 5.92789 17.4854 5.92788 17.7782 6.22078C18.0711 6.51367 18.0711 6.98855 17.7782 7.28144L13.0597 12L17.7782 16.7186C18.0711 17.0115 18.0711 17.4863 17.7782 17.7792C17.4854 18.0721 17.0105 18.0721 16.7176 17.7792L11.999 13.0607L7.28033 17.7794C6.98744 18.0722 6.51256 18.0722 6.21967 17.7794C5.92678 17.4865 5.92678 17.0116 6.21967 16.7187L10.9384 12L6.21967 7.28131Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n            {/* Cross Icon */}\n          </button>\n          <button\n            onClick={onClick}\n            className=\"items-center justify-center hidden w-10 h-10 text-gray-500 border-gray-200 rounded-lg z-99999 dark:border-gray-800 lg:flex dark:text-gray-400 lg:h-11 lg:w-11 lg:border\"\n          >\n            <svg\n              className=\"hidden fill-current lg:block\"\n              width=\"16\"\n              height=\"12\"\n              viewBox=\"0 0 16 12\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M0.583252 1C0.583252 0.585788 0.919038 0.25 1.33325 0.25H14.6666C15.0808 0.25 15.4166 0.585786 15.4166 1C15.4166 1.41421 15.0808 1.75 14.6666 1.75L1.33325 1.75C0.919038 1.75 0.583252 1.41422 0.583252 1ZM0.583252 11C0.583252 10.5858 0.919038 10.25 1.33325 10.25L14.6666 10.25C15.0808 10.25 15.4166 10.5858 15.4166 11C15.4166 11.4142 15.0808 11.75 14.6666 11.75L1.33325 11.75C0.919038 11.75 0.583252 11.4142 0.583252 11ZM1.33325 5.25C0.919038 5.25 0.583252 5.58579 0.583252 6C0.583252 6.41421 0.919038 6.75 1.33325 6.75L7.99992 6.75C8.41413 6.75 8.74992 6.41421 8.74992 6C8.74992 5.58579 8.41413 5.25 7.99992 5.25L1.33325 5.25Z\"\n                fill=\"\"\n              />\n            </svg>\n          </button>\n\n          <Link to=\"/\" className=\"lg:hidden\">\n            <img\n              className=\"dark:hidden\"\n              src=\"./images/logo/logo.svg\"\n              alt=\"Logo\"\n            />\n            <img\n              className=\"hidden dark:block\"\n              src=\"./images/logo/logo-dark.svg\"\n              alt=\"Logo\"\n            />\n          </Link>\n\n          <button\n            onClick={toggleApplicationMenu}\n            className=\"flex items-center justify-center w-10 h-10 text-gray-700 rounded-lg z-99999 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-800 lg:hidden\"\n          >\n            <svg\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M5.99902 10.4951C6.82745 10.4951 7.49902 11.1667 7.49902 11.9951V12.0051C7.49902 12.8335 6.82745 13.5051 5.99902 13.5051C5.1706 13.5051 4.49902 12.8335 4.49902 12.0051V11.9951C4.49902 11.1667 5.1706 10.4951 5.99902 10.4951ZM17.999 10.4951C18.8275 10.4951 19.499 11.1667 19.499 11.9951V12.0051C19.499 12.8335 18.8275 13.5051 17.999 13.5051C17.1706 13.5051 16.499 12.8335 16.499 12.0051V11.9951C16.499 11.1667 17.1706 10.4951 17.999 10.4951ZM13.499 11.9951C13.499 11.1667 12.8275 10.4951 11.999 10.4951C11.1706 10.4951 10.499 11.1667 10.499 11.9951V12.0051C10.499 12.8335 11.1706 13.5051 11.999 13.5051C12.8275 13.5051 13.499 12.8335 13.499 12.0051V11.9951Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n          </button>\n\n          <div className=\"hidden lg:block\">\n            <form action=\"https://formbold.com/s/unique_form_id\" method=\"POST\">\n              <div className=\"relative\">\n                <button className=\"absolute -translate-y-1/2 left-4 top-1/2\">\n                  <svg\n                    className=\"fill-gray-500 dark:fill-gray-400\"\n                    width=\"20\"\n                    height=\"20\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      clipRule=\"evenodd\"\n                      d=\"M3.04175 9.37363C3.04175 5.87693 5.87711 3.04199 9.37508 3.04199C12.8731 3.04199 15.7084 5.87693 15.7084 9.37363C15.7084 12.8703 12.8731 15.7053 9.37508 15.7053C5.87711 15.7053 3.04175 12.8703 3.04175 9.37363ZM9.37508 1.54199C5.04902 1.54199 1.54175 5.04817 1.54175 9.37363C1.54175 13.6991 5.04902 17.2053 9.37508 17.2053C11.2674 17.2053 13.003 16.5344 14.357 15.4176L17.177 18.238C17.4699 18.5309 17.9448 18.5309 18.2377 18.238C18.5306 17.9451 18.5306 17.4703 18.2377 17.1774L15.418 14.3573C16.5365 13.0033 17.2084 11.2669 17.2084 9.37363C17.2084 5.04817 13.7011 1.54199 9.37508 1.54199Z\"\n                      fill=\"\"\n                    />\n                  </svg>\n                </button>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search or type command...\"\n                  className=\"dark:bg-dark-900 h-11 w-full rounded-lg border border-gray-200 bg-transparent py-2.5 pl-12 pr-14 text-sm text-gray-800 shadow-theme-xs placeholder:text-gray-400 focus:border-brand-300 focus:outline-hidden focus:ring-3 focus:ring-brand-500/10 dark:border-gray-800 dark:bg-gray-900 dark:bg-white/[0.03] dark:text-white/90 dark:placeholder:text-white/30 dark:focus:border-brand-800 xl:w-[430px]\"\n                />\n\n                <button className=\"absolute right-2.5 top-1/2 inline-flex -translate-y-1/2 items-center gap-0.5 rounded-lg border border-gray-200 bg-gray-50 px-[7px] py-[4.5px] text-xs -tracking-[0.2px] text-gray-500 dark:border-gray-800 dark:bg-white/[0.03] dark:text-gray-400\">\n                  <span> ⌘ </span>\n                  <span> K </span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div\n          className={`${\n            isApplicationMenuOpen ? \"flex\" : \"hidden\"\n          } items-center justify-between w-full gap-4 px-5 py-4 lg:flex shadow-theme-md lg:justify-end lg:px-0 lg:shadow-none`}\n        >\n          <div className=\"flex items-center gap-2 2xsm:gap-3\">\n            {/* <!-- Dark Mode Toggler --> */}\n            <ThemeToggleButton />\n            {/* <!-- Dark Mode Toggler --> */}\n            <NotificationDropdown />\n            {/* <!-- Notification Menu Area --> */}\n          </div>\n          {/* <!-- User Area --> */}\n          <UserDropdown />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","size_bytes":9261},"frontend/src/components/ui/button/Button.tsx":{"content":"import { ReactNode } from \"react\";\n\ninterface ButtonProps {\n  children: ReactNode; // Button text or content\n  size?: \"sm\" | \"md\"; // Button size\n  variant?: \"primary\" | \"outline\"; // Button variant\n  startIcon?: ReactNode; // Icon before the text\n  endIcon?: ReactNode; // Icon after the text\n  onClick?: () => void; // Click handler\n  disabled?: boolean; // Disabled state\n  className?: string; // Disabled state\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  size = \"md\",\n  variant = \"primary\",\n  startIcon,\n  endIcon,\n  onClick,\n  className = \"\",\n  disabled = false,\n}) => {\n  // Size Classes\n  const sizeClasses = {\n    sm: \"px-4 py-3 text-sm\",\n    md: \"px-5 py-3.5 text-sm\",\n  };\n\n  // Variant Classes\n  const variantClasses = {\n    primary:\n      \"bg-brand-500 text-white shadow-theme-xs hover:bg-brand-600 disabled:bg-brand-300\",\n    outline:\n      \"bg-white text-gray-700 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-400 dark:ring-gray-700 dark:hover:bg-white/[0.03] dark:hover:text-gray-300\",\n  };\n\n  return (\n    <button\n      className={`inline-flex items-center justify-center gap-2 rounded-lg transition ${className} ${\n        sizeClasses[size]\n      } ${variantClasses[variant]} ${\n        disabled ? \"cursor-not-allowed opacity-50\" : \"\"\n      }`}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {startIcon && <span className=\"flex items-center\">{startIcon}</span>}\n      {children}\n      {endIcon && <span className=\"flex items-center\">{endIcon}</span>}\n    </button>\n  );\n};\n\nexport default Button;\n","size_bytes":1578},"frontend/src/components/ui/modal/index.tsx":{"content":"import { useRef, useEffect } from \"react\";\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  className?: string;\n  children: React.ReactNode;\n  showCloseButton?: boolean; // New prop to control close button visibility\n  isFullscreen?: boolean; // Default to false for backwards compatibility\n}\n\nexport const Modal: React.FC<ModalProps> = ({\n  isOpen,\n  onClose,\n  children,\n  className,\n  showCloseButton = true, // Default to true for backwards compatibility\n  isFullscreen = false,\n}) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener(\"keydown\", handleEscape);\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscape);\n    };\n  }, [isOpen, onClose]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n\n    return () => {\n      document.body.style.overflow = \"unset\";\n    };\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  const contentClasses = isFullscreen\n    ? \"w-full h-full\"\n    : \"relative w-full rounded-3xl bg-white  dark:bg-gray-900\";\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center overflow-y-auto modal z-99999\">\n      {!isFullscreen && (\n        <div\n          className=\"fixed inset-0 h-full w-full bg-gray-400/50 backdrop-blur-[32px]\"\n          onClick={onClose}\n        ></div>\n      )}\n      <div\n        ref={modalRef}\n        className={`${contentClasses}  ${className}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {showCloseButton && (\n          <button\n            onClick={onClose}\n            className=\"absolute right-3 top-3 z-999 flex h-9.5 w-9.5 items-center justify-center rounded-full bg-gray-100 text-gray-400 transition-colors hover:bg-gray-200 hover:text-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white sm:right-6 sm:top-6 sm:h-11 sm:w-11\"\n          >\n            <svg\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M6.04289 16.5413C5.65237 16.9318 5.65237 17.565 6.04289 17.9555C6.43342 18.346 7.06658 18.346 7.45711 17.9555L11.9987 13.4139L16.5408 17.956C16.9313 18.3466 17.5645 18.3466 17.955 17.956C18.3455 17.5655 18.3455 16.9323 17.955 16.5418L13.4129 11.9997L17.955 7.4576C18.3455 7.06707 18.3455 6.43391 17.955 6.04338C17.5645 5.65286 16.9313 5.65286 16.5408 6.04338L11.9987 10.5855L7.45711 6.0439C7.06658 5.65338 6.43342 5.65338 6.04289 6.0439C5.65237 6.43442 5.65237 7.06759 6.04289 7.45811L10.5845 11.9997L6.04289 16.5413Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n          </button>\n        )}\n        <div>{children}</div>\n      </div>\n    </div>\n  );\n};\n","size_bytes":3107},"frontend/src/pages/Blank.tsx":{"content":"import PageBreadcrumb from \"../components/common/PageBreadCrumb\";\nimport PageMeta from \"../components/common/PageMeta\";\n\nexport default function Blank() {\n  return (\n    <div>\n      <PageMeta\n        title=\"React.js Blank Dashboard | TailAdmin - Next.js Admin Dashboard Template\"\n        description=\"This is React.js Blank Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Blank Page\" />\n      <div className=\"min-h-screen rounded-2xl border border-gray-200 bg-white px-5 py-7 dark:border-gray-800 dark:bg-white/[0.03] xl:px-10 xl:py-12\">\n        <div className=\"mx-auto w-full max-w-[630px] text-center\">\n          <h3 className=\"mb-4 font-semibold text-gray-800 text-theme-xl dark:text-white/90 sm:text-2xl\">\n            Card Title Here\n          </h3>\n\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 sm:text-base\">\n            Start putting content on grids or panels, you can also use different\n            combinations of grids.Please check out the dashboard and other pages\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1131},"frontend/vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport svgr from \"vite-plugin-svgr\";\n\n// https://vite.dev/config/\nexport default defineConfig({\n  plugins: [\n    react(),\n    svgr({\n      include: \"**/*.svg?react\",\n    }),\n  ],\n  server: {\n    host: '0.0.0.0',\n    port: 5000,\n    strictPort: true,\n    hmr: {\n      clientPort: 5000,\n    },\n    proxy: {\n      '/api': {\n        target: 'http://localhost:8080',\n        changeOrigin: true,\n      },\n    },\n  },\n});\n","size_bytes":494},"frontend/src/components/ecommerce/MonthlySalesChart.tsx":{"content":"import Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\nimport { Dropdown } from \"../ui/dropdown/Dropdown\";\nimport { DropdownItem } from \"../ui/dropdown/DropdownItem\";\nimport { MoreDotIcon } from \"../../icons\";\nimport { useState } from \"react\";\n\nexport default function MonthlySalesChart() {\n  const options: ApexOptions = {\n    colors: [\"#465fff\"],\n    chart: {\n      fontFamily: \"Outfit, sans-serif\",\n      type: \"bar\",\n      height: 180,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"39%\",\n        borderRadius: 5,\n        borderRadiusApplication: \"end\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      show: true,\n      width: 4,\n      colors: [\"transparent\"],\n    },\n    xaxis: {\n      categories: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ],\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    legend: {\n      show: true,\n      position: \"top\",\n      horizontalAlign: \"left\",\n      fontFamily: \"Outfit\",\n    },\n    yaxis: {\n      title: {\n        text: undefined,\n      },\n    },\n    grid: {\n      yaxis: {\n        lines: {\n          show: true,\n        },\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n\n    tooltip: {\n      x: {\n        show: false,\n      },\n      y: {\n        formatter: (val: number) => `${val}`,\n      },\n    },\n  };\n  const series = [\n    {\n      name: \"Sales\",\n      data: [168, 385, 201, 298, 187, 195, 291, 110, 215, 390, 280, 112],\n    },\n  ];\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  function closeDropdown() {\n    setIsOpen(false);\n  }\n  return (\n    <div className=\"overflow-hidden rounded-2xl border border-gray-200 bg-white px-5 pt-5 dark:border-gray-800 dark:bg-white/[0.03] sm:px-6 sm:pt-6\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-gray-800 dark:text-white/90\">\n          Monthly Sales\n        </h3>\n        <div className=\"relative inline-block\">\n          <button className=\"dropdown-toggle\" onClick={toggleDropdown}>\n            <MoreDotIcon className=\"text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 size-6\" />\n          </button>\n          <Dropdown\n            isOpen={isOpen}\n            onClose={closeDropdown}\n            className=\"w-40 p-2\"\n          >\n            <DropdownItem\n              onItemClick={closeDropdown}\n              className=\"flex w-full font-normal text-left text-gray-500 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-white/5 dark:hover:text-gray-300\"\n            >\n              View More\n            </DropdownItem>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              className=\"flex w-full font-normal text-left text-gray-500 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-white/5 dark:hover:text-gray-300\"\n            >\n              Delete\n            </DropdownItem>\n          </Dropdown>\n        </div>\n      </div>\n\n      <div className=\"max-w-full overflow-x-auto custom-scrollbar\">\n        <div className=\"-ml-5 min-w-[650px] xl:min-w-full pl-2\">\n          <Chart options={options} series={series} type=\"bar\" height={180} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3560},"frontend/src/components/UserProfile/UserAddressCard.tsx":{"content":"import { useModal } from \"../../hooks/useModal\";\nimport { Modal } from \"../ui/modal\";\nimport Button from \"../ui/button/Button\";\nimport Input from \"../form/input/InputField\";\nimport Label from \"../form/Label\";\n\nexport default function UserAddressCard() {\n  const { isOpen, openModal, closeModal } = useModal();\n  const handleSave = () => {\n    // Handle save logic here\n    console.log(\"Saving changes...\");\n    closeModal();\n  };\n  return (\n    <>\n      <div className=\"p-5 border border-gray-200 rounded-2xl dark:border-gray-800 lg:p-6\">\n        <div className=\"flex flex-col gap-6 lg:flex-row lg:items-start lg:justify-between\">\n          <div>\n            <h4 className=\"text-lg font-semibold text-gray-800 dark:text-white/90 lg:mb-6\">\n              Address\n            </h4>\n\n            <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-2 lg:gap-7 2xl:gap-x-32\">\n              <div>\n                <p className=\"mb-2 text-xs leading-normal text-gray-500 dark:text-gray-400\">\n                  Country\n                </p>\n                <p className=\"text-sm font-medium text-gray-800 dark:text-white/90\">\n                  United States.\n                </p>\n              </div>\n\n              <div>\n                <p className=\"mb-2 text-xs leading-normal text-gray-500 dark:text-gray-400\">\n                  City/State\n                </p>\n                <p className=\"text-sm font-medium text-gray-800 dark:text-white/90\">\n                  Phoenix, Arizona, United States.\n                </p>\n              </div>\n\n              <div>\n                <p className=\"mb-2 text-xs leading-normal text-gray-500 dark:text-gray-400\">\n                  Postal Code\n                </p>\n                <p className=\"text-sm font-medium text-gray-800 dark:text-white/90\">\n                  ERT 2489\n                </p>\n              </div>\n\n              <div>\n                <p className=\"mb-2 text-xs leading-normal text-gray-500 dark:text-gray-400\">\n                  TAX ID\n                </p>\n                <p className=\"text-sm font-medium text-gray-800 dark:text-white/90\">\n                  AS4568384\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <button\n            onClick={openModal}\n            className=\"flex w-full items-center justify-center gap-2 rounded-full border border-gray-300 bg-white px-4 py-3 text-sm font-medium text-gray-700 shadow-theme-xs hover:bg-gray-50 hover:text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-white/[0.03] dark:hover:text-gray-200 lg:inline-flex lg:w-auto\"\n          >\n            <svg\n              className=\"fill-current\"\n              width=\"18\"\n              height=\"18\"\n              viewBox=\"0 0 18 18\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M15.0911 2.78206C14.2125 1.90338 12.7878 1.90338 11.9092 2.78206L4.57524 10.116C4.26682 10.4244 4.0547 10.8158 3.96468 11.2426L3.31231 14.3352C3.25997 14.5833 3.33653 14.841 3.51583 15.0203C3.69512 15.1996 3.95286 15.2761 4.20096 15.2238L7.29355 14.5714C7.72031 14.4814 8.11172 14.2693 8.42013 13.9609L15.7541 6.62695C16.6327 5.74827 16.6327 4.32365 15.7541 3.44497L15.0911 2.78206ZM12.9698 3.84272C13.2627 3.54982 13.7376 3.54982 14.0305 3.84272L14.6934 4.50563C14.9863 4.79852 14.9863 5.2734 14.6934 5.56629L14.044 6.21573L12.3204 4.49215L12.9698 3.84272ZM11.2597 5.55281L5.6359 11.1766C5.53309 11.2794 5.46238 11.4099 5.43238 11.5522L5.01758 13.5185L6.98394 13.1037C7.1262 13.0737 7.25666 13.003 7.35947 12.9002L12.9833 7.27639L11.2597 5.55281Z\"\n                fill=\"\"\n              />\n            </svg>\n            Edit\n          </button>\n        </div>\n      </div>\n      <Modal isOpen={isOpen} onClose={closeModal} className=\"max-w-[700px] m-4\">\n        <div className=\"relative w-full p-4 overflow-y-auto bg-white no-scrollbar rounded-3xl dark:bg-gray-900 lg:p-11\">\n          <div className=\"px-2 pr-14\">\n            <h4 className=\"mb-2 text-2xl font-semibold text-gray-800 dark:text-white/90\">\n              Edit Address\n            </h4>\n            <p className=\"mb-6 text-sm text-gray-500 dark:text-gray-400 lg:mb-7\">\n              Update your details to keep your profile up-to-date.\n            </p>\n          </div>\n          <form className=\"flex flex-col\">\n            <div className=\"px-2 overflow-y-auto custom-scrollbar\">\n              <div className=\"grid grid-cols-1 gap-x-6 gap-y-5 lg:grid-cols-2\">\n                <div>\n                  <Label>Country</Label>\n                  <Input type=\"text\" value=\"United States\" />\n                </div>\n\n                <div>\n                  <Label>City/State</Label>\n                  <Input type=\"text\" value=\"Arizona, United States.\" />\n                </div>\n\n                <div>\n                  <Label>Postal Code</Label>\n                  <Input type=\"text\" value=\"ERT 2489\" />\n                </div>\n\n                <div>\n                  <Label>TAX ID</Label>\n                  <Input type=\"text\" value=\"AS4568384\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-3 px-2 mt-6 lg:justify-end\">\n              <Button size=\"sm\" variant=\"outline\" onClick={closeModal}>\n                Close\n              </Button>\n              <Button size=\"sm\" onClick={handleSave}>\n                Save Changes\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </>\n  );\n}\n","size_bytes":5602},"frontend/src/components/common/PageMeta.tsx":{"content":"import { HelmetProvider, Helmet } from \"react-helmet-async\";\n\nconst PageMeta = ({\n  title,\n  description,\n}: {\n  title: string;\n  description: string;\n}) => (\n  <Helmet>\n    <title>{title}</title>\n    <meta name=\"description\" content={description} />\n  </Helmet>\n);\n\nexport const AppWrapper = ({ children }: { children: React.ReactNode }) => (\n  <HelmetProvider>{children}</HelmetProvider>\n);\n\nexport default PageMeta;\n","size_bytes":419},"frontend/src/layout/AppLayout.tsx":{"content":"import { SidebarProvider, useSidebar } from \"../context/SidebarContext\";\nimport { Outlet } from \"react-router\";\nimport AppHeader from \"./AppHeader\";\nimport Backdrop from \"./Backdrop\";\nimport AppSidebar from \"./AppSidebar\";\n\nconst LayoutContent: React.FC = () => {\n  const { isExpanded, isHovered, isMobileOpen } = useSidebar();\n\n  return (\n    <div className=\"min-h-screen xl:flex\">\n      <div>\n        <AppSidebar />\n        <Backdrop />\n      </div>\n      <div\n        className={`flex-1 transition-all duration-300 ease-in-out ${\n          isExpanded || isHovered ? \"lg:ml-[290px]\" : \"lg:ml-[90px]\"\n        } ${isMobileOpen ? \"ml-0\" : \"\"}`}\n      >\n        <AppHeader />\n        <div className=\"p-4 mx-auto max-w-(--breakpoint-2xl) md:p-6\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AppLayout: React.FC = () => {\n  return (\n    <SidebarProvider>\n      <LayoutContent />\n    </SidebarProvider>\n  );\n};\n\nexport default AppLayout;\n","size_bytes":964},"frontend/src/components/form/input/RadioSm.tsx":{"content":"interface RadioProps {\n  id: string; // Unique ID for the radio button\n  name: string; // Group name for the radio button\n  value: string; // Value of the radio button\n  checked: boolean; // Whether the radio button is checked\n  label: string; // Label text for the radio button\n  onChange: (value: string) => void; // Handler for when the radio button is toggled\n  className?: string; // Optional custom classes for styling\n}\n\nconst RadioSm: React.FC<RadioProps> = ({\n  id,\n  name,\n  value,\n  checked,\n  label,\n  onChange,\n  className = \"\",\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      className={`flex cursor-pointer select-none items-center text-sm text-gray-500 dark:text-gray-400 ${className}`}\n    >\n      <span className=\"relative\">\n        {/* Hidden Input */}\n        <input\n          type=\"radio\"\n          id={id}\n          name={name}\n          value={value}\n          checked={checked}\n          onChange={() => onChange(value)}\n          className=\"sr-only\"\n        />\n        {/* Styled Radio Circle */}\n        <span\n          className={`mr-2 flex h-4 w-4 items-center justify-center rounded-full border ${\n            checked\n              ? \"border-brand-500 bg-brand-500\"\n              : \"bg-transparent border-gray-300 dark:border-gray-700\"\n          }`}\n        >\n          {/* Inner Dot */}\n          <span\n            className={`h-1.5 w-1.5 rounded-full ${\n              checked ? \"bg-white\" : \"bg-white dark:bg-[#1e2636]\"\n            }`}\n          ></span>\n        </span>\n      </span>\n      {label}\n    </label>\n  );\n};\n\nexport default RadioSm;\n","size_bytes":1583},"frontend/src/components/ui/videos/AspectRatioVideo.tsx":{"content":"type AspectRatioVideoProps = {\n  videoUrl: string; // URL of the video\n  aspectRatio?: string; // Aspect ratio in the format \"width/height\", default is \"16/9\"\n  title?: string; // Video title, default is \"Embedded Video\"\n};\n\nconst AspectRatioVideo: React.FC<AspectRatioVideoProps> = ({\n  videoUrl,\n  aspectRatio = \"video\", // Default aspect ratio\n  title = \"Embedded Video\",\n}) => {\n  return (\n    <div className={`aspect-${aspectRatio} overflow-hidden rounded-lg`}>\n      <iframe\n        src={videoUrl}\n        title={title}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        className=\"w-full h-full\"\n      ></iframe>\n    </div>\n  );\n};\n\nexport default AspectRatioVideo;\n","size_bytes":783},"frontend/src/components/common/ThemeTogglerTwo.tsx":{"content":"import { useTheme } from \"../../context/ThemeContext\";\n\nexport default function ThemeTogglerTwo() {\n  const { toggleTheme } = useTheme();\n  return (\n    <button\n      onClick={toggleTheme}\n      className=\"inline-flex items-center justify-center text-white transition-colors rounded-full size-14 bg-brand-500 hover:bg-brand-600\"\n    >\n      <svg\n        className=\"hidden dark:block\"\n        width=\"20\"\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M9.99998 1.5415C10.4142 1.5415 10.75 1.87729 10.75 2.2915V3.5415C10.75 3.95572 10.4142 4.2915 9.99998 4.2915C9.58577 4.2915 9.24998 3.95572 9.24998 3.5415V2.2915C9.24998 1.87729 9.58577 1.5415 9.99998 1.5415ZM10.0009 6.79327C8.22978 6.79327 6.79402 8.22904 6.79402 10.0001C6.79402 11.7712 8.22978 13.207 10.0009 13.207C11.772 13.207 13.2078 11.7712 13.2078 10.0001C13.2078 8.22904 11.772 6.79327 10.0009 6.79327ZM5.29402 10.0001C5.29402 7.40061 7.40135 5.29327 10.0009 5.29327C12.6004 5.29327 14.7078 7.40061 14.7078 10.0001C14.7078 12.5997 12.6004 14.707 10.0009 14.707C7.40135 14.707 5.29402 12.5997 5.29402 10.0001ZM15.9813 5.08035C16.2742 4.78746 16.2742 4.31258 15.9813 4.01969C15.6884 3.7268 15.2135 3.7268 14.9207 4.01969L14.0368 4.90357C13.7439 5.19647 13.7439 5.67134 14.0368 5.96423C14.3297 6.25713 14.8045 6.25713 15.0974 5.96423L15.9813 5.08035ZM18.4577 10.0001C18.4577 10.4143 18.1219 10.7501 17.7077 10.7501H16.4577C16.0435 10.7501 15.7077 10.4143 15.7077 10.0001C15.7077 9.58592 16.0435 9.25013 16.4577 9.25013H17.7077C18.1219 9.25013 18.4577 9.58592 18.4577 10.0001ZM14.9207 15.9806C15.2135 16.2735 15.6884 16.2735 15.9813 15.9806C16.2742 15.6877 16.2742 15.2128 15.9813 14.9199L15.0974 14.036C14.8045 13.7431 14.3297 13.7431 14.0368 14.036C13.7439 14.3289 13.7439 14.8038 14.0368 15.0967L14.9207 15.9806ZM9.99998 15.7088C10.4142 15.7088 10.75 16.0445 10.75 16.4588V17.7088C10.75 18.123 10.4142 18.4588 9.99998 18.4588C9.58577 18.4588 9.24998 18.123 9.24998 17.7088V16.4588C9.24998 16.0445 9.58577 15.7088 9.99998 15.7088ZM5.96356 15.0972C6.25646 14.8043 6.25646 14.3295 5.96356 14.0366C5.67067 13.7437 5.1958 13.7437 4.9029 14.0366L4.01902 14.9204C3.72613 15.2133 3.72613 15.6882 4.01902 15.9811C4.31191 16.274 4.78679 16.274 5.07968 15.9811L5.96356 15.0972ZM4.29224 10.0001C4.29224 10.4143 3.95645 10.7501 3.54224 10.7501H2.29224C1.87802 10.7501 1.54224 10.4143 1.54224 10.0001C1.54224 9.58592 1.87802 9.25013 2.29224 9.25013H3.54224C3.95645 9.25013 4.29224 9.58592 4.29224 10.0001ZM4.9029 5.9637C5.1958 6.25659 5.67067 6.25659 5.96356 5.9637C6.25646 5.6708 6.25646 5.19593 5.96356 4.90303L5.07968 4.01915C4.78679 3.72626 4.31191 3.72626 4.01902 4.01915C3.72613 4.31204 3.72613 4.78692 4.01902 5.07981L4.9029 5.9637Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n      <svg\n        className=\"dark:hidden\"\n        width=\"20\"\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M17.4547 11.97L18.1799 12.1611C18.265 11.8383 18.1265 11.4982 17.8401 11.3266C17.5538 11.1551 17.1885 11.1934 16.944 11.4207L17.4547 11.97ZM8.0306 2.5459L8.57989 3.05657C8.80718 2.81209 8.84554 2.44682 8.67398 2.16046C8.50243 1.8741 8.16227 1.73559 7.83948 1.82066L8.0306 2.5459ZM12.9154 13.0035C9.64678 13.0035 6.99707 10.3538 6.99707 7.08524H5.49707C5.49707 11.1823 8.81835 14.5035 12.9154 14.5035V13.0035ZM16.944 11.4207C15.8869 12.4035 14.4721 13.0035 12.9154 13.0035V14.5035C14.8657 14.5035 16.6418 13.7499 17.9654 12.5193L16.944 11.4207ZM16.7295 11.7789C15.9437 14.7607 13.2277 16.9586 10.0003 16.9586V18.4586C13.9257 18.4586 17.2249 15.7853 18.1799 12.1611L16.7295 11.7789ZM10.0003 16.9586C6.15734 16.9586 3.04199 13.8433 3.04199 10.0003H1.54199C1.54199 14.6717 5.32892 18.4586 10.0003 18.4586V16.9586ZM3.04199 10.0003C3.04199 6.77289 5.23988 4.05695 8.22173 3.27114L7.83948 1.82066C4.21532 2.77574 1.54199 6.07486 1.54199 10.0003H3.04199ZM6.99707 7.08524C6.99707 5.52854 7.5971 4.11366 8.57989 3.05657L7.48132 2.03522C6.25073 3.35885 5.49707 5.13487 5.49707 7.08524H6.99707Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </button>\n  );\n}\n","size_bytes":4264},"frontend/src/components/ui/table/index.tsx":{"content":"import { ReactNode } from \"react\";\n\n// Props for Table\ninterface TableProps {\n  children: ReactNode; // Table content (thead, tbody, etc.)\n  className?: string; // Optional className for styling\n}\n\n// Props for TableHeader\ninterface TableHeaderProps {\n  children: ReactNode; // Header row(s)\n  className?: string; // Optional className for styling\n}\n\n// Props for TableBody\ninterface TableBodyProps {\n  children: ReactNode; // Body row(s)\n  className?: string; // Optional className for styling\n}\n\n// Props for TableRow\ninterface TableRowProps {\n  children: ReactNode; // Cells (th or td)\n  className?: string; // Optional className for styling\n}\n\n// Props for TableCell\ninterface TableCellProps {\n  children: ReactNode; // Cell content\n  isHeader?: boolean; // If true, renders as <th>, otherwise <td>\n  className?: string; // Optional className for styling\n}\n\n// Table Component\nconst Table: React.FC<TableProps> = ({ children, className }) => {\n  return <table className={`min-w-full  ${className}`}>{children}</table>;\n};\n\n// TableHeader Component\nconst TableHeader: React.FC<TableHeaderProps> = ({ children, className }) => {\n  return <thead className={className}>{children}</thead>;\n};\n\n// TableBody Component\nconst TableBody: React.FC<TableBodyProps> = ({ children, className }) => {\n  return <tbody className={className}>{children}</tbody>;\n};\n\n// TableRow Component\nconst TableRow: React.FC<TableRowProps> = ({ children, className }) => {\n  return <tr className={className}>{children}</tr>;\n};\n\n// TableCell Component\nconst TableCell: React.FC<TableCellProps> = ({\n  children,\n  isHeader = false,\n  className,\n}) => {\n  const CellTag = isHeader ? \"th\" : \"td\";\n  return <CellTag className={` ${className}`}>{children}</CellTag>;\n};\n\nexport { Table, TableHeader, TableBody, TableRow, TableCell };\n","size_bytes":1804},"frontend/src/components/form/form-elements/DropZone.tsx":{"content":"import ComponentCard from \"../../common/ComponentCard\";\nimport { useDropzone } from \"react-dropzone\";\n// import Dropzone from \"react-dropzone\";\n\nconst DropzoneComponent: React.FC = () => {\n  const onDrop = (acceptedFiles: File[]) => {\n    console.log(\"Files dropped:\", acceptedFiles);\n    // Handle file uploads here\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      \"image/png\": [],\n      \"image/jpeg\": [],\n      \"image/webp\": [],\n      \"image/svg+xml\": [],\n    },\n  });\n  return (\n    <ComponentCard title=\"Dropzone\">\n      <div className=\"transition border border-gray-300 border-dashed cursor-pointer dark:hover:border-brand-500 dark:border-gray-700 rounded-xl hover:border-brand-500\">\n        <form\n          {...getRootProps()}\n          className={`dropzone rounded-xl   border-dashed border-gray-300 p-7 lg:p-10\n        ${\n          isDragActive\n            ? \"border-brand-500 bg-gray-100 dark:bg-gray-800\"\n            : \"border-gray-300 bg-gray-50 dark:border-gray-700 dark:bg-gray-900\"\n        }\n      `}\n          id=\"demo-upload\"\n        >\n          {/* Hidden Input */}\n          <input {...getInputProps()} />\n\n          <div className=\"dz-message flex flex-col items-center m-0!\">\n            {/* Icon Container */}\n            <div className=\"mb-[22px] flex justify-center\">\n              <div className=\"flex h-[68px] w-[68px]  items-center justify-center rounded-full bg-gray-200 text-gray-700 dark:bg-gray-800 dark:text-gray-400\">\n                <svg\n                  className=\"fill-current\"\n                  width=\"29\"\n                  height=\"28\"\n                  viewBox=\"0 0 29 28\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M14.5019 3.91699C14.2852 3.91699 14.0899 4.00891 13.953 4.15589L8.57363 9.53186C8.28065 9.82466 8.2805 10.2995 8.5733 10.5925C8.8661 10.8855 9.34097 10.8857 9.63396 10.5929L13.7519 6.47752V18.667C13.7519 19.0812 14.0877 19.417 14.5019 19.417C14.9161 19.417 15.2519 19.0812 15.2519 18.667V6.48234L19.3653 10.5929C19.6583 10.8857 20.1332 10.8855 20.426 10.5925C20.7188 10.2995 20.7186 9.82463 20.4256 9.53184L15.0838 4.19378C14.9463 4.02488 14.7367 3.91699 14.5019 3.91699ZM5.91626 18.667C5.91626 18.2528 5.58047 17.917 5.16626 17.917C4.75205 17.917 4.41626 18.2528 4.41626 18.667V21.8337C4.41626 23.0763 5.42362 24.0837 6.66626 24.0837H22.3339C23.5766 24.0837 24.5839 23.0763 24.5839 21.8337V18.667C24.5839 18.2528 24.2482 17.917 23.8339 17.917C23.4197 17.917 23.0839 18.2528 23.0839 18.667V21.8337C23.0839 22.2479 22.7482 22.5837 22.3339 22.5837H6.66626C6.25205 22.5837 5.91626 22.2479 5.91626 21.8337V18.667Z\"\n                  />\n                </svg>\n              </div>\n            </div>\n\n            {/* Text Content */}\n            <h4 className=\"mb-3 font-semibold text-gray-800 text-theme-xl dark:text-white/90\">\n              {isDragActive ? \"Drop Files Here\" : \"Drag & Drop Files Here\"}\n            </h4>\n\n            <span className=\" text-center mb-5 block w-full max-w-[290px] text-sm text-gray-700 dark:text-gray-400\">\n              Drag and drop your PNG, JPG, WebP, SVG images here or browse\n            </span>\n\n            <span className=\"font-medium underline text-theme-sm text-brand-500\">\n              Browse File\n            </span>\n          </div>\n        </form>\n      </div>\n    </ComponentCard>\n  );\n};\n\nexport default DropzoneComponent;\n","size_bytes":3536},"frontend/src/components/ecommerce/StatisticsChart.tsx":{"content":"import Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\nimport ChartTab from \"../common/ChartTab\";\n\nexport default function StatisticsChart() {\n  const options: ApexOptions = {\n    legend: {\n      show: false, // Hide legend\n      position: \"top\",\n      horizontalAlign: \"left\",\n    },\n    colors: [\"#465FFF\", \"#9CB9FF\"], // Define line colors\n    chart: {\n      fontFamily: \"Outfit, sans-serif\",\n      height: 310,\n      type: \"line\", // Set the chart type to 'line'\n      toolbar: {\n        show: false, // Hide chart toolbar\n      },\n    },\n    stroke: {\n      curve: \"straight\", // Define the line style (straight, smooth, or step)\n      width: [2, 2], // Line width for each dataset\n    },\n\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        opacityFrom: 0.55,\n        opacityTo: 0,\n      },\n    },\n    markers: {\n      size: 0, // Size of the marker points\n      strokeColors: \"#fff\", // Marker border color\n      strokeWidth: 2,\n      hover: {\n        size: 6, // Marker size on hover\n      },\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: false, // Hide grid lines on x-axis\n        },\n      },\n      yaxis: {\n        lines: {\n          show: true, // Show grid lines on y-axis\n        },\n      },\n    },\n    dataLabels: {\n      enabled: false, // Disable data labels\n    },\n    tooltip: {\n      enabled: true, // Enable tooltip\n      x: {\n        format: \"dd MMM yyyy\", // Format for x-axis tooltip\n      },\n    },\n    xaxis: {\n      type: \"category\", // Category-based x-axis\n      categories: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ],\n      axisBorder: {\n        show: false, // Hide x-axis border\n      },\n      axisTicks: {\n        show: false, // Hide x-axis ticks\n      },\n      tooltip: {\n        enabled: false, // Disable tooltip for x-axis points\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          fontSize: \"12px\", // Adjust font size for y-axis labels\n          colors: [\"#6B7280\"], // Color of the labels\n        },\n      },\n      title: {\n        text: \"\", // Remove y-axis title\n        style: {\n          fontSize: \"0px\",\n        },\n      },\n    },\n  };\n\n  const series = [\n    {\n      name: \"Sales\",\n      data: [180, 190, 170, 160, 175, 165, 170, 205, 230, 210, 240, 235],\n    },\n    {\n      name: \"Revenue\",\n      data: [40, 30, 50, 40, 55, 40, 70, 100, 110, 120, 150, 140],\n    },\n  ];\n  return (\n    <div className=\"rounded-2xl border border-gray-200 bg-white px-5 pb-5 pt-5 dark:border-gray-800 dark:bg-white/[0.03] sm:px-6 sm:pt-6\">\n      <div className=\"flex flex-col gap-5 mb-6 sm:flex-row sm:justify-between\">\n        <div className=\"w-full\">\n          <h3 className=\"text-lg font-semibold text-gray-800 dark:text-white/90\">\n            Statistics\n          </h3>\n          <p className=\"mt-1 text-gray-500 text-theme-sm dark:text-gray-400\">\n            Target you’ve set for each month\n          </p>\n        </div>\n        <div className=\"flex items-start w-full gap-3 sm:justify-end\">\n          <ChartTab />\n        </div>\n      </div>\n\n      <div className=\"max-w-full overflow-x-auto custom-scrollbar\">\n        <div className=\"min-w-[1000px] xl:min-w-full\">\n          <Chart options={options} series={series} type=\"area\" height={310} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3451},"frontend/src/components/form/input/Radio.tsx":{"content":"interface RadioProps {\n  id: string; // Unique ID for the radio button\n  name: string; // Radio group name\n  value: string; // Value of the radio button\n  checked: boolean; // Whether the radio button is checked\n  label: string; // Label for the radio button\n  onChange: (value: string) => void; // Handler for value change\n  className?: string; // Optional additional classes\n  disabled?: boolean; // Optional disabled state for the radio button\n}\n\nconst Radio: React.FC<RadioProps> = ({\n  id,\n  name,\n  value,\n  checked,\n  label,\n  onChange,\n  className = \"\",\n  disabled = false,\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      className={`relative flex cursor-pointer  select-none items-center gap-3 text-sm font-medium ${\n        disabled\n          ? \"text-gray-300 dark:text-gray-600 cursor-not-allowed\"\n          : \"text-gray-700 dark:text-gray-400\"\n      } ${className}`}\n    >\n      <input\n        id={id}\n        name={name}\n        type=\"radio\"\n        value={value}\n        checked={checked}\n        onChange={() => !disabled && onChange(value)} // Prevent onChange when disabled\n        className=\"sr-only\"\n        disabled={disabled} // Disable input\n      />\n      <span\n        className={`flex h-5 w-5 items-center justify-center rounded-full border-[1.25px] ${\n          checked\n            ? \"border-brand-500 bg-brand-500\"\n            : \"bg-transparent border-gray-300 dark:border-gray-700\"\n        } ${\n          disabled\n            ? \"bg-gray-100 dark:bg-gray-700 border-gray-200 dark:border-gray-700\"\n            : \"\"\n        }`}\n      >\n        <span\n          className={`h-2 w-2 rounded-full bg-white ${\n            checked ? \"block\" : \"hidden\"\n          }`}\n        ></span>\n      </span>\n      {label}\n    </label>\n  );\n};\n\nexport default Radio;\n","size_bytes":1781},"frontend/src/components/Layout.tsx":{"content":"import { Outlet, Link, useLocation } from 'react-router';\nimport { useAuth } from '../context/AuthContext';\n\nconst Layout = () => {\n  const { user, logout } = useAuth();\n  const location = useLocation();\n\n  const isActive = (path: string) => location.pathname === path;\n\n  const navItems = [\n    { path: '/', label: 'Dashboard', icon: '📊' },\n    { path: '/requests', label: 'Requests', icon: '📋' },\n    { path: '/new-request', label: 'New Request', icon: '➕' },\n    { path: '/vendors', label: 'Vendors', icon: '🏢' },\n  ];\n\n  return (\n    <div className=\"flex h-screen bg-gray-100\">\n      {/* Sidebar */}\n      <aside className=\"w-64 bg-gray-900 text-white\">\n        <div className=\"p-6\">\n          <h1 className=\"text-2xl font-bold\">PROCAPP</h1>\n          <p className=\"text-sm text-gray-400\">Procurement System</p>\n        </div>\n\n        <nav className=\"mt-6\">\n          {navItems.map((item) => (\n            <Link\n              key={item.path}\n              to={item.path}\n              className={`flex items-center gap-3 px-6 py-3 transition-colors ${\n                isActive(item.path)\n                  ? 'bg-blue-600 text-white'\n                  : 'text-gray-300 hover:bg-gray-800'\n              }`}\n            >\n              <span className=\"text-xl\">{item.icon}</span>\n              <span>{item.label}</span>\n            </Link>\n          ))}\n        </nav>\n\n        <div className=\"absolute bottom-0 w-64 border-t border-gray-800 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium\">{user?.username}</p>\n              <p className=\"text-xs text-gray-400 capitalize\">{user?.role}</p>\n            </div>\n            <button\n              onClick={logout}\n              className=\"rounded bg-red-600 px-3 py-1 text-sm hover:bg-red-700\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </aside>\n\n      {/* Main Content */}\n      <main className=\"flex-1 overflow-auto p-8\">\n        <Outlet />\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n","size_bytes":2099},"frontend/src/pages/Procurement/NewRequest.tsx":{"content":"const NewRequest = () => {\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold text-gray-900\">New Request</h1>\n      <p className=\"mt-2 text-gray-600\">Create a new procurement request</p>\n      <div className=\"mt-6 rounded-lg bg-gray-50 p-8 text-center\">\n        <p className=\"text-gray-500\">Coming soon...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default NewRequest;\n","size_bytes":396},"frontend/src/components/form/input/TextArea.tsx":{"content":"import React from \"react\";\n\ninterface TextareaProps {\n  placeholder?: string; // Placeholder text\n  rows?: number; // Number of rows\n  value?: string; // Current value\n  onChange?: (value: string) => void; // Change handler\n  className?: string; // Additional CSS classes\n  disabled?: boolean; // Disabled state\n  error?: boolean; // Error state\n  hint?: string; // Hint text to display\n}\n\nconst TextArea: React.FC<TextareaProps> = ({\n  placeholder = \"Enter your message\", // Default placeholder\n  rows = 3, // Default number of rows\n  value = \"\", // Default value\n  onChange, // Callback for changes\n  className = \"\", // Additional custom styles\n  disabled = false, // Disabled state\n  error = false, // Error state\n  hint = \"\", // Default hint text\n}) => {\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    if (onChange) {\n      onChange(e.target.value);\n    }\n  };\n\n  let textareaClasses = `w-full rounded-lg border px-4 py-2.5 text-sm shadow-theme-xs focus:outline-hidden ${className} `;\n\n  if (disabled) {\n    textareaClasses += ` bg-gray-100 opacity-50 text-gray-500 border-gray-300 cursor-not-allowed opacity40 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-700`;\n  } else if (error) {\n    textareaClasses += ` bg-transparent  border-gray-300 focus:border-error-300 focus:ring-3 focus:ring-error-500/10 dark:border-gray-700 dark:bg-gray-900 dark:text-white/90 dark:focus:border-error-800`;\n  } else {\n    textareaClasses += ` bg-transparent text-gray-900 dark:text-gray-300 text-gray-900 border-gray-300 focus:border-brand-300 focus:ring-3 focus:ring-brand-500/10 dark:border-gray-700 dark:bg-gray-900 dark:text-white/90 dark:focus:border-brand-800`;\n  }\n\n  return (\n    <div className=\"relative\">\n      <textarea\n        placeholder={placeholder}\n        rows={rows}\n        value={value}\n        onChange={handleChange}\n        disabled={disabled}\n        className={textareaClasses}\n      />\n      {hint && (\n        <p\n          className={`mt-2 text-sm ${\n            error ? \"text-error-500\" : \"text-gray-500 dark:text-gray-400\"\n          }`}\n        >\n          {hint}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default TextArea;\n","size_bytes":2182},"frontend/src/components/UserProfile/UserInfoCard.tsx":{"content":"import { useModal } from \"../../hooks/useModal\";\nimport { Modal } from \"../ui/modal\";\nimport Button from \"../ui/button/Button\";\nimport Input from \"../form/input/InputField\";\nimport Label from \"../form/Label\";\n\nexport default function UserInfoCard() {\n  const { isOpen, openModal, closeModal } = useModal();\n  const handleSave = () => {\n    // Handle save logic here\n    console.log(\"Saving changes...\");\n    closeModal();\n  };\n  return (\n    <div className=\"p-5 border border-gray-200 rounded-2xl dark:border-gray-800 lg:p-6\">\n      <div className=\"flex flex-col gap-6 lg:flex-row lg:items-start lg:justify-between\">\n        <div>\n          <h4 className=\"text-lg font-semibold text-gray-800 dark:text-white/90 lg:mb-6\">\n            Personal Information\n          </h4>\n\n          <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-2 lg:gap-7 2xl:gap-x-32\">\n            <div>\n              <p className=\"mb-2 text-xs leading-normal text-gray-500 dark:text-gray-400\">\n                First Name\n              </p>\n              <p className=\"text-sm font-medium text-gray-800 dark:text-white/90\">\n                Musharof\n              </p>\n            </div>\n\n            <div>\n              <p className=\"mb-2 text-xs leading-normal text-gray-500 dark:text-gray-400\">\n                Last Name\n              </p>\n              <p className=\"text-sm font-medium text-gray-800 dark:text-white/90\">\n                Chowdhury\n              </p>\n            </div>\n\n            <div>\n              <p className=\"mb-2 text-xs leading-normal text-gray-500 dark:text-gray-400\">\n                Email address\n              </p>\n              <p className=\"text-sm font-medium text-gray-800 dark:text-white/90\">\n                randomuser@pimjo.com\n              </p>\n            </div>\n\n            <div>\n              <p className=\"mb-2 text-xs leading-normal text-gray-500 dark:text-gray-400\">\n                Phone\n              </p>\n              <p className=\"text-sm font-medium text-gray-800 dark:text-white/90\">\n                +09 363 398 46\n              </p>\n            </div>\n\n            <div>\n              <p className=\"mb-2 text-xs leading-normal text-gray-500 dark:text-gray-400\">\n                Bio\n              </p>\n              <p className=\"text-sm font-medium text-gray-800 dark:text-white/90\">\n                Team Manager\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <button\n          onClick={openModal}\n          className=\"flex w-full items-center justify-center gap-2 rounded-full border border-gray-300 bg-white px-4 py-3 text-sm font-medium text-gray-700 shadow-theme-xs hover:bg-gray-50 hover:text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-white/[0.03] dark:hover:text-gray-200 lg:inline-flex lg:w-auto\"\n        >\n          <svg\n            className=\"fill-current\"\n            width=\"18\"\n            height=\"18\"\n            viewBox=\"0 0 18 18\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M15.0911 2.78206C14.2125 1.90338 12.7878 1.90338 11.9092 2.78206L4.57524 10.116C4.26682 10.4244 4.0547 10.8158 3.96468 11.2426L3.31231 14.3352C3.25997 14.5833 3.33653 14.841 3.51583 15.0203C3.69512 15.1996 3.95286 15.2761 4.20096 15.2238L7.29355 14.5714C7.72031 14.4814 8.11172 14.2693 8.42013 13.9609L15.7541 6.62695C16.6327 5.74827 16.6327 4.32365 15.7541 3.44497L15.0911 2.78206ZM12.9698 3.84272C13.2627 3.54982 13.7376 3.54982 14.0305 3.84272L14.6934 4.50563C14.9863 4.79852 14.9863 5.2734 14.6934 5.56629L14.044 6.21573L12.3204 4.49215L12.9698 3.84272ZM11.2597 5.55281L5.6359 11.1766C5.53309 11.2794 5.46238 11.4099 5.43238 11.5522L5.01758 13.5185L6.98394 13.1037C7.1262 13.0737 7.25666 13.003 7.35947 12.9002L12.9833 7.27639L11.2597 5.55281Z\"\n              fill=\"\"\n            />\n          </svg>\n          Edit\n        </button>\n      </div>\n\n      <Modal isOpen={isOpen} onClose={closeModal} className=\"max-w-[700px] m-4\">\n        <div className=\"no-scrollbar relative w-full max-w-[700px] overflow-y-auto rounded-3xl bg-white p-4 dark:bg-gray-900 lg:p-11\">\n          <div className=\"px-2 pr-14\">\n            <h4 className=\"mb-2 text-2xl font-semibold text-gray-800 dark:text-white/90\">\n              Edit Personal Information\n            </h4>\n            <p className=\"mb-6 text-sm text-gray-500 dark:text-gray-400 lg:mb-7\">\n              Update your details to keep your profile up-to-date.\n            </p>\n          </div>\n          <form className=\"flex flex-col\">\n            <div className=\"custom-scrollbar h-[450px] overflow-y-auto px-2 pb-3\">\n              <div>\n                <h5 className=\"mb-5 text-lg font-medium text-gray-800 dark:text-white/90 lg:mb-6\">\n                  Social Links\n                </h5>\n\n                <div className=\"grid grid-cols-1 gap-x-6 gap-y-5 lg:grid-cols-2\">\n                  <div>\n                    <Label>Facebook</Label>\n                    <Input\n                      type=\"text\"\n                      value=\"https://www.facebook.com/PimjoHQ\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label>X.com</Label>\n                    <Input type=\"text\" value=\"https://x.com/PimjoHQ\" />\n                  </div>\n\n                  <div>\n                    <Label>Linkedin</Label>\n                    <Input\n                      type=\"text\"\n                      value=\"https://www.linkedin.com/company/pimjo\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label>Instagram</Label>\n                    <Input type=\"text\" value=\"https://instagram.com/PimjoHQ\" />\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-7\">\n                <h5 className=\"mb-5 text-lg font-medium text-gray-800 dark:text-white/90 lg:mb-6\">\n                  Personal Information\n                </h5>\n\n                <div className=\"grid grid-cols-1 gap-x-6 gap-y-5 lg:grid-cols-2\">\n                  <div className=\"col-span-2 lg:col-span-1\">\n                    <Label>First Name</Label>\n                    <Input type=\"text\" value=\"Musharof\" />\n                  </div>\n\n                  <div className=\"col-span-2 lg:col-span-1\">\n                    <Label>Last Name</Label>\n                    <Input type=\"text\" value=\"Chowdhury\" />\n                  </div>\n\n                  <div className=\"col-span-2 lg:col-span-1\">\n                    <Label>Email Address</Label>\n                    <Input type=\"text\" value=\"randomuser@pimjo.com\" />\n                  </div>\n\n                  <div className=\"col-span-2 lg:col-span-1\">\n                    <Label>Phone</Label>\n                    <Input type=\"text\" value=\"+09 363 398 46\" />\n                  </div>\n\n                  <div className=\"col-span-2\">\n                    <Label>Bio</Label>\n                    <Input type=\"text\" value=\"Team Manager\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-3 px-2 mt-6 lg:justify-end\">\n              <Button size=\"sm\" variant=\"outline\" onClick={closeModal}>\n                Close\n              </Button>\n              <Button size=\"sm\" onClick={handleSave}>\n                Save Changes\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","size_bytes":7505},"frontend/src/components/form/input/InputField.tsx":{"content":"import type React from \"react\";\nimport type { FC } from \"react\";\n\ninterface InputProps {\n  type?: \"text\" | \"number\" | \"email\" | \"password\" | \"date\" | \"time\" | string;\n  id?: string;\n  name?: string;\n  placeholder?: string;\n  value?: string | number;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  min?: string;\n  max?: string;\n  step?: number;\n  disabled?: boolean;\n  success?: boolean;\n  error?: boolean;\n  hint?: string;\n}\n\nconst Input: FC<InputProps> = ({\n  type = \"text\",\n  id,\n  name,\n  placeholder,\n  value,\n  onChange,\n  className = \"\",\n  min,\n  max,\n  step,\n  disabled = false,\n  success = false,\n  error = false,\n  hint,\n}) => {\n  let inputClasses = ` h-11 w-full rounded-lg border appearance-none px-4 py-2.5 text-sm shadow-theme-xs placeholder:text-gray-400 focus:outline-hidden focus:ring-3  dark:bg-gray-900 dark:text-white/90 dark:placeholder:text-white/30 ${className}`;\n\n  if (disabled) {\n    inputClasses += ` text-gray-500 border-gray-300 opacity-40 bg-gray-100 cursor-not-allowed dark:bg-gray-800 dark:text-gray-400 dark:border-gray-700 opacity-40`;\n  } else if (error) {\n    inputClasses += `  border-error-500 focus:border-error-300 focus:ring-error-500/20 dark:text-error-400 dark:border-error-500 dark:focus:border-error-800`;\n  } else if (success) {\n    inputClasses += `  border-success-500 focus:border-success-300 focus:ring-success-500/20 dark:text-success-400 dark:border-success-500 dark:focus:border-success-800`;\n  } else {\n    inputClasses += ` bg-transparent text-gray-800 border-gray-300 focus:border-brand-300 focus:ring-brand-500/20 dark:border-gray-700 dark:text-white/90  dark:focus:border-brand-800`;\n  }\n\n  return (\n    <div className=\"relative\">\n      <input\n        type={type}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        min={min}\n        max={max}\n        step={step}\n        disabled={disabled}\n        className={inputClasses}\n      />\n\n      {hint && (\n        <p\n          className={`mt-1.5 text-xs ${\n            error\n              ? \"text-error-500\"\n              : success\n              ? \"text-success-500\"\n              : \"text-gray-500\"\n          }`}\n        >\n          {hint}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","size_bytes":2323},"frontend/src/components/common/PageBreadCrumb.tsx":{"content":"import { Link } from \"react-router\";\n\ninterface BreadcrumbProps {\n  pageTitle: string;\n}\n\nconst PageBreadcrumb: React.FC<BreadcrumbProps> = ({ pageTitle }) => {\n  return (\n    <div className=\"flex flex-wrap items-center justify-between gap-3 mb-6\">\n      <h2\n        className=\"text-xl font-semibold text-gray-800 dark:text-white/90\"\n        x-text=\"pageName\"\n      >\n        {pageTitle}\n      </h2>\n      <nav>\n        <ol className=\"flex items-center gap-1.5\">\n          <li>\n            <Link\n              className=\"inline-flex items-center gap-1.5 text-sm text-gray-500 dark:text-gray-400\"\n              to=\"/\"\n            >\n              Home\n              <svg\n                className=\"stroke-current\"\n                width=\"17\"\n                height=\"16\"\n                viewBox=\"0 0 17 16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M6.0765 12.667L10.2432 8.50033L6.0765 4.33366\"\n                  stroke=\"\"\n                  strokeWidth=\"1.2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </Link>\n          </li>\n          <li className=\"text-sm text-gray-800 dark:text-white/90\">\n            {pageTitle}\n          </li>\n        </ol>\n      </nav>\n    </div>\n  );\n};\n\nexport default PageBreadcrumb;\n","size_bytes":1395},"frontend/src/components/ProtectedRoute.tsx":{"content":"import { Navigate } from 'react-router';\nimport { useAuth } from '../context/AuthContext';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n}\n\nconst ProtectedRoute = ({ children }: ProtectedRouteProps) => {\n  const { user, isLoading } = useAuth();\n\n  if (isLoading) {\n    return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <div className=\"h-16 w-16 animate-spin rounded-full border-4 border-gray-200 border-t-blue-500\"></div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;\n","size_bytes":622},"frontend/src/components/form/form-elements/RadioButtons.tsx":{"content":"import { useState } from \"react\";\nimport ComponentCard from \"../../common/ComponentCard\";\nimport Radio from \"../input/Radio\";\n\nexport default function RadioButtons() {\n  const [selectedValue, setSelectedValue] = useState<string>(\"option2\");\n\n  const handleRadioChange = (value: string) => {\n    setSelectedValue(value);\n  };\n  return (\n    <ComponentCard title=\"Radio Buttons\">\n      <div className=\"flex flex-wrap items-center gap-8\">\n        <Radio\n          id=\"radio1\"\n          name=\"group1\"\n          value=\"option1\"\n          checked={selectedValue === \"option1\"}\n          onChange={handleRadioChange}\n          label=\"Default\"\n        />\n        <Radio\n          id=\"radio2\"\n          name=\"group1\"\n          value=\"option2\"\n          checked={selectedValue === \"option2\"}\n          onChange={handleRadioChange}\n          label=\"Selected\"\n        />\n        <Radio\n          id=\"radio3\"\n          name=\"group1\"\n          value=\"option3\"\n          checked={selectedValue === \"option3\"}\n          onChange={handleRadioChange}\n          label=\"Disabled\"\n          disabled={true}\n        />\n      </div>\n    </ComponentCard>\n  );\n}\n","size_bytes":1138},"frontend/src/pages/Procurement/Requests.tsx":{"content":"const Requests = () => {\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold text-gray-900\">Procurement Requests</h1>\n      <p className=\"mt-2 text-gray-600\">View and manage all procurement requests</p>\n      <div className=\"mt-6 rounded-lg bg-gray-50 p-8 text-center\">\n        <p className=\"text-gray-500\">Coming soon...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Requests;\n","size_bytes":409},"frontend/src/components/form/input/FileInput.tsx":{"content":"import { FC } from \"react\";\n\ninterface FileInputProps {\n  className?: string;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst FileInput: FC<FileInputProps> = ({ className, onChange }) => {\n  return (\n    <input\n      type=\"file\"\n      className={`focus:border-ring-brand-300 h-11 w-full overflow-hidden rounded-lg border border-gray-300 bg-transparent text-sm text-gray-500 shadow-theme-xs transition-colors file:mr-5 file:border-collapse file:cursor-pointer file:rounded-l-lg file:border-0 file:border-r file:border-solid file:border-gray-200 file:bg-gray-50 file:py-3 file:pl-3.5 file:pr-3 file:text-sm file:text-gray-700 placeholder:text-gray-400 hover:file:bg-gray-100 focus:outline-hidden focus:file:ring-brand-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-400 dark:text-white/90 dark:file:border-gray-800 dark:file:bg-white/[0.03] dark:file:text-gray-400 dark:placeholder:text-gray-400 ${className}`}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default FileInput;\n","size_bytes":1014},"frontend/src/pages/UiElements/Videos.tsx":{"content":"import ComponentCard from \"../../components/common/ComponentCard\";\nimport PageBreadcrumb from \"../../components/common/PageBreadCrumb\";\nimport PageMeta from \"../../components/common/PageMeta\";\nimport FourIsToThree from \"../../components/ui/videos/FourIsToThree\";\nimport OneIsToOne from \"../../components/ui/videos/OneIsToOne\";\nimport SixteenIsToNine from \"../../components/ui/videos/SixteenIsToNine\";\nimport TwentyOneIsToNine from \"../../components/ui/videos/TwentyOneIsToNine\";\n\nexport default function Videos() {\n  return (\n    <>\n      <PageMeta\n        title=\"React.js Videos Tabs | TailAdmin - React.js Admin Dashboard Template\"\n        description=\"This is React.js Videos page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Videos\" />\n      <div className=\"grid grid-cols-1 gap-5 sm:gap-6 xl:grid-cols-2\">\n        <div className=\"space-y-5 sm:space-y-6\">\n          <ComponentCard title=\"Video Ratio 16:9\">\n            <SixteenIsToNine />\n          </ComponentCard>\n          <ComponentCard title=\"Video Ratio 4:3\">\n            <FourIsToThree />\n          </ComponentCard>\n        </div>\n        <div className=\"space-y-5 sm:space-y-6\">\n          <ComponentCard title=\"Video Ratio 21:9\">\n            <TwentyOneIsToNine />\n          </ComponentCard>\n          <ComponentCard title=\"Video Ratio 1:1\">\n            <OneIsToOne />\n          </ComponentCard>\n        </div>\n      </div>\n    </>\n  );\n}\n","size_bytes":1461},"frontend/src/pages/UiElements/Buttons.tsx":{"content":"import ComponentCard from \"../../components/common/ComponentCard\";\nimport PageBreadcrumb from \"../../components/common/PageBreadCrumb\";\nimport PageMeta from \"../../components/common/PageMeta\";\nimport Button from \"../../components/ui/button/Button\";\nimport { BoxIcon } from \"../../icons\";\n\nexport default function Buttons() {\n  return (\n    <div>\n      <PageMeta\n        title=\"React.js Buttons Dashboard | TailAdmin - React.js Admin Dashboard Template\"\n        description=\"This is React.js Buttons Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Buttons\" />\n      <div className=\"space-y-5 sm:space-y-6\">\n        {/* Primary Button */}\n        <ComponentCard title=\"Primary Button\">\n          <div className=\"flex items-center gap-5\">\n            <Button size=\"sm\" variant=\"primary\">\n              Button Text\n            </Button>\n            <Button size=\"md\" variant=\"primary\">\n              Button Text\n            </Button>\n          </div>\n        </ComponentCard>\n        {/* Primary Button with Start Icon */}\n        <ComponentCard title=\"Primary Button with Left Icon\">\n          <div className=\"flex items-center gap-5\">\n            <Button\n              size=\"sm\"\n              variant=\"primary\"\n              startIcon={<BoxIcon className=\"size-5\" />}\n            >\n              Button Text\n            </Button>\n            <Button\n              size=\"md\"\n              variant=\"primary\"\n              startIcon={<BoxIcon className=\"size-5\" />}\n            >\n              Button Text\n            </Button>\n          </div>\n        </ComponentCard>\n        {/* Primary Button with Start Icon */}\n        <ComponentCard title=\"Primary Button with Right Icon\">\n          <div className=\"flex items-center gap-5\">\n            <Button\n              size=\"sm\"\n              variant=\"primary\"\n              endIcon={<BoxIcon className=\"size-5\" />}\n            >\n              Button Text\n            </Button>\n            <Button\n              size=\"md\"\n              variant=\"primary\"\n              endIcon={<BoxIcon className=\"size-5\" />}\n            >\n              Button Text\n            </Button>\n          </div>\n        </ComponentCard>\n        {/* Outline Button */}\n        <ComponentCard title=\"Secondary Button\">\n          <div className=\"flex items-center gap-5\">\n            {/* Outline Button */}\n            <Button size=\"sm\" variant=\"outline\">\n              Button Text\n            </Button>\n            <Button size=\"md\" variant=\"outline\">\n              Button Text\n            </Button>\n          </div>\n        </ComponentCard>\n        {/* Outline Button with Start Icon */}\n        <ComponentCard title=\"Outline Button with Left Icon\">\n          <div className=\"flex items-center gap-5\">\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              startIcon={<BoxIcon className=\"size-5\" />}\n            >\n              Button Text\n            </Button>\n            <Button\n              size=\"md\"\n              variant=\"outline\"\n              startIcon={<BoxIcon className=\"size-5\" />}\n            >\n              Button Text\n            </Button>\n          </div>\n        </ComponentCard>{\" \"}\n        {/* Outline Button with Start Icon */}\n        <ComponentCard title=\"Outline Button with Right Icon\">\n          <div className=\"flex items-center gap-5\">\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              endIcon={<BoxIcon className=\"size-5\" />}\n            >\n              Button Text\n            </Button>\n            <Button\n              size=\"md\"\n              variant=\"outline\"\n              endIcon={<BoxIcon className=\"size-5\" />}\n            >\n              Button Text\n            </Button>\n          </div>\n        </ComponentCard>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3850},"frontend/src/components/form/form-elements/DefaultInputs.tsx":{"content":"import { useState } from \"react\";\nimport ComponentCard from \"../../common/ComponentCard\";\nimport Label from \"../Label\";\nimport Input from \"../input/InputField\";\nimport Select from \"../Select\";\nimport { EyeCloseIcon, EyeIcon, TimeIcon } from \"../../../icons\";\nimport DatePicker from \"../date-picker.tsx\";\n\nexport default function DefaultInputs() {\n  const [showPassword, setShowPassword] = useState(false);\n  const options = [\n    { value: \"marketing\", label: \"Marketing\" },\n    { value: \"template\", label: \"Template\" },\n    { value: \"development\", label: \"Development\" },\n  ];\n  const handleSelectChange = (value: string) => {\n    console.log(\"Selected value:\", value);\n  };\n\n  return (\n    <ComponentCard title=\"Default Inputs\">\n      <div className=\"space-y-6\">\n        <div>\n          <Label htmlFor=\"input\">Input</Label>\n          <Input type=\"text\" id=\"input\" />\n        </div>\n        <div>\n          <Label htmlFor=\"inputTwo\">Input with Placeholder</Label>\n          <Input type=\"text\" id=\"inputTwo\" placeholder=\"info@gmail.com\" />\n        </div>\n        <div>\n          <Label>Select Input</Label>\n          <Select\n            options={options}\n            placeholder=\"Select an option\"\n            onChange={handleSelectChange}\n            className=\"dark:bg-dark-900\"\n          />\n        </div>\n        <div>\n          <Label>Password Input</Label>\n          <div className=\"relative\">\n            <Input\n              type={showPassword ? \"text\" : \"password\"}\n              placeholder=\"Enter your password\"\n            />\n            <button\n              onClick={() => setShowPassword(!showPassword)}\n              className=\"absolute z-30 -translate-y-1/2 cursor-pointer right-4 top-1/2\"\n            >\n              {showPassword ? (\n                <EyeIcon className=\"fill-gray-500 dark:fill-gray-400 size-5\" />\n              ) : (\n                <EyeCloseIcon className=\"fill-gray-500 dark:fill-gray-400 size-5\" />\n              )}\n            </button>\n          </div>\n        </div>\n\n        <div>\n          <DatePicker\n            id=\"date-picker\"\n            label=\"Date Picker Input\"\n            placeholder=\"Select a date\"\n            onChange={(dates, currentDateString) => {\n              // Handle your logic\n              console.log({ dates, currentDateString });\n            }}\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"tm\">Time Picker Input</Label>\n          <div className=\"relative\">\n            <Input\n              type=\"time\"\n              id=\"tm\"\n              name=\"tm\"\n              onChange={(e) => console.log(e.target.value)}\n            />\n            <span className=\"absolute text-gray-500 -translate-y-1/2 pointer-events-none right-3 top-1/2 dark:text-gray-400\">\n              <TimeIcon className=\"size-6\" />\n            </span>\n          </div>\n        </div>\n        <div>\n          <Label htmlFor=\"tm\">Input with Payment</Label>\n          <div className=\"relative\">\n            <Input\n              type=\"text\"\n              placeholder=\"Card number\"\n              className=\"pl-[62px]\"\n            />\n            <span className=\"absolute left-0 top-1/2 flex h-11 w-[46px] -translate-y-1/2 items-center justify-center border-r border-gray-200 dark:border-gray-800\">\n              <svg\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 20 20\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <circle cx=\"6.25\" cy=\"10\" r=\"5.625\" fill=\"#E80B26\" />\n                <circle cx=\"13.75\" cy=\"10\" r=\"5.625\" fill=\"#F59D31\" />\n                <path\n                  d=\"M10 14.1924C11.1508 13.1625 11.875 11.6657 11.875 9.99979C11.875 8.33383 11.1508 6.8371 10 5.80713C8.84918 6.8371 8.125 8.33383 8.125 9.99979C8.125 11.6657 8.84918 13.1625 10 14.1924Z\"\n                  fill=\"#FC6020\"\n                />\n              </svg>\n            </span>\n          </div>\n        </div>\n      </div>\n    </ComponentCard>\n  );\n}\n","size_bytes":3988},"frontend/src/icons/index.ts":{"content":"import { ReactComponent as PlusIcon } from \"./plus.svg?react\";\nimport { ReactComponent as CloseIcon } from \"./close.svg?react\";\nimport { ReactComponent as BoxIcon } from \"./box.svg?react\";\nimport { ReactComponent as CheckCircleIcon } from \"./check-circle.svg?react\";\nimport { ReactComponent as AlertIcon } from \"./alert.svg?react\";\nimport { ReactComponent as InfoIcon } from \"./info.svg?react\";\nimport { ReactComponent as ErrorIcon } from \"./info-error.svg?react\";\nimport { ReactComponent as BoltIcon } from \"./bolt.svg?react\";\nimport { ReactComponent as ArrowUpIcon } from \"./arrow-up.svg?react\";\nimport { ReactComponent as ArrowDownIcon } from \"./arrow-down.svg?react\";\nimport { ReactComponent as FolderIcon } from \"./folder.svg?react\";\nimport { ReactComponent as VideoIcon } from \"./videos.svg?react\";\nimport { ReactComponent as AudioIcon } from \"./audio.svg?react\";\nimport { ReactComponent as GridIcon } from \"./grid.svg?react\";\nimport { ReactComponent as FileIcon } from \"./file.svg?react\";\nimport { ReactComponent as DownloadIcon } from \"./download.svg?react\";\nimport { ReactComponent as ArrowRightIcon } from \"./arrow-right.svg?react\";\nimport { ReactComponent as GroupIcon } from \"./group.svg?react\";\nimport { ReactComponent as BoxIconLine } from \"./box-line.svg?react\";\nimport { ReactComponent as ShootingStarIcon } from \"./shooting-star.svg?react\";\nimport { ReactComponent as DollarLineIcon } from \"./dollar-line.svg?react\";\nimport { ReactComponent as TrashBinIcon } from \"./trash.svg?react\";\nimport { ReactComponent as AngleUpIcon } from \"./angle-up.svg?react\";\nimport { ReactComponent as AngleDownIcon } from \"./angle-down.svg?react\";\nimport { ReactComponent as AngleLeftIcon } from \"./angle-left.svg?react\";\nimport { ReactComponent as AngleRightIcon } from \"./angle-right.svg?react\";\nimport { ReactComponent as PencilIcon } from \"./pencil.svg?react\";\nimport { ReactComponent as CheckLineIcon } from \"./check-line.svg?react\";\nimport { ReactComponent as CloseLineIcon } from \"./close-line.svg?react\";\nimport { ReactComponent as ChevronDownIcon } from \"./chevron-down.svg?react\";\nimport { ReactComponent as ChevronUpIcon } from \"./chevron-up.svg?react\";\nimport { ReactComponent as PaperPlaneIcon } from \"./paper-plane.svg?react\";\nimport { ReactComponent as LockIcon } from \"./lock.svg?react\";\nimport { ReactComponent as EnvelopeIcon } from \"./envelope.svg?react\";\nimport { ReactComponent as UserIcon } from \"./user-line.svg?react\";\nimport { ReactComponent as CalenderIcon } from \"./calender-line.svg?react\";\nimport { ReactComponent as EyeIcon } from \"./eye.svg?react\";\nimport { ReactComponent as EyeCloseIcon } from \"./eye-close.svg?react\";\nimport { ReactComponent as TimeIcon } from \"./time.svg?react\";\nimport { ReactComponent as CopyIcon } from \"./copy.svg?react\";\nimport { ReactComponent as ChevronLeftIcon } from \"./chevron-left.svg?react\";\nimport { ReactComponent as UserCircleIcon } from \"./user-circle.svg?react\";\nimport { ReactComponent as TaskIcon } from \"./task-icon.svg?react\";\nimport { ReactComponent as ListIcon } from \"./list.svg?react\";\nimport { ReactComponent as TableIcon } from \"./table.svg?react\";\nimport { ReactComponent as PageIcon } from \"./page.svg?react\";\nimport { ReactComponent as PieChartIcon } from \"./pie-chart.svg?react\";\nimport { ReactComponent as BoxCubeIcon } from \"./box-cube.svg?react\";\nimport { ReactComponent as PlugInIcon } from \"./plug-in.svg?react\";\nimport { ReactComponent as DocsIcon } from \"./docs.svg?react\";\nimport { ReactComponent as MailIcon } from \"./mail-line.svg?react\";\nimport { ReactComponent as HorizontaLDots } from \"./horizontal-dots.svg?react\";\nimport { ReactComponent as ChatIcon } from \"./chat.svg?react\";\nimport { ReactComponent as MoreDotIcon } from \"./moredot.svg?react\";\nimport { ReactComponent as AlertHexaIcon } from \"./alert-hexa.svg?react\";\nimport { ReactComponent as ErrorHexaIcon } from \"./info-hexa.svg?react\";\n\nexport {\n  ErrorHexaIcon,\n  AlertHexaIcon,\n  MoreDotIcon,\n  DownloadIcon,\n  FileIcon,\n  GridIcon,\n  AudioIcon,\n  VideoIcon,\n  BoltIcon,\n  PlusIcon,\n  BoxIcon,\n  CloseIcon,\n  CheckCircleIcon,\n  AlertIcon,\n  InfoIcon,\n  ErrorIcon,\n  ArrowUpIcon,\n  FolderIcon,\n  ArrowDownIcon,\n  ArrowRightIcon,\n  GroupIcon,\n  BoxIconLine,\n  ShootingStarIcon,\n  DollarLineIcon,\n  TrashBinIcon,\n  AngleUpIcon,\n  AngleDownIcon,\n  PencilIcon,\n  CheckLineIcon,\n  CloseLineIcon,\n  ChevronDownIcon,\n  PaperPlaneIcon,\n  EnvelopeIcon,\n  LockIcon,\n  UserIcon,\n  CalenderIcon,\n  EyeIcon,\n  EyeCloseIcon,\n  TimeIcon,\n  CopyIcon,\n  ChevronLeftIcon,\n  UserCircleIcon,\n  TaskIcon,\n  ListIcon,\n  TableIcon,\n  PageIcon,\n  PieChartIcon,\n  BoxCubeIcon,\n  PlugInIcon,\n  DocsIcon,\n  MailIcon,\n  HorizontaLDots,\n  ChevronUpIcon,\n  ChatIcon,\n  AngleLeftIcon,\n  AngleRightIcon,\n};\n","size_bytes":4729},"frontend/src/components/common/ScrollToTop.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\n\nexport function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  }, [pathname]);\n\n  return null;\n}\n","size_bytes":292},"frontend/src/App.tsx":{"content":"import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router\";\nimport { AuthProvider, useAuth } from \"./context/AuthContext\";\nimport { SidebarProvider } from \"./context/SidebarContext\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Login from \"./pages/AuthPages/Login\";\nimport AppLayout from \"./layout/AppLayout\";\nimport { ScrollToTop } from \"./components/common/ScrollToTop\";\nimport Home from \"./pages/Dashboard/Home\";\n\n// Placeholder pages - will be implemented\nimport Requests from \"./pages/Procurement/Requests.tsx\";\nimport NewRequest from \"./pages/Procurement/NewRequest.tsx\";\nimport Vendors from \"./pages/Procurement/Vendors.tsx\";\n\nconst AppContent = () => {\n  const { user } = useAuth();\n\n  return (\n    <Router>\n      <ScrollToTop />\n      <Routes>\n        {/* Public route */}\n        <Route \n          path=\"/login\" \n          element={user ? <Navigate to=\"/\" replace /> : <Login />} \n        />\n\n        {/* Protected routes */}\n        <Route\n          element={\n            <ProtectedRoute>\n              <SidebarProvider>\n                <AppLayout />\n              </SidebarProvider>\n            </ProtectedRoute>\n          }\n        >\n          <Route index path=\"/\" element={<Home />} />\n          <Route path=\"/requests\" element={<Requests />} />\n          <Route path=\"/new-request\" element={<NewRequest />} />\n          <Route path=\"/vendors\" element={<Vendors />} />\n        </Route>\n\n        {/* Fallback */}\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <AppContent />\n    </AuthProvider>\n  );\n}\n","size_bytes":1682},"frontend/src/components/ui/videos/SixteenIsToNine.tsx":{"content":"export default function SixteenIsToNine() {\n  return (\n    <div className=\"aspect-4/3 overflow-hidden rounded-lg\">\n      <iframe\n        src=\"https://www.youtube.com/embed/dQw4w9WgXcQ\"\n        title=\"YouTube video\"\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        className=\"w-full h-full\"\n      ></iframe>\n    </div>\n  );\n}\n","size_bytes":437},"frontend/src/context/ThemeContext.tsx":{"content":"\"use client\";\n\nimport type React from \"react\";\nimport { createContext, useState, useContext, useEffect } from \"react\";\n\ntype Theme = \"light\" | \"dark\";\n\ntype ThemeContextType = {\n  theme: Theme;\n  toggleTheme: () => void;\n};\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [theme, setTheme] = useState<Theme>(\"light\");\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  useEffect(() => {\n    // This code will only run on the client side\n    const savedTheme = localStorage.getItem(\"theme\") as Theme | null;\n    const initialTheme = savedTheme || \"light\"; // Default to light theme\n\n    setTheme(initialTheme);\n    setIsInitialized(true);\n  }, []);\n\n  useEffect(() => {\n    if (isInitialized) {\n      localStorage.setItem(\"theme\", theme);\n      if (theme === \"dark\") {\n        document.documentElement.classList.add(\"dark\");\n      } else {\n        document.documentElement.classList.remove(\"dark\");\n      }\n    }\n  }, [theme, isInitialized]);\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\n","size_bytes":1523},"frontend/src/components/ui/videos/TwentyOneIsToNine.tsx":{"content":"export default function TwentyOneIsToNine() {\n  return (\n    <div className=\"aspect-21/9 overflow-hidden rounded-lg\">\n      <iframe\n        src=\"https://www.youtube.com/embed/dQw4w9WgXcQ\"\n        title=\"YouTube video\"\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        className=\"w-full h-full\"\n      ></iframe>\n    </div>\n  );\n}\n","size_bytes":440},"frontend/src/components/common/ChartTab.tsx":{"content":"import { useState } from \"react\";\n\nconst ChartTab: React.FC = () => {\n  const [selected, setSelected] = useState<\n    \"optionOne\" | \"optionTwo\" | \"optionThree\"\n  >(\"optionOne\");\n\n  const getButtonClass = (option: \"optionOne\" | \"optionTwo\" | \"optionThree\") =>\n    selected === option\n      ? \"shadow-theme-xs text-gray-900 dark:text-white bg-white dark:bg-gray-800\"\n      : \"text-gray-500 dark:text-gray-400\";\n\n  return (\n    <div className=\"flex items-center gap-0.5 rounded-lg bg-gray-100 p-0.5 dark:bg-gray-900\">\n      <button\n        onClick={() => setSelected(\"optionOne\")}\n        className={`px-3 py-2 font-medium w-full rounded-md text-theme-sm hover:text-gray-900   dark:hover:text-white ${getButtonClass(\n          \"optionOne\"\n        )}`}\n      >\n        Monthly\n      </button>\n\n      <button\n        onClick={() => setSelected(\"optionTwo\")}\n        className={`px-3 py-2 font-medium w-full rounded-md text-theme-sm hover:text-gray-900   dark:hover:text-white ${getButtonClass(\n          \"optionTwo\"\n        )}`}\n      >\n        Quarterly\n      </button>\n\n      <button\n        onClick={() => setSelected(\"optionThree\")}\n        className={`px-3 py-2 font-medium w-full rounded-md text-theme-sm hover:text-gray-900   dark:hover:text-white ${getButtonClass(\n          \"optionThree\"\n        )}`}\n      >\n        Annually\n      </button>\n    </div>\n  );\n};\n\nexport default ChartTab;\n","size_bytes":1391},"frontend/src/components/ui/dropdown/DropdownItem.tsx":{"content":"import type React from \"react\";\nimport { Link } from \"react-router\";\n\ninterface DropdownItemProps {\n  tag?: \"a\" | \"button\";\n  to?: string;\n  onClick?: () => void;\n  onItemClick?: () => void;\n  baseClassName?: string;\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const DropdownItem: React.FC<DropdownItemProps> = ({\n  tag = \"button\",\n  to,\n  onClick,\n  onItemClick,\n  baseClassName = \"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\",\n  className = \"\",\n  children,\n}) => {\n  const combinedClasses = `${baseClassName} ${className}`.trim();\n\n  const handleClick = (event: React.MouseEvent) => {\n    if (tag === \"button\") {\n      event.preventDefault();\n    }\n    if (onClick) onClick();\n    if (onItemClick) onItemClick();\n  };\n\n  if (tag === \"a\" && to) {\n    return (\n      <Link to={to} className={combinedClasses} onClick={handleClick}>\n        {children}\n      </Link>\n    );\n  }\n\n  return (\n    <button onClick={handleClick} className={combinedClasses}>\n      {children}\n    </button>\n  );\n};\n","size_bytes":1056},"frontend/src/components/ui/dropdown/Dropdown.tsx":{"content":"import type React from \"react\";\nimport { useEffect, useRef } from \"react\";\n\ninterface DropdownProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Dropdown: React.FC<DropdownProps> = ({\n  isOpen,\n  onClose,\n  children,\n  className = \"\",\n}) => {\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node) &&\n        !(event.target as HTMLElement).closest(\".dropdown-toggle\")\n      ) {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [onClose]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={`absolute z-40  right-0 mt-2  rounded-xl border border-gray-200 bg-white  shadow-theme-lg dark:border-gray-800 dark:bg-gray-dark ${className}`}\n    >\n      {children}\n    </div>\n  );\n};\n","size_bytes":1108},"frontend/src/vite-env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n","size_bytes":38},"frontend/src/hooks/useModal.ts":{"content":"import { useState, useCallback } from \"react\";\n\nexport const useModal = (initialState: boolean = false) => {\n  const [isOpen, setIsOpen] = useState(initialState);\n\n  const openModal = useCallback(() => setIsOpen(true), []);\n  const closeModal = useCallback(() => setIsOpen(false), []);\n  const toggleModal = useCallback(() => setIsOpen((prev) => !prev), []);\n\n  return { isOpen, openModal, closeModal, toggleModal };\n};\n","size_bytes":420},"frontend/src/pages/AuthPages/SignUp.tsx":{"content":"import PageMeta from \"../../components/common/PageMeta\";\nimport AuthLayout from \"./AuthPageLayout\";\nimport SignUpForm from \"../../components/auth/SignUpForm\";\n\nexport default function SignUp() {\n  return (\n    <>\n      <PageMeta\n        title=\"React.js SignUp Dashboard | TailAdmin - Next.js Admin Dashboard Template\"\n        description=\"This is React.js SignUp Tables Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <AuthLayout>\n        <SignUpForm />\n      </AuthLayout>\n    </>\n  );\n}\n","size_bytes":535},"frontend/src/components/form/form-elements/CheckboxComponents.tsx":{"content":"import { useState } from \"react\";\nimport ComponentCard from \"../../common/ComponentCard\";\nimport Checkbox from \"../input/Checkbox\";\n\nexport default function CheckboxComponents() {\n  const [isChecked, setIsChecked] = useState(false);\n  const [isCheckedTwo, setIsCheckedTwo] = useState(true);\n  const [isCheckedDisabled, setIsCheckedDisabled] = useState(false);\n  return (\n    <ComponentCard title=\"Checkbox\">\n      <div className=\"flex items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <Checkbox checked={isChecked} onChange={setIsChecked} />\n          <span className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">\n            Default\n          </span>\n        </div>\n        <div className=\"flex items-center gap-3\">\n          <Checkbox\n            checked={isCheckedTwo}\n            onChange={setIsCheckedTwo}\n            label=\"Checked\"\n          />\n        </div>\n        <div className=\"flex items-center gap-3\">\n          <Checkbox\n            checked={isCheckedDisabled}\n            onChange={setIsCheckedDisabled}\n            disabled\n            label=\"Disabled\"\n          />\n        </div>\n      </div>\n    </ComponentCard>\n  );\n}\n","size_bytes":1187},"frontend/src/components/UserProfile/UserMetaCard.tsx":{"content":"import { useModal } from \"../../hooks/useModal\";\nimport { Modal } from \"../ui/modal\";\nimport Button from \"../ui/button/Button\";\nimport Input from \"../form/input/InputField\";\nimport Label from \"../form/Label\";\n\nexport default function UserMetaCard() {\n  const { isOpen, openModal, closeModal } = useModal();\n  const handleSave = () => {\n    // Handle save logic here\n    console.log(\"Saving changes...\");\n    closeModal();\n  };\n  return (\n    <>\n      <div className=\"p-5 border border-gray-200 rounded-2xl dark:border-gray-800 lg:p-6\">\n        <div className=\"flex flex-col gap-5 xl:flex-row xl:items-center xl:justify-between\">\n          <div className=\"flex flex-col items-center w-full gap-6 xl:flex-row\">\n            <div className=\"w-20 h-20 overflow-hidden border border-gray-200 rounded-full dark:border-gray-800\">\n              <img src=\"/images/user/owner.jpg\" alt=\"user\" />\n            </div>\n            <div className=\"order-3 xl:order-2\">\n              <h4 className=\"mb-2 text-lg font-semibold text-center text-gray-800 dark:text-white/90 xl:text-left\">\n                Musharof Chowdhury\n              </h4>\n              <div className=\"flex flex-col items-center gap-1 text-center xl:flex-row xl:gap-3 xl:text-left\">\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  Team Manager\n                </p>\n                <div className=\"hidden h-3.5 w-px bg-gray-300 dark:bg-gray-700 xl:block\"></div>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  Arizona, United States\n                </p>\n              </div>\n            </div>\n            <div className=\"flex items-center order-2 gap-2 grow xl:order-3 xl:justify-end\">\n              <a\n                href=\"https://www.facebook.com/PimjoHQ\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                className=\"flex h-11 w-11 items-center justify-center gap-2 rounded-full border border-gray-300 bg-white text-sm font-medium text-gray-700 shadow-theme-xs hover:bg-gray-50 hover:text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-white/[0.03] dark:hover:text-gray-200\"\n              >\n                <svg\n                  className=\"fill-current\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M11.6666 11.2503H13.7499L14.5833 7.91699H11.6666V6.25033C11.6666 5.39251 11.6666 4.58366 13.3333 4.58366H14.5833V1.78374C14.3118 1.7477 13.2858 1.66699 12.2023 1.66699C9.94025 1.66699 8.33325 3.04771 8.33325 5.58342V7.91699H5.83325V11.2503H8.33325V18.3337H11.6666V11.2503Z\"\n                    fill=\"\"\n                  />\n                </svg>\n              </a>\n\n              <a\n                href=\"https://x.com/PimjoHQ\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                className=\"flex h-11 w-11 items-center justify-center gap-2 rounded-full border border-gray-300 bg-white text-sm font-medium text-gray-700 shadow-theme-xs hover:bg-gray-50 hover:text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-white/[0.03] dark:hover:text-gray-200\"\n              >\n                <svg\n                  className=\"fill-current\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M15.1708 1.875H17.9274L11.9049 8.75833L18.9899 18.125H13.4424L9.09742 12.4442L4.12578 18.125H1.36745L7.80912 10.7625L1.01245 1.875H6.70078L10.6283 7.0675L15.1708 1.875ZM14.2033 16.475H15.7308L5.87078 3.43833H4.23162L14.2033 16.475Z\"\n                    fill=\"\"\n                  />\n                </svg>\n              </a>\n\n              <a\n                href=\"https://www.linkedin.com/company/pimjo\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                className=\"flex h-11 w-11 items-center justify-center gap-2 rounded-full border border-gray-300 bg-white text-sm font-medium text-gray-700 shadow-theme-xs hover:bg-gray-50 hover:text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-white/[0.03] dark:hover:text-gray-200\"\n              >\n                <svg\n                  className=\"fill-current\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M5.78381 4.16645C5.78351 4.84504 5.37181 5.45569 4.74286 5.71045C4.11391 5.96521 3.39331 5.81321 2.92083 5.32613C2.44836 4.83904 2.31837 4.11413 2.59216 3.49323C2.86596 2.87233 3.48886 2.47942 4.16715 2.49978C5.06804 2.52682 5.78422 3.26515 5.78381 4.16645ZM5.83381 7.06645H2.50048V17.4998H5.83381V7.06645ZM11.1005 7.06645H7.78381V17.4998H11.0672V12.0248C11.0672 8.97475 15.0422 8.69142 15.0422 12.0248V17.4998H18.3338V10.8914C18.3338 5.74978 12.4505 5.94145 11.0672 8.46642L11.1005 7.06645Z\"\n                    fill=\"\"\n                  />\n                </svg>\n              </a>\n\n              <a\n                href=\"https://instagram.com/PimjoHQ\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                className=\"flex h-11 w-11 items-center justify-center gap-2 rounded-full border border-gray-300 bg-white text-sm font-medium text-gray-700 shadow-theme-xs hover:bg-gray-50 hover:text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-white/[0.03] dark:hover:text-gray-200\"\n              >\n                <svg\n                  className=\"fill-current\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M10.8567 1.66699C11.7946 1.66854 12.2698 1.67351 12.6805 1.68573L12.8422 1.69102C13.0291 1.69766 13.2134 1.70599 13.4357 1.71641C14.3224 1.75738 14.9273 1.89766 15.4586 2.10391C16.0078 2.31572 16.4717 2.60183 16.9349 3.06503C17.3974 3.52822 17.6836 3.99349 17.8961 4.54141C18.1016 5.07197 18.2419 5.67753 18.2836 6.56433C18.2935 6.78655 18.3015 6.97088 18.3081 7.15775L18.3133 7.31949C18.3255 7.73011 18.3311 8.20543 18.3328 9.1433L18.3335 9.76463C18.3336 9.84055 18.3336 9.91888 18.3336 9.99972L18.3335 10.2348L18.333 10.8562C18.3314 11.794 18.3265 12.2694 18.3142 12.68L18.3089 12.8417C18.3023 13.0286 18.294 13.213 18.2836 13.4351C18.2426 14.322 18.1016 14.9268 17.8961 15.458C17.6842 16.0074 17.3974 16.4713 16.9349 16.9345C16.4717 17.397 16.0057 17.6831 15.4586 17.8955C14.9273 18.1011 14.3224 18.2414 13.4357 18.2831C13.2134 18.293 13.0291 18.3011 12.8422 18.3076L12.6805 18.3128C12.2698 18.3251 11.7946 18.3306 10.8567 18.3324L10.2353 18.333C10.1594 18.333 10.0811 18.333 10.0002 18.333H9.76516L9.14375 18.3325C8.20591 18.331 7.7306 18.326 7.31997 18.3137L7.15824 18.3085C6.97136 18.3018 6.78703 18.2935 6.56481 18.2831C5.67801 18.2421 5.07384 18.1011 4.5419 17.8955C3.99328 17.6838 3.5287 17.397 3.06551 16.9345C2.60231 16.4713 2.3169 16.0053 2.1044 15.458C1.89815 14.9268 1.75856 14.322 1.7169 13.4351C1.707 13.213 1.69892 13.0286 1.69238 12.8417L1.68714 12.68C1.67495 12.2694 1.66939 11.794 1.66759 10.8562L1.66748 9.1433C1.66903 8.20543 1.67399 7.73011 1.68621 7.31949L1.69151 7.15775C1.69815 6.97088 1.70648 6.78655 1.7169 6.56433C1.75786 5.67683 1.89815 5.07266 2.1044 4.54141C2.3162 3.9928 2.60231 3.52822 3.06551 3.06503C3.5287 2.60183 3.99398 2.31641 4.5419 2.10391C5.07315 1.89766 5.67731 1.75808 6.56481 1.71641C6.78703 1.70652 6.97136 1.69844 7.15824 1.6919L7.31997 1.68666C7.7306 1.67446 8.20591 1.6689 9.14375 1.6671L10.8567 1.66699ZM10.0002 5.83308C7.69781 5.83308 5.83356 7.69935 5.83356 9.99972C5.83356 12.3021 7.69984 14.1664 10.0002 14.1664C12.3027 14.1664 14.1669 12.3001 14.1669 9.99972C14.1669 7.69732 12.3006 5.83308 10.0002 5.83308ZM10.0002 7.49974C11.381 7.49974 12.5002 8.61863 12.5002 9.99972C12.5002 11.3805 11.3813 12.4997 10.0002 12.4997C8.6195 12.4997 7.50023 11.3809 7.50023 9.99972C7.50023 8.61897 8.61908 7.49974 10.0002 7.49974ZM14.3752 4.58308C13.8008 4.58308 13.3336 5.04967 13.3336 5.62403C13.3336 6.19841 13.8002 6.66572 14.3752 6.66572C14.9496 6.66572 15.4169 6.19913 15.4169 5.62403C15.4169 5.04967 14.9488 4.58236 14.3752 4.58308Z\"\n                    fill=\"\"\n                  />\n                </svg>\n              </a>\n            </div>\n          </div>\n          <button\n            onClick={openModal}\n            className=\"flex w-full items-center justify-center gap-2 rounded-full border border-gray-300 bg-white px-4 py-3 text-sm font-medium text-gray-700 shadow-theme-xs hover:bg-gray-50 hover:text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-white/[0.03] dark:hover:text-gray-200 lg:inline-flex lg:w-auto\"\n          >\n            <svg\n              className=\"fill-current\"\n              width=\"18\"\n              height=\"18\"\n              viewBox=\"0 0 18 18\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M15.0911 2.78206C14.2125 1.90338 12.7878 1.90338 11.9092 2.78206L4.57524 10.116C4.26682 10.4244 4.0547 10.8158 3.96468 11.2426L3.31231 14.3352C3.25997 14.5833 3.33653 14.841 3.51583 15.0203C3.69512 15.1996 3.95286 15.2761 4.20096 15.2238L7.29355 14.5714C7.72031 14.4814 8.11172 14.2693 8.42013 13.9609L15.7541 6.62695C16.6327 5.74827 16.6327 4.32365 15.7541 3.44497L15.0911 2.78206ZM12.9698 3.84272C13.2627 3.54982 13.7376 3.54982 14.0305 3.84272L14.6934 4.50563C14.9863 4.79852 14.9863 5.2734 14.6934 5.56629L14.044 6.21573L12.3204 4.49215L12.9698 3.84272ZM11.2597 5.55281L5.6359 11.1766C5.53309 11.2794 5.46238 11.4099 5.43238 11.5522L5.01758 13.5185L6.98394 13.1037C7.1262 13.0737 7.25666 13.003 7.35947 12.9002L12.9833 7.27639L11.2597 5.55281Z\"\n                fill=\"\"\n              />\n            </svg>\n            Edit\n          </button>\n        </div>\n      </div>\n      <Modal isOpen={isOpen} onClose={closeModal} className=\"max-w-[700px] m-4\">\n        <div className=\"no-scrollbar relative w-full max-w-[700px] overflow-y-auto rounded-3xl bg-white p-4 dark:bg-gray-900 lg:p-11\">\n          <div className=\"px-2 pr-14\">\n            <h4 className=\"mb-2 text-2xl font-semibold text-gray-800 dark:text-white/90\">\n              Edit Personal Information\n            </h4>\n            <p className=\"mb-6 text-sm text-gray-500 dark:text-gray-400 lg:mb-7\">\n              Update your details to keep your profile up-to-date.\n            </p>\n          </div>\n          <form className=\"flex flex-col\">\n            <div className=\"custom-scrollbar h-[450px] overflow-y-auto px-2 pb-3\">\n              <div>\n                <h5 className=\"mb-5 text-lg font-medium text-gray-800 dark:text-white/90 lg:mb-6\">\n                  Social Links\n                </h5>\n\n                <div className=\"grid grid-cols-1 gap-x-6 gap-y-5 lg:grid-cols-2\">\n                  <div>\n                    <Label>Facebook</Label>\n                    <Input\n                      type=\"text\"\n                      value=\"https://www.facebook.com/PimjoHQ\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label>X.com</Label>\n                    <Input type=\"text\" value=\"https://x.com/PimjoHQ\" />\n                  </div>\n\n                  <div>\n                    <Label>Linkedin</Label>\n                    <Input\n                      type=\"text\"\n                      value=\"https://www.linkedin.com/company/pimjo\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label>Instagram</Label>\n                    <Input type=\"text\" value=\"https://instagram.com/PimjoHQ\" />\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-7\">\n                <h5 className=\"mb-5 text-lg font-medium text-gray-800 dark:text-white/90 lg:mb-6\">\n                  Personal Information\n                </h5>\n\n                <div className=\"grid grid-cols-1 gap-x-6 gap-y-5 lg:grid-cols-2\">\n                  <div className=\"col-span-2 lg:col-span-1\">\n                    <Label>First Name</Label>\n                    <Input type=\"text\" value=\"Musharof\" />\n                  </div>\n\n                  <div className=\"col-span-2 lg:col-span-1\">\n                    <Label>Last Name</Label>\n                    <Input type=\"text\" value=\"Chowdhury\" />\n                  </div>\n\n                  <div className=\"col-span-2 lg:col-span-1\">\n                    <Label>Email Address</Label>\n                    <Input type=\"text\" value=\"randomuser@pimjo.com\" />\n                  </div>\n\n                  <div className=\"col-span-2 lg:col-span-1\">\n                    <Label>Phone</Label>\n                    <Input type=\"text\" value=\"+09 363 398 46\" />\n                  </div>\n\n                  <div className=\"col-span-2\">\n                    <Label>Bio</Label>\n                    <Input type=\"text\" value=\"Team Manager\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-3 px-2 mt-6 lg:justify-end\">\n              <Button size=\"sm\" variant=\"outline\" onClick={closeModal}>\n                Close\n              </Button>\n              <Button size=\"sm\" onClick={handleSave}>\n                Save Changes\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </>\n  );\n}\n","size_bytes":13859},"frontend/src/components/form/form-elements/SelectInputs.tsx":{"content":"import { useState } from \"react\";\nimport ComponentCard from \"../../common/ComponentCard\";\nimport Label from \"../Label\";\nimport Select from \"../Select\";\nimport MultiSelect from \"../MultiSelect\";\n\nexport default function SelectInputs() {\n  const options = [\n    { value: \"marketing\", label: \"Marketing\" },\n    { value: \"template\", label: \"Template\" },\n    { value: \"development\", label: \"Development\" },\n  ];\n  const handleSelectChange = (value: string) => {\n    console.log(\"Selected value:\", value);\n  };\n  const [selectedValues, setSelectedValues] = useState<string[]>([]);\n\n  const multiOptions = [\n    { value: \"1\", text: \"Option 1\", selected: false },\n    { value: \"2\", text: \"Option 2\", selected: false },\n    { value: \"3\", text: \"Option 3\", selected: false },\n    { value: \"4\", text: \"Option 4\", selected: false },\n    { value: \"5\", text: \"Option 5\", selected: false },\n  ];\n  return (\n    <ComponentCard title=\"Select Inputs\">\n      <div className=\"space-y-6\">\n        <div>\n          <Label>Select Input</Label>\n          <Select\n            options={options}\n            placeholder=\"Select Option\"\n            onChange={handleSelectChange}\n            className=\"dark:bg-dark-900\"\n          />\n        </div>\n        <div>\n          <MultiSelect\n            label=\"Multiple Select Options\"\n            options={multiOptions}\n            defaultSelected={[\"1\", \"3\"]}\n            onChange={(values) => setSelectedValues(values)}\n          />\n          <p className=\"sr-only\">\n            Selected Values: {selectedValues.join(\", \")}\n          </p>\n        </div>\n      </div>\n    </ComponentCard>\n  );\n}\n","size_bytes":1612},"frontend/src/components/ui/images/ThreeColumnImageGrid.tsx":{"content":"export default function ThreeColumnImageGrid() {\n  return (\n    <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 xl:grid-cols-3\">\n      <div>\n        <img\n          src=\"/images/grid-image/image-04.png\"\n          alt=\" grid\"\n          className=\"border border-gray-200 rounded-xl dark:border-gray-800\"\n        />\n      </div>\n\n      <div>\n        <img\n          src=\"/images/grid-image/image-05.png\"\n          alt=\" grid\"\n          className=\"border border-gray-200 rounded-xl dark:border-gray-800\"\n        />\n      </div>\n\n      <div>\n        <img\n          src=\"/images/grid-image/image-06.png\"\n          alt=\" grid\"\n          className=\"border border-gray-200 rounded-xl dark:border-gray-800\"\n        />\n      </div>\n    </div>\n  );\n}\n","size_bytes":743},"frontend/src/components/common/GridShape.tsx":{"content":"export default function GridShape() {\n  return (\n    <>\n      <div className=\"absolute right-0 top-0 -z-1 w-full max-w-[250px] xl:max-w-[450px]\">\n        <img src=\"/images/shape/grid-01.svg\" alt=\"grid\" />\n      </div>\n      <div className=\"absolute bottom-0 left-0 -z-1 w-full max-w-[250px] rotate-180 xl:max-w-[450px]\">\n        <img src=\"/images/shape/grid-01.svg\" alt=\"grid\" />\n      </div>\n    </>\n  );\n}\n","size_bytes":408},"frontend/src/components/ui/videos/FourIsToThree.tsx":{"content":"export default function FourIsToThree() {\n  return (\n    <div className=\"aspect-4/3 overflow-hidden rounded-lg\">\n      <iframe\n        src=\"https://www.youtube.com/embed/dQw4w9WgXcQ\"\n        title=\"YouTube video\"\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        className=\"w-full h-full\"\n      ></iframe>\n    </div>\n  );\n}\n","size_bytes":435},"frontend/src/pages/Requests.tsx":{"content":"const Requests = () => {\n  return (\n    <div>\n      <h1 className=\"text-3xl font-bold text-gray-900\">Procurement Requests</h1>\n      <p className=\"mt-2 text-gray-600\">View and manage all procurement requests</p>\n      \n      <div className=\"mt-8 rounded-lg bg-white p-8 shadow text-center\">\n        <p className=\"text-gray-500\">Coming soon...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Requests;\n","size_bytes":405},"frontend/src/svg.d.ts":{"content":"declare module \"*.svg?react\" {\n  import React = require(\"react\");\n  export const ReactComponent: React.FC<React.SVGProps<SVGSVGElement>>;\n  const src: string;\n  export default src;\n}\n","size_bytes":183},"frontend/src/components/form/switch/Switch.tsx":{"content":"import { useState } from \"react\";\n\ninterface SwitchProps {\n  label: string;\n  defaultChecked?: boolean;\n  disabled?: boolean;\n  onChange?: (checked: boolean) => void;\n  color?: \"blue\" | \"gray\"; // Added prop to toggle color theme\n}\n\nconst Switch: React.FC<SwitchProps> = ({\n  label,\n  defaultChecked = false,\n  disabled = false,\n  onChange,\n  color = \"blue\", // Default to blue color\n}) => {\n  const [isChecked, setIsChecked] = useState(defaultChecked);\n\n  const handleToggle = () => {\n    if (disabled) return;\n    const newCheckedState = !isChecked;\n    setIsChecked(newCheckedState);\n    if (onChange) {\n      onChange(newCheckedState);\n    }\n  };\n\n  const switchColors =\n    color === \"blue\"\n      ? {\n          background: isChecked\n            ? \"bg-brand-500 \"\n            : \"bg-gray-200 dark:bg-white/10\", // Blue version\n          knob: isChecked\n            ? \"translate-x-full bg-white\"\n            : \"translate-x-0 bg-white\",\n        }\n      : {\n          background: isChecked\n            ? \"bg-gray-800 dark:bg-white/10\"\n            : \"bg-gray-200 dark:bg-white/10\", // Gray version\n          knob: isChecked\n            ? \"translate-x-full bg-white\"\n            : \"translate-x-0 bg-white\",\n        };\n\n  return (\n    <label\n      className={`flex cursor-pointer select-none items-center gap-3 text-sm font-medium ${\n        disabled ? \"text-gray-400\" : \"text-gray-700 dark:text-gray-400\"\n      }`}\n      onClick={handleToggle} // Toggle when the label itself is clicked\n    >\n      <div className=\"relative\">\n        <div\n          className={`block transition duration-150 ease-linear h-6 w-11 rounded-full ${\n            disabled\n              ? \"bg-gray-100 pointer-events-none dark:bg-gray-800\"\n              : switchColors.background\n          }`}\n        ></div>\n        <div\n          className={`absolute left-0.5 top-0.5 h-5 w-5 rounded-full shadow-theme-sm duration-150 ease-linear transform ${switchColors.knob}`}\n        ></div>\n      </div>\n      {label}\n    </label>\n  );\n};\n\nexport default Switch;\n","size_bytes":2028},"frontend/src/components/form/form-elements/TextAreaInput.tsx":{"content":"import { useState } from \"react\";\nimport ComponentCard from \"../../common/ComponentCard\";\nimport TextArea from \"../input/TextArea\";\nimport Label from \"../Label\";\n\nexport default function TextAreaInput() {\n  const [message, setMessage] = useState(\"\");\n  const [messageTwo, setMessageTwo] = useState(\"\");\n  return (\n    <ComponentCard title=\"Textarea input field\">\n      <div className=\"space-y-6\">\n        {/* Default TextArea */}\n        <div>\n          <Label>Description</Label>\n          <TextArea\n            value={message}\n            onChange={(value) => setMessage(value)}\n            rows={6}\n          />\n        </div>\n\n        {/* Disabled TextArea */}\n        <div>\n          <Label>Description</Label>\n          <TextArea rows={6} disabled />\n        </div>\n\n        {/* Error TextArea */}\n        <div>\n          <Label>Description</Label>\n          <TextArea\n            rows={6}\n            value={messageTwo}\n            error\n            onChange={(value) => setMessageTwo(value)}\n            hint=\"Please enter a valid message.\"\n          />\n        </div>\n      </div>\n    </ComponentCard>\n  );\n}\n","size_bytes":1118},"frontend/src/layout/SidebarWidget.tsx":{"content":"export default function SidebarWidget() {\n  return (\n    <div\n      className={`\n        mx-auto mb-10 w-full max-w-60 rounded-2xl bg-gray-50 px-4 py-5 text-center dark:bg-white/[0.03]`}\n    >\n      <h3 className=\"mb-2 font-semibold text-gray-900 dark:text-white\">\n        #1 Tailwind CSS Dashboard\n      </h3>\n      <p className=\"mb-4 text-gray-500 text-theme-sm dark:text-gray-400\">\n        Leading Tailwind CSS Admin Template with 400+ UI Component and Pages.\n      </p>\n      <a\n        href=\"https://tailadmin.com/pricing\"\n        target=\"_blank\"\n        rel=\"nofollow\"\n        className=\"flex items-center justify-center p-3 font-medium text-white rounded-lg bg-brand-500 text-theme-sm hover:bg-brand-600\"\n      >\n        Purchase Plan\n      </a>\n    </div>\n  );\n}\n","size_bytes":771},"frontend/src/pages/UiElements/Badges.tsx":{"content":"import PageBreadcrumb from \"../../components/common/PageBreadCrumb\";\nimport Badge from \"../../components/ui/badge/Badge\";\nimport { PlusIcon } from \"../../icons\";\nimport PageMeta from \"../../components/common/PageMeta\";\nimport ComponentCard from \"../../components/common/ComponentCard\";\n\nexport default function Badges() {\n  return (\n    <div>\n      <PageMeta\n        title=\"React.js Badges Dashboard | TailAdmin - React.js Admin Dashboard Template\"\n        description=\"This is React.js Badges Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Badges\" />\n      <div className=\"space-y-5 sm:space-y-6\">\n        <ComponentCard title=\"With Light Background\">\n          <div className=\"flex flex-wrap gap-4 sm:items-center sm:justify-center\">\n            {/* Light Variant */}\n            <Badge variant=\"light\" color=\"primary\">\n              Primary\n            </Badge>\n            <Badge variant=\"light\" color=\"success\">\n              Success\n            </Badge>{\" \"}\n            <Badge variant=\"light\" color=\"error\">\n              Error\n            </Badge>{\" \"}\n            <Badge variant=\"light\" color=\"warning\">\n              Warning\n            </Badge>{\" \"}\n            <Badge variant=\"light\" color=\"info\">\n              Info\n            </Badge>\n            <Badge variant=\"light\" color=\"light\">\n              Light\n            </Badge>\n            <Badge variant=\"light\" color=\"dark\">\n              Dark\n            </Badge>\n          </div>\n        </ComponentCard>\n        <ComponentCard title=\"With Solid Background\">\n          <div className=\"flex flex-wrap gap-4 sm:items-center sm:justify-center\">\n            {/* Light Variant */}\n            <Badge variant=\"solid\" color=\"primary\">\n              Primary\n            </Badge>\n            <Badge variant=\"solid\" color=\"success\">\n              Success\n            </Badge>{\" \"}\n            <Badge variant=\"solid\" color=\"error\">\n              Error\n            </Badge>{\" \"}\n            <Badge variant=\"solid\" color=\"warning\">\n              Warning\n            </Badge>{\" \"}\n            <Badge variant=\"solid\" color=\"info\">\n              Info\n            </Badge>\n            <Badge variant=\"solid\" color=\"light\">\n              Light\n            </Badge>\n            <Badge variant=\"solid\" color=\"dark\">\n              Dark\n            </Badge>\n          </div>\n        </ComponentCard>\n        <ComponentCard title=\"Light Background with Left Icon\">\n          <div className=\"flex flex-wrap gap-4 sm:items-center sm:justify-center\">\n            <Badge variant=\"light\" color=\"primary\" startIcon={<PlusIcon />}>\n              Primary\n            </Badge>\n            <Badge variant=\"light\" color=\"success\" startIcon={<PlusIcon />}>\n              Success\n            </Badge>{\" \"}\n            <Badge variant=\"light\" color=\"error\" startIcon={<PlusIcon />}>\n              Error\n            </Badge>{\" \"}\n            <Badge variant=\"light\" color=\"warning\" startIcon={<PlusIcon />}>\n              Warning\n            </Badge>{\" \"}\n            <Badge variant=\"light\" color=\"info\" startIcon={<PlusIcon />}>\n              Info\n            </Badge>\n            <Badge variant=\"light\" color=\"light\" startIcon={<PlusIcon />}>\n              Light\n            </Badge>\n            <Badge variant=\"light\" color=\"dark\" startIcon={<PlusIcon />}>\n              Dark\n            </Badge>\n          </div>\n        </ComponentCard>\n        <ComponentCard title=\"Solid Background with Left Icon\">\n          <div className=\"flex flex-wrap gap-4 sm:items-center sm:justify-center\">\n            <Badge variant=\"solid\" color=\"primary\" startIcon={<PlusIcon />}>\n              Primary\n            </Badge>\n            <Badge variant=\"solid\" color=\"success\" startIcon={<PlusIcon />}>\n              Success\n            </Badge>{\" \"}\n            <Badge variant=\"solid\" color=\"error\" startIcon={<PlusIcon />}>\n              Error\n            </Badge>{\" \"}\n            <Badge variant=\"solid\" color=\"warning\" startIcon={<PlusIcon />}>\n              Warning\n            </Badge>{\" \"}\n            <Badge variant=\"solid\" color=\"info\" startIcon={<PlusIcon />}>\n              Info\n            </Badge>\n            <Badge variant=\"solid\" color=\"light\" startIcon={<PlusIcon />}>\n              Light\n            </Badge>\n            <Badge variant=\"solid\" color=\"dark\" startIcon={<PlusIcon />}>\n              Dark\n            </Badge>\n          </div>\n        </ComponentCard>\n        <ComponentCard title=\"Light Background with Right Icon\">\n          <div className=\"flex flex-wrap gap-4 sm:items-center sm:justify-center\">\n            <Badge variant=\"light\" color=\"primary\" endIcon={<PlusIcon />}>\n              Primary\n            </Badge>\n            <Badge variant=\"light\" color=\"success\" endIcon={<PlusIcon />}>\n              Success\n            </Badge>{\" \"}\n            <Badge variant=\"light\" color=\"error\" endIcon={<PlusIcon />}>\n              Error\n            </Badge>{\" \"}\n            <Badge variant=\"light\" color=\"warning\" endIcon={<PlusIcon />}>\n              Warning\n            </Badge>{\" \"}\n            <Badge variant=\"light\" color=\"info\" endIcon={<PlusIcon />}>\n              Info\n            </Badge>\n            <Badge variant=\"light\" color=\"light\" endIcon={<PlusIcon />}>\n              Light\n            </Badge>\n            <Badge variant=\"light\" color=\"dark\" endIcon={<PlusIcon />}>\n              Dark\n            </Badge>\n          </div>\n        </ComponentCard>\n        <ComponentCard title=\"Solid Background with Right Icon\">\n          <div className=\"flex flex-wrap gap-4 sm:items-center sm:justify-center\">\n            <Badge variant=\"solid\" color=\"primary\" endIcon={<PlusIcon />}>\n              Primary\n            </Badge>\n            <Badge variant=\"solid\" color=\"success\" endIcon={<PlusIcon />}>\n              Success\n            </Badge>{\" \"}\n            <Badge variant=\"solid\" color=\"error\" endIcon={<PlusIcon />}>\n              Error\n            </Badge>{\" \"}\n            <Badge variant=\"solid\" color=\"warning\" endIcon={<PlusIcon />}>\n              Warning\n            </Badge>{\" \"}\n            <Badge variant=\"solid\" color=\"info\" endIcon={<PlusIcon />}>\n              Info\n            </Badge>\n            <Badge variant=\"solid\" color=\"light\" endIcon={<PlusIcon />}>\n              Light\n            </Badge>\n            <Badge variant=\"solid\" color=\"dark\" endIcon={<PlusIcon />}>\n              Dark\n            </Badge>\n          </div>\n        </ComponentCard>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6520},"frontend/src/components/form/group-input/PhoneInput.tsx":{"content":"import { useState } from \"react\";\n\ninterface CountryCode {\n  code: string;\n  label: string;\n}\n\ninterface PhoneInputProps {\n  countries: CountryCode[];\n  placeholder?: string;\n  onChange?: (phoneNumber: string) => void;\n  selectPosition?: \"start\" | \"end\"; // New prop for dropdown position\n}\n\nconst PhoneInput: React.FC<PhoneInputProps> = ({\n  countries,\n  placeholder = \"+1 (555) 000-0000\",\n  onChange,\n  selectPosition = \"start\", // Default position is 'start'\n}) => {\n  const [selectedCountry, setSelectedCountry] = useState<string>(\"US\");\n  const [phoneNumber, setPhoneNumber] = useState<string>(\"+1\");\n\n  const countryCodes: Record<string, string> = countries.reduce(\n    (acc, { code, label }) => ({ ...acc, [code]: label }),\n    {}\n  );\n\n  const handleCountryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newCountry = e.target.value;\n    setSelectedCountry(newCountry);\n    setPhoneNumber(countryCodes[newCountry]);\n    if (onChange) {\n      onChange(countryCodes[newCountry]);\n    }\n  };\n\n  const handlePhoneNumberChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newPhoneNumber = e.target.value;\n    setPhoneNumber(newPhoneNumber);\n    if (onChange) {\n      onChange(newPhoneNumber);\n    }\n  };\n\n  return (\n    <div className=\"relative flex\">\n      {/* Dropdown position: Start */}\n      {selectPosition === \"start\" && (\n        <div className=\"absolute\">\n          <select\n            value={selectedCountry}\n            onChange={handleCountryChange}\n            className=\"appearance-none bg-none rounded-l-lg border-0 border-r border-gray-200 bg-transparent py-3 pl-3.5 pr-8 leading-tight text-gray-700 focus:border-brand-300 focus:outline-hidden focus:ring-3 focus:ring-brand-500/10 dark:border-gray-800 dark:text-gray-400\"\n          >\n            {countries.map((country) => (\n              <option\n                key={country.code}\n                value={country.code}\n                className=\"text-gray-700 dark:bg-gray-900 dark:text-gray-400\"\n              >\n                {country.code}\n              </option>\n            ))}\n          </select>\n          <div className=\"absolute inset-y-0 flex items-center text-gray-700 pointer-events-none bg-none right-3 dark:text-gray-400\">\n            <svg\n              className=\"stroke-current\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 20 20\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M4.79175 7.396L10.0001 12.6043L15.2084 7.396\"\n                stroke=\"currentColor\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </div>\n        </div>\n      )}\n\n      {/* Input field */}\n      <input\n        type=\"tel\"\n        value={phoneNumber}\n        onChange={handlePhoneNumberChange}\n        placeholder={placeholder}\n        className={`dark:bg-dark-900 h-11 w-full ${\n          selectPosition === \"start\" ? \"pl-[84px]\" : \"pr-[84px]\"\n        } rounded-lg border border-gray-300 bg-transparent py-3 px-4 text-sm text-gray-800 shadow-theme-xs placeholder:text-gray-400 focus:border-brand-300 focus:outline-hidden focus:ring-3 focus:ring-brand-500/10 dark:border-gray-700 dark:bg-gray-900 dark:text-white/90 dark:placeholder:text-white/30 dark:focus:border-brand-800`}\n      />\n\n      {/* Dropdown position: End */}\n      {selectPosition === \"end\" && (\n        <div className=\"absolute right-0\">\n          <select\n            value={selectedCountry}\n            onChange={handleCountryChange}\n            className=\"appearance-none bg-none rounded-r-lg border-0 border-l border-gray-200 bg-transparent py-3 pl-3.5 pr-8 leading-tight text-gray-700 focus:border-brand-300 focus:outline-hidden focus:ring-3 focus:ring-brand-500/10 dark:border-gray-800 dark:text-gray-400\"\n          >\n            {countries.map((country) => (\n              <option\n                key={country.code}\n                value={country.code}\n                className=\"text-gray-700 dark:bg-gray-900 dark:text-gray-400\"\n              >\n                {country.code}\n              </option>\n            ))}\n          </select>\n          <div className=\"absolute inset-y-0 flex items-center text-gray-700 pointer-events-none right-3 dark:text-gray-400\">\n            <svg\n              className=\"stroke-current\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 20 20\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M4.79175 7.396L10.0001 12.6043L15.2084 7.396\"\n                stroke=\"currentColor\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PhoneInput;\n","size_bytes":4944},"frontend/src/context/SidebarContext.tsx":{"content":"import { createContext, useContext, useState, useEffect } from \"react\";\n\ntype SidebarContextType = {\n  isExpanded: boolean;\n  isMobileOpen: boolean;\n  isHovered: boolean;\n  activeItem: string | null;\n  openSubmenu: string | null;\n  toggleSidebar: () => void;\n  toggleMobileSidebar: () => void;\n  setIsHovered: (isHovered: boolean) => void;\n  setActiveItem: (item: string | null) => void;\n  toggleSubmenu: (item: string) => void;\n};\n\nconst SidebarContext = createContext<SidebarContextType | undefined>(undefined);\n\nexport const useSidebar = () => {\n  const context = useContext(SidebarContext);\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider\");\n  }\n  return context;\n};\n\nexport const SidebarProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [activeItem, setActiveItem] = useState<string | null>(null);\n  const [openSubmenu, setOpenSubmenu] = useState<string | null>(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const mobile = window.innerWidth < 768;\n      setIsMobile(mobile);\n      if (!mobile) {\n        setIsMobileOpen(false);\n      }\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const toggleSidebar = () => {\n    setIsExpanded((prev) => !prev);\n  };\n\n  const toggleMobileSidebar = () => {\n    setIsMobileOpen((prev) => !prev);\n  };\n\n  const toggleSubmenu = (item: string) => {\n    setOpenSubmenu((prev) => (prev === item ? null : item));\n  };\n\n  return (\n    <SidebarContext.Provider\n      value={{\n        isExpanded: isMobile ? false : isExpanded,\n        isMobileOpen,\n        isHovered,\n        activeItem,\n        openSubmenu,\n        toggleSidebar,\n        toggleMobileSidebar,\n        setIsHovered,\n        setActiveItem,\n        toggleSubmenu,\n      }}\n    >\n      {children}\n    </SidebarContext.Provider>\n  );\n};\n","size_bytes":2175},"frontend/src/components/ui/videos/OneIsToOne.tsx":{"content":"export default function OneIsToOne() {\n  return (\n    <div className=\"overflow-hidden rounded-lg aspect-square\">\n      <iframe\n        src=\"https://www.youtube.com/embed/dQw4w9WgXcQ\"\n        title=\"YouTube video\"\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        className=\"w-full h-full\"\n      ></iframe>\n    </div>\n  );\n}\n","size_bytes":435},"frontend/src/pages/AuthPages/SignIn.tsx":{"content":"import PageMeta from \"../../components/common/PageMeta\";\nimport AuthLayout from \"./AuthPageLayout\";\nimport SignInForm from \"../../components/auth/SignInForm\";\n\nexport default function SignIn() {\n  return (\n    <>\n      <PageMeta\n        title=\"React.js SignIn Dashboard | TailAdmin - Next.js Admin Dashboard Template\"\n        description=\"This is React.js SignIn Tables Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <AuthLayout>\n        <SignInForm />\n      </AuthLayout>\n    </>\n  );\n}\n","size_bytes":535},"frontend/src/components/form/input/Checkbox.tsx":{"content":"import type React from \"react\";\n\ninterface CheckboxProps {\n  label?: string;\n  checked: boolean;\n  className?: string;\n  id?: string;\n  onChange: (checked: boolean) => void;\n  disabled?: boolean;\n}\n\nconst Checkbox: React.FC<CheckboxProps> = ({\n  label,\n  checked,\n  id,\n  onChange,\n  className = \"\",\n  disabled = false,\n}) => {\n  return (\n    <label\n      className={`flex items-center space-x-3 group cursor-pointer ${\n        disabled ? \"cursor-not-allowed opacity-60\" : \"\"\n      }`}\n    >\n      <div className=\"relative w-5 h-5\">\n        <input\n          id={id}\n          type=\"checkbox\"\n          className={`w-5 h-5 appearance-none cursor-pointer dark:border-gray-700 border border-gray-300 checked:border-transparent rounded-md checked:bg-brand-500 disabled:opacity-60 \n          ${className}`}\n          checked={checked}\n          onChange={(e) => onChange(e.target.checked)}\n          disabled={disabled}\n        />\n        {checked && (\n          <svg\n            className=\"absolute transform -translate-x-1/2 -translate-y-1/2 pointer-events-none top-1/2 left-1/2\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14\"\n            height=\"14\"\n            viewBox=\"0 0 14 14\"\n            fill=\"none\"\n          >\n            <path\n              d=\"M11.6666 3.5L5.24992 9.91667L2.33325 7\"\n              stroke=\"white\"\n              strokeWidth=\"1.94437\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        )}\n        {disabled && (\n          <svg\n            className=\"absolute transform -translate-x-1/2 -translate-y-1/2 pointer-events-none top-1/2 left-1/2\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14\"\n            height=\"14\"\n            viewBox=\"0 0 14 14\"\n            fill=\"none\"\n          >\n            <path\n              d=\"M11.6666 3.5L5.24992 9.91667L2.33325 7\"\n              stroke=\"#E4E7EC\"\n              strokeWidth=\"2.33333\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        )}\n      </div>\n      {label && (\n        <span className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">\n          {label}\n        </span>\n      )}\n    </label>\n  );\n};\n\nexport default Checkbox;\n","size_bytes":2268},"frontend/src/pages/AuthPages/AuthPageLayout.tsx":{"content":"import React from \"react\";\nimport GridShape from \"../../components/common/GridShape\";\nimport { Link } from \"react-router\";\nimport ThemeTogglerTwo from \"../../components/common/ThemeTogglerTwo\";\n\nexport default function AuthLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <div className=\"relative p-6 bg-white z-1 dark:bg-gray-900 sm:p-0\">\n      <div className=\"relative flex flex-col justify-center w-full h-screen lg:flex-row dark:bg-gray-900 sm:p-0\">\n        {children}\n        <div className=\"items-center hidden w-full h-full lg:w-1/2 bg-brand-950 dark:bg-white/5 lg:grid\">\n          <div className=\"relative flex items-center justify-center z-1\">\n            {/* <!-- ===== Common Grid Shape Start ===== --> */}\n            <GridShape />\n            <div className=\"flex flex-col items-center max-w-xs\">\n              <Link to=\"/\" className=\"block mb-4\">\n                <img\n                  width={231}\n                  height={48}\n                  src=\"/images/logo/auth-logo.svg\"\n                  alt=\"Logo\"\n                />\n              </Link>\n              <p className=\"text-center text-gray-400 dark:text-white/60\">\n                Free and Open-Source Tailwind CSS Admin Dashboard Template\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"fixed z-50 hidden bottom-6 right-6 sm:block\">\n          <ThemeTogglerTwo />\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1455},"frontend/src/layout/AppHeader.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\n\nimport { Link } from \"react-router\";\nimport { useSidebar } from \"../context/SidebarContext\";\nimport { ThemeToggleButton } from \"../components/common/ThemeToggleButton\";\nimport NotificationDropdown from \"../components/header/NotificationDropdown\";\nimport UserDropdown from \"../components/header/UserDropdown\";\n\nconst AppHeader: React.FC = () => {\n  const [isApplicationMenuOpen, setApplicationMenuOpen] = useState(false);\n\n  const { isMobileOpen, toggleSidebar, toggleMobileSidebar } = useSidebar();\n\n  const handleToggle = () => {\n    if (window.innerWidth >= 1024) {\n      toggleSidebar();\n    } else {\n      toggleMobileSidebar();\n    }\n  };\n\n  const toggleApplicationMenu = () => {\n    setApplicationMenuOpen(!isApplicationMenuOpen);\n  };\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if ((event.metaKey || event.ctrlKey) && event.key === \"k\") {\n        event.preventDefault();\n        inputRef.current?.focus();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <header className=\"sticky top-0 flex w-full bg-white border-gray-200 z-99999 dark:border-gray-800 dark:bg-gray-900 lg:border-b\">\n      <div className=\"flex flex-col items-center justify-between grow lg:flex-row lg:px-6\">\n        <div className=\"flex items-center justify-between w-full gap-2 px-3 py-3 border-b border-gray-200 dark:border-gray-800 sm:gap-4 lg:justify-normal lg:border-b-0 lg:px-0 lg:py-4\">\n          <button\n            className=\"items-center justify-center w-10 h-10 text-gray-500 border-gray-200 rounded-lg z-99999 dark:border-gray-800 lg:flex dark:text-gray-400 lg:h-11 lg:w-11 lg:border\"\n            onClick={handleToggle}\n            aria-label=\"Toggle Sidebar\"\n          >\n            {isMobileOpen ? (\n              <svg\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M6.21967 7.28131C5.92678 6.98841 5.92678 6.51354 6.21967 6.22065C6.51256 5.92775 6.98744 5.92775 7.28033 6.22065L11.999 10.9393L16.7176 6.22078C17.0105 5.92789 17.4854 5.92788 17.7782 6.22078C18.0711 6.51367 18.0711 6.98855 17.7782 7.28144L13.0597 12L17.7782 16.7186C18.0711 17.0115 18.0711 17.4863 17.7782 17.7792C17.4854 18.0721 17.0105 18.0721 16.7176 17.7792L11.999 13.0607L7.28033 17.7794C6.98744 18.0722 6.51256 18.0722 6.21967 17.7794C5.92678 17.4865 5.92678 17.0116 6.21967 16.7187L10.9384 12L6.21967 7.28131Z\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n            ) : (\n              <svg\n                width=\"16\"\n                height=\"12\"\n                viewBox=\"0 0 16 12\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M0.583252 1C0.583252 0.585788 0.919038 0.25 1.33325 0.25H14.6666C15.0808 0.25 15.4166 0.585786 15.4166 1C15.4166 1.41421 15.0808 1.75 14.6666 1.75L1.33325 1.75C0.919038 1.75 0.583252 1.41422 0.583252 1ZM0.583252 11C0.583252 10.5858 0.919038 10.25 1.33325 10.25L14.6666 10.25C15.0808 10.25 15.4166 10.5858 15.4166 11C15.4166 11.4142 15.0808 11.75 14.6666 11.75L1.33325 11.75C0.919038 11.75 0.583252 11.4142 0.583252 11ZM1.33325 5.25C0.919038 5.25 0.583252 5.58579 0.583252 6C0.583252 6.41421 0.919038 6.75 1.33325 6.75L7.99992 6.75C8.41413 6.75 8.74992 6.41421 8.74992 6C8.74992 5.58579 8.41413 5.25 7.99992 5.25L1.33325 5.25Z\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n            )}\n            {/* Cross Icon */}\n          </button>\n\n          <Link to=\"/\" className=\"lg:hidden\">\n            <img\n              className=\"dark:hidden\"\n              src=\"./images/logo/logo.svg\"\n              alt=\"Logo\"\n            />\n            <img\n              className=\"hidden dark:block\"\n              src=\"./images/logo/logo-dark.svg\"\n              alt=\"Logo\"\n            />\n          </Link>\n\n          <button\n            onClick={toggleApplicationMenu}\n            className=\"flex items-center justify-center w-10 h-10 text-gray-700 rounded-lg z-99999 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-800 lg:hidden\"\n          >\n            <svg\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M5.99902 10.4951C6.82745 10.4951 7.49902 11.1667 7.49902 11.9951V12.0051C7.49902 12.8335 6.82745 13.5051 5.99902 13.5051C5.1706 13.5051 4.49902 12.8335 4.49902 12.0051V11.9951C4.49902 11.1667 5.1706 10.4951 5.99902 10.4951ZM17.999 10.4951C18.8275 10.4951 19.499 11.1667 19.499 11.9951V12.0051C19.499 12.8335 18.8275 13.5051 17.999 13.5051C17.1706 13.5051 16.499 12.8335 16.499 12.0051V11.9951C16.499 11.1667 17.1706 10.4951 17.999 10.4951ZM13.499 11.9951C13.499 11.1667 12.8275 10.4951 11.999 10.4951C11.1706 10.4951 10.499 11.1667 10.499 11.9951V12.0051C10.499 12.8335 11.1706 13.5051 11.999 13.5051C12.8275 13.5051 13.499 12.8335 13.499 12.0051V11.9951Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n          </button>\n\n          <div className=\"hidden lg:block\">\n            <form>\n              <div className=\"relative\">\n                <span className=\"absolute -translate-y-1/2 pointer-events-none left-4 top-1/2\">\n                  <svg\n                    className=\"fill-gray-500 dark:fill-gray-400\"\n                    width=\"20\"\n                    height=\"20\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      clipRule=\"evenodd\"\n                      d=\"M3.04175 9.37363C3.04175 5.87693 5.87711 3.04199 9.37508 3.04199C12.8731 3.04199 15.7084 5.87693 15.7084 9.37363C15.7084 12.8703 12.8731 15.7053 9.37508 15.7053C5.87711 15.7053 3.04175 12.8703 3.04175 9.37363ZM9.37508 1.54199C5.04902 1.54199 1.54175 5.04817 1.54175 9.37363C1.54175 13.6991 5.04902 17.2053 9.37508 17.2053C11.2674 17.2053 13.003 16.5344 14.357 15.4176L17.177 18.238C17.4699 18.5309 17.9448 18.5309 18.2377 18.238C18.5306 17.9451 18.5306 17.4703 18.2377 17.1774L15.418 14.3573C16.5365 13.0033 17.2084 11.2669 17.2084 9.37363C17.2084 5.04817 13.7011 1.54199 9.37508 1.54199Z\"\n                      fill=\"\"\n                    />\n                  </svg>\n                </span>\n                <input\n                  ref={inputRef}\n                  type=\"text\"\n                  placeholder=\"Search or type command...\"\n                  className=\"dark:bg-dark-900 h-11 w-full rounded-lg border border-gray-200 bg-transparent py-2.5 pl-12 pr-14 text-sm text-gray-800 shadow-theme-xs placeholder:text-gray-400 focus:border-brand-300 focus:outline-hidden focus:ring-3 focus:ring-brand-500/10 dark:border-gray-800 dark:bg-gray-900 dark:bg-white/[0.03] dark:text-white/90 dark:placeholder:text-white/30 dark:focus:border-brand-800 xl:w-[430px]\"\n                />\n\n                <button className=\"absolute right-2.5 top-1/2 inline-flex -translate-y-1/2 items-center gap-0.5 rounded-lg border border-gray-200 bg-gray-50 px-[7px] py-[4.5px] text-xs -tracking-[0.2px] text-gray-500 dark:border-gray-800 dark:bg-white/[0.03] dark:text-gray-400\">\n                  <span> ⌘ </span>\n                  <span> K </span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div\n          className={`${\n            isApplicationMenuOpen ? \"flex\" : \"hidden\"\n          } items-center justify-between w-full gap-4 px-5 py-4 lg:flex shadow-theme-md lg:justify-end lg:px-0 lg:shadow-none`}\n        >\n          <div className=\"flex items-center gap-2 2xsm:gap-3\">\n            {/* <!-- Dark Mode Toggler --> */}\n            <ThemeToggleButton />\n            {/* <!-- Dark Mode Toggler --> */}\n            <NotificationDropdown />\n            {/* <!-- Notification Menu Area --> */}\n          </div>\n          {/* <!-- User Area --> */}\n          <UserDropdown />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","size_bytes":8677},"frontend/src/components/ui/images/TwoColumnImageGrid.tsx":{"content":"export default function TwoColumnImageGrid() {\n  return (\n    <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2\">\n      <div>\n        <img\n          src=\"/images/grid-image/image-02.png\"\n          alt=\" grid\"\n          className=\"border border-gray-200 rounded-xl dark:border-gray-800\"\n        />\n      </div>\n\n      <div>\n        <img\n          src=\"/images/grid-image/image-03.png\"\n          alt=\" grid\"\n          className=\"border border-gray-200 rounded-xl dark:border-gray-800\"\n        />\n      </div>\n    </div>\n  );\n}\n","size_bytes":529},"frontend/src/pages/Forms/FormElements.tsx":{"content":"import PageBreadcrumb from \"../../components/common/PageBreadCrumb\";\nimport DefaultInputs from \"../../components/form/form-elements/DefaultInputs\";\nimport InputGroup from \"../../components/form/form-elements/InputGroup\";\nimport DropzoneComponent from \"../../components/form/form-elements/DropZone\";\nimport CheckboxComponents from \"../../components/form/form-elements/CheckboxComponents\";\nimport RadioButtons from \"../../components/form/form-elements/RadioButtons\";\nimport ToggleSwitch from \"../../components/form/form-elements/ToggleSwitch\";\nimport FileInputExample from \"../../components/form/form-elements/FileInputExample\";\nimport SelectInputs from \"../../components/form/form-elements/SelectInputs\";\nimport TextAreaInput from \"../../components/form/form-elements/TextAreaInput\";\nimport InputStates from \"../../components/form/form-elements/InputStates\";\nimport PageMeta from \"../../components/common/PageMeta\";\n\nexport default function FormElements() {\n  return (\n    <div>\n      <PageMeta\n        title=\"React.js Form Elements Dashboard | TailAdmin - React.js Admin Dashboard Template\"\n        description=\"This is React.js Form Elements  Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Form Elements\" />\n      <div className=\"grid grid-cols-1 gap-6 xl:grid-cols-2\">\n        <div className=\"space-y-6\">\n          <DefaultInputs />\n          <SelectInputs />\n          <TextAreaInput />\n          <InputStates />\n        </div>\n        <div className=\"space-y-6\">\n          <InputGroup />\n          <FileInputExample />\n          <CheckboxComponents />\n          <RadioButtons />\n          <ToggleSwitch />\n          <DropzoneComponent />\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1762},"frontend/src/components/form/Form.tsx":{"content":"import { FC, ReactNode, FormEvent } from \"react\";\n\ninterface FormProps {\n  onSubmit: (event: FormEvent<HTMLFormElement>) => void;\n  children: ReactNode;\n  className?: string;\n}\n\nconst Form: FC<FormProps> = ({ onSubmit, children, className }) => {\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault(); // Prevent default form submission\n        onSubmit(event);\n      }}\n      className={` ${className}`} // Default spacing between form fields\n    >\n      {children}\n    </form>\n  );\n};\n\nexport default Form;\n","size_bytes":536},"frontend/src/main.tsx":{"content":"import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App-clean';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n","size_bytes":236},"frontend/src/components/ui/alert/Alert.tsx":{"content":"import { Link } from \"react-router\";\n\ninterface AlertProps {\n  variant: \"success\" | \"error\" | \"warning\" | \"info\"; // Alert type\n  title: string; // Title of the alert\n  message: string; // Message of the alert\n  showLink?: boolean; // Whether to show the \"Learn More\" link\n  linkHref?: string; // Link URL\n  linkText?: string; // Link text\n}\n\nconst Alert: React.FC<AlertProps> = ({\n  variant,\n  title,\n  message,\n  showLink = false,\n  linkHref = \"#\",\n  linkText = \"Learn more\",\n}) => {\n  // Tailwind classes for each variant\n  const variantClasses = {\n    success: {\n      container:\n        \"border-success-500 bg-success-50 dark:border-success-500/30 dark:bg-success-500/15\",\n      icon: \"text-success-500\",\n    },\n    error: {\n      container:\n        \"border-error-500 bg-error-50 dark:border-error-500/30 dark:bg-error-500/15\",\n      icon: \"text-error-500\",\n    },\n    warning: {\n      container:\n        \"border-warning-500 bg-warning-50 dark:border-warning-500/30 dark:bg-warning-500/15\",\n      icon: \"text-warning-500\",\n    },\n    info: {\n      container:\n        \"border-blue-light-500 bg-blue-light-50 dark:border-blue-light-500/30 dark:bg-blue-light-500/15\",\n      icon: \"text-blue-light-500\",\n    },\n  };\n\n  // Icon for each variant\n  const icons = {\n    success: (\n      <svg\n        className=\"fill-current\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.70186 12.0001C3.70186 7.41711 7.41711 3.70186 12.0001 3.70186C16.5831 3.70186 20.2984 7.41711 20.2984 12.0001C20.2984 16.5831 16.5831 20.2984 12.0001 20.2984C7.41711 20.2984 3.70186 16.5831 3.70186 12.0001ZM12.0001 1.90186C6.423 1.90186 1.90186 6.423 1.90186 12.0001C1.90186 17.5772 6.423 22.0984 12.0001 22.0984C17.5772 22.0984 22.0984 17.5772 22.0984 12.0001C22.0984 6.423 17.5772 1.90186 12.0001 1.90186ZM15.6197 10.7395C15.9712 10.388 15.9712 9.81819 15.6197 9.46672C15.2683 9.11525 14.6984 9.11525 14.347 9.46672L11.1894 12.6243L9.6533 11.0883C9.30183 10.7368 8.73198 10.7368 8.38051 11.0883C8.02904 11.4397 8.02904 12.0096 8.38051 12.3611L10.553 14.5335C10.7217 14.7023 10.9507 14.7971 11.1894 14.7971C11.428 14.7971 11.657 14.7023 11.8257 14.5335L15.6197 10.7395Z\"\n        />\n      </svg>\n    ),\n    error: (\n      <svg\n        className=\"fill-current\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M20.3499 12.0004C20.3499 16.612 16.6115 20.3504 11.9999 20.3504C7.38832 20.3504 3.6499 16.612 3.6499 12.0004C3.6499 7.38881 7.38833 3.65039 11.9999 3.65039C16.6115 3.65039 20.3499 7.38881 20.3499 12.0004ZM11.9999 22.1504C17.6056 22.1504 22.1499 17.6061 22.1499 12.0004C22.1499 6.3947 17.6056 1.85039 11.9999 1.85039C6.39421 1.85039 1.8499 6.3947 1.8499 12.0004C1.8499 17.6061 6.39421 22.1504 11.9999 22.1504ZM13.0008 16.4753C13.0008 15.923 12.5531 15.4753 12.0008 15.4753L11.9998 15.4753C11.4475 15.4753 10.9998 15.923 10.9998 16.4753C10.9998 17.0276 11.4475 17.4753 11.9998 17.4753L12.0008 17.4753C12.5531 17.4753 13.0008 17.0276 13.0008 16.4753ZM11.9998 6.62898C12.414 6.62898 12.7498 6.96476 12.7498 7.37898L12.7498 13.0555C12.7498 13.4697 12.414 13.8055 11.9998 13.8055C11.5856 13.8055 11.2498 13.4697 11.2498 13.0555L11.2498 7.37898C11.2498 6.96476 11.5856 6.62898 11.9998 6.62898Z\"\n          fill=\"#F04438\"\n        />\n      </svg>\n    ),\n    warning: (\n      <svg\n        className=\"fill-current\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.6501 12.0001C3.6501 7.38852 7.38852 3.6501 12.0001 3.6501C16.6117 3.6501 20.3501 7.38852 20.3501 12.0001C20.3501 16.6117 16.6117 20.3501 12.0001 20.3501C7.38852 20.3501 3.6501 16.6117 3.6501 12.0001ZM12.0001 1.8501C6.39441 1.8501 1.8501 6.39441 1.8501 12.0001C1.8501 17.6058 6.39441 22.1501 12.0001 22.1501C17.6058 22.1501 22.1501 17.6058 22.1501 12.0001C22.1501 6.39441 17.6058 1.8501 12.0001 1.8501ZM10.9992 7.52517C10.9992 8.07746 11.4469 8.52517 11.9992 8.52517H12.0002C12.5525 8.52517 13.0002 8.07746 13.0002 7.52517C13.0002 6.97289 12.5525 6.52517 12.0002 6.52517H11.9992C11.4469 6.52517 10.9992 6.97289 10.9992 7.52517ZM12.0002 17.3715C11.586 17.3715 11.2502 17.0357 11.2502 16.6215V10.945C11.2502 10.5308 11.586 10.195 12.0002 10.195C12.4144 10.195 12.7502 10.5308 12.7502 10.945V16.6215C12.7502 17.0357 12.4144 17.3715 12.0002 17.3715Z\"\n          fill=\"\"\n        />\n      </svg>\n    ),\n    info: (\n      <svg\n        className=\"fill-current\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.6501 11.9996C3.6501 7.38803 7.38852 3.64961 12.0001 3.64961C16.6117 3.64961 20.3501 7.38803 20.3501 11.9996C20.3501 16.6112 16.6117 20.3496 12.0001 20.3496C7.38852 20.3496 3.6501 16.6112 3.6501 11.9996ZM12.0001 1.84961C6.39441 1.84961 1.8501 6.39392 1.8501 11.9996C1.8501 17.6053 6.39441 22.1496 12.0001 22.1496C17.6058 22.1496 22.1501 17.6053 22.1501 11.9996C22.1501 6.39392 17.6058 1.84961 12.0001 1.84961ZM10.9992 7.52468C10.9992 8.07697 11.4469 8.52468 11.9992 8.52468H12.0002C12.5525 8.52468 13.0002 8.07697 13.0002 7.52468C13.0002 6.9724 12.5525 6.52468 12.0002 6.52468H11.9992C11.4469 6.52468 10.9992 6.9724 10.9992 7.52468ZM12.0002 17.371C11.586 17.371 11.2502 17.0352 11.2502 16.621V10.9445C11.2502 10.5303 11.586 10.1945 12.0002 10.1945C12.4144 10.1945 12.7502 10.5303 12.7502 10.9445V16.621C12.7502 17.0352 12.4144 17.371 12.0002 17.371Z\"\n          fill=\"\"\n        />\n      </svg>\n    ),\n  };\n\n  return (\n    <div\n      className={`rounded-xl border p-4 ${variantClasses[variant].container}`}\n    >\n      <div className=\"flex items-start gap-3\">\n        <div className={`-mt-0.5 ${variantClasses[variant].icon}`}>\n          {icons[variant]}\n        </div>\n\n        <div>\n          <h4 className=\"mb-1 text-sm font-semibold text-gray-800 dark:text-white/90\">\n            {title}\n          </h4>\n\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">{message}</p>\n\n          {showLink && (\n            <Link\n              to={linkHref}\n              className=\"inline-block mt-3 text-sm font-medium text-gray-500 underline dark:text-gray-400\"\n            >\n              {linkText}\n            </Link>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Alert;\n","size_bytes":6724},"frontend/src/components/form/Select.tsx":{"content":"import { useState } from \"react\";\n\ninterface Option {\n  value: string;\n  label: string;\n}\n\ninterface SelectProps {\n  options: Option[];\n  placeholder?: string;\n  onChange: (value: string) => void;\n  className?: string;\n  defaultValue?: string;\n}\n\nconst Select: React.FC<SelectProps> = ({\n  options,\n  placeholder = \"Select an option\",\n  onChange,\n  className = \"\",\n  defaultValue = \"\",\n}) => {\n  // Manage the selected value\n  const [selectedValue, setSelectedValue] = useState<string>(defaultValue);\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = e.target.value;\n    setSelectedValue(value);\n    onChange(value); // Trigger parent handler\n  };\n\n  return (\n    <select\n      className={`h-11 w-full appearance-none rounded-lg border border-gray-300 bg-transparent px-4 py-2.5 pr-11 text-sm shadow-theme-xs placeholder:text-gray-400 focus:border-brand-300 focus:outline-hidden focus:ring-3 focus:ring-brand-500/10 dark:border-gray-700 dark:bg-gray-900 dark:text-white/90 dark:placeholder:text-white/30 dark:focus:border-brand-800 ${\n        selectedValue\n          ? \"text-gray-800 dark:text-white/90\"\n          : \"text-gray-400 dark:text-gray-400\"\n      } ${className}`}\n      value={selectedValue}\n      onChange={handleChange}\n    >\n      {/* Placeholder option */}\n      <option\n        value=\"\"\n        disabled\n        className=\"text-gray-700 dark:bg-gray-900 dark:text-gray-400\"\n      >\n        {placeholder}\n      </option>\n      {/* Map over options */}\n      {options.map((option) => (\n        <option\n          key={option.value}\n          value={option.value}\n          className=\"text-gray-700 dark:bg-gray-900 dark:text-gray-400\"\n        >\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default Select;\n","size_bytes":1795},"frontend/src/pages/Dashboard/Home.tsx":{"content":"import { useAuth } from \"../../context/AuthContext\";\n\nconst Home = () => {\n  const { user } = useAuth();\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Welcome to PROCAPP</h1>\n        <p className=\"mt-2 text-gray-600\">\n          Hello, <span className=\"font-semibold\">{user?.username}</span>! You are logged in as{\" \"}\n          <span className=\"font-semibold capitalize\">{user?.role}</span>\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        <div className=\"rounded-lg bg-blue-50 p-6\">\n          <h3 className=\"text-sm font-medium text-blue-600\">Total Requests</h3>\n          <p className=\"mt-2 text-3xl font-bold text-blue-900\">0</p>\n        </div>\n        <div className=\"rounded-lg bg-green-50 p-6\">\n          <h3 className=\"text-sm font-medium text-green-600\">Approved</h3>\n          <p className=\"mt-2 text-3xl font-bold text-green-900\">0</p>\n        </div>\n        <div className=\"rounded-lg bg-yellow-50 p-6\">\n          <h3 className=\"text-sm font-medium text-yellow-600\">Pending</h3>\n          <p className=\"mt-2 text-3xl font-bold text-yellow-900\">0</p>\n        </div>\n        <div className=\"rounded-lg bg-red-50 p-6\">\n          <h3 className=\"text-sm font-medium text-red-600\">Rejected</h3>\n          <p className=\"mt-2 text-3xl font-bold text-red-900\">0</p>\n        </div>\n      </div>\n\n      <div className=\"mt-8\">\n        <h2 className=\"text-xl font-bold text-gray-900\">Quick Actions</h2>\n        <div className=\"mt-4 grid grid-cols-1 gap-4 md:grid-cols-3\">\n          <a\n            href=\"/new-request\"\n            className=\"rounded-lg border-2 border-blue-500 bg-blue-500 p-4 text-center text-white transition hover:bg-blue-600\"\n          >\n            Create New Request\n          </a>\n          <a\n            href=\"/requests\"\n            className=\"rounded-lg border-2 border-gray-300 p-4 text-center text-gray-700 transition hover:bg-gray-50\"\n          >\n            View Requests\n          </a>\n          <a\n            href=\"/vendors\"\n            className=\"rounded-lg border-2 border-gray-300 p-4 text-center text-gray-700 transition hover:bg-gray-50\"\n          >\n            Manage Vendors\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","size_bytes":2337},"frontend/src/pages/OtherPage/NotFound.tsx":{"content":"import GridShape from \"../../components/common/GridShape\";\nimport { Link } from \"react-router\";\nimport PageMeta from \"../../components/common/PageMeta\";\n\nexport default function NotFound() {\n  return (\n    <>\n      <PageMeta\n        title=\"React.js 404 Dashboard | TailAdmin - React.js Admin Dashboard Template\"\n        description=\"This is React.js 404 Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <div className=\"relative flex flex-col items-center justify-center min-h-screen p-6 overflow-hidden z-1\">\n        <GridShape />\n        <div className=\"mx-auto w-full max-w-[242px] text-center sm:max-w-[472px]\">\n          <h1 className=\"mb-8 font-bold text-gray-800 text-title-md dark:text-white/90 xl:text-title-2xl\">\n            ERROR\n          </h1>\n\n          <img src=\"/images/error/404.svg\" alt=\"404\" className=\"dark:hidden\" />\n          <img\n            src=\"/images/error/404-dark.svg\"\n            alt=\"404\"\n            className=\"hidden dark:block\"\n          />\n\n          <p className=\"mt-10 mb-6 text-base text-gray-700 dark:text-gray-400 sm:text-lg\">\n            We can’t seem to find the page you are looking for!\n          </p>\n\n          <Link\n            to=\"/\"\n            className=\"inline-flex items-center justify-center rounded-lg border border-gray-300 bg-white px-5 py-3.5 text-sm font-medium text-gray-700 shadow-theme-xs hover:bg-gray-50 hover:text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-white/[0.03] dark:hover:text-gray-200\"\n          >\n            Back to Home Page\n          </Link>\n        </div>\n        {/* <!-- Footer --> */}\n        <p className=\"absolute text-sm text-center text-gray-500 -translate-x-1/2 bottom-6 left-1/2 dark:text-gray-400\">\n          &copy; {new Date().getFullYear()} - TailAdmin\n        </p>\n      </div>\n    </>\n  );\n}\n","size_bytes":1868},"frontend/src/components/header/UserDropdown.tsx":{"content":"import { useState } from \"react\";\nimport { DropdownItem } from \"../ui/dropdown/DropdownItem\";\nimport { Dropdown } from \"../ui/dropdown/Dropdown\";\nimport { Link } from \"react-router\";\n\nexport default function UserDropdown() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  function closeDropdown() {\n    setIsOpen(false);\n  }\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={toggleDropdown}\n        className=\"flex items-center text-gray-700 dropdown-toggle dark:text-gray-400\"\n      >\n        <span className=\"mr-3 overflow-hidden rounded-full h-11 w-11\">\n          <img src=\"/images/user/owner.jpg\" alt=\"User\" />\n        </span>\n\n        <span className=\"block mr-1 font-medium text-theme-sm\">Musharof</span>\n        <svg\n          className={`stroke-gray-500 dark:stroke-gray-400 transition-transform duration-200 ${\n            isOpen ? \"rotate-180\" : \"\"\n          }`}\n          width=\"18\"\n          height=\"20\"\n          viewBox=\"0 0 18 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M4.3125 8.65625L9 13.3437L13.6875 8.65625\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      </button>\n\n      <Dropdown\n        isOpen={isOpen}\n        onClose={closeDropdown}\n        className=\"absolute right-0 mt-[17px] flex w-[260px] flex-col rounded-2xl border border-gray-200 bg-white p-3 shadow-theme-lg dark:border-gray-800 dark:bg-gray-dark\"\n      >\n        <div>\n          <span className=\"block font-medium text-gray-700 text-theme-sm dark:text-gray-400\">\n            Musharof Chowdhury\n          </span>\n          <span className=\"mt-0.5 block text-theme-xs text-gray-500 dark:text-gray-400\">\n            randomuser@pimjo.com\n          </span>\n        </div>\n\n        <ul className=\"flex flex-col gap-1 pt-4 pb-3 border-b border-gray-200 dark:border-gray-800\">\n          <li>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              tag=\"a\"\n              to=\"/profile\"\n              className=\"flex items-center gap-3 px-3 py-2 font-medium text-gray-700 rounded-lg group text-theme-sm hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-white/5 dark:hover:text-gray-300\"\n            >\n              <svg\n                className=\"fill-gray-500 group-hover:fill-gray-700 dark:fill-gray-400 dark:group-hover:fill-gray-300\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M12 3.5C7.30558 3.5 3.5 7.30558 3.5 12C3.5 14.1526 4.3002 16.1184 5.61936 17.616C6.17279 15.3096 8.24852 13.5955 10.7246 13.5955H13.2746C15.7509 13.5955 17.8268 15.31 18.38 17.6167C19.6996 16.119 20.5 14.153 20.5 12C20.5 7.30558 16.6944 3.5 12 3.5ZM17.0246 18.8566V18.8455C17.0246 16.7744 15.3457 15.0955 13.2746 15.0955H10.7246C8.65354 15.0955 6.97461 16.7744 6.97461 18.8455V18.856C8.38223 19.8895 10.1198 20.5 12 20.5C13.8798 20.5 15.6171 19.8898 17.0246 18.8566ZM2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12ZM11.9991 7.25C10.8847 7.25 9.98126 8.15342 9.98126 9.26784C9.98126 10.3823 10.8847 11.2857 11.9991 11.2857C13.1135 11.2857 14.0169 10.3823 14.0169 9.26784C14.0169 8.15342 13.1135 7.25 11.9991 7.25ZM8.48126 9.26784C8.48126 7.32499 10.0563 5.75 11.9991 5.75C13.9419 5.75 15.5169 7.32499 15.5169 9.26784C15.5169 11.2107 13.9419 12.7857 11.9991 12.7857C10.0563 12.7857 8.48126 11.2107 8.48126 9.26784Z\"\n                  fill=\"\"\n                />\n              </svg>\n              Edit profile\n            </DropdownItem>\n          </li>\n          <li>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              tag=\"a\"\n              to=\"/profile\"\n              className=\"flex items-center gap-3 px-3 py-2 font-medium text-gray-700 rounded-lg group text-theme-sm hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-white/5 dark:hover:text-gray-300\"\n            >\n              <svg\n                className=\"fill-gray-500 group-hover:fill-gray-700 dark:fill-gray-400 dark:group-hover:fill-gray-300\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M10.4858 3.5L13.5182 3.5C13.9233 3.5 14.2518 3.82851 14.2518 4.23377C14.2518 5.9529 16.1129 7.02795 17.602 6.1682C17.9528 5.96567 18.4014 6.08586 18.6039 6.43667L20.1203 9.0631C20.3229 9.41407 20.2027 9.86286 19.8517 10.0655C18.3625 10.9253 18.3625 13.0747 19.8517 13.9345C20.2026 14.1372 20.3229 14.5859 20.1203 14.9369L18.6039 17.5634C18.4013 17.9142 17.9528 18.0344 17.602 17.8318C16.1129 16.9721 14.2518 18.0471 14.2518 19.7663C14.2518 20.1715 13.9233 20.5 13.5182 20.5H10.4858C10.0804 20.5 9.75182 20.1714 9.75182 19.766C9.75182 18.0461 7.88983 16.9717 6.40067 17.8314C6.04945 18.0342 5.60037 17.9139 5.39767 17.5628L3.88167 14.937C3.67903 14.586 3.79928 14.1372 4.15026 13.9346C5.63949 13.0748 5.63946 10.9253 4.15025 10.0655C3.79926 9.86282 3.67901 9.41401 3.88165 9.06303L5.39764 6.43725C5.60034 6.08617 6.04943 5.96581 6.40065 6.16858C7.88982 7.02836 9.75182 5.9539 9.75182 4.23399C9.75182 3.82862 10.0804 3.5 10.4858 3.5ZM13.5182 2L10.4858 2C9.25201 2 8.25182 3.00019 8.25182 4.23399C8.25182 4.79884 7.64013 5.15215 7.15065 4.86955C6.08213 4.25263 4.71559 4.61859 4.0986 5.68725L2.58261 8.31303C1.96575 9.38146 2.33183 10.7477 3.40025 11.3645C3.88948 11.647 3.88947 12.3531 3.40026 12.6355C2.33184 13.2524 1.96578 14.6186 2.58263 15.687L4.09863 18.3128C4.71562 19.3814 6.08215 19.7474 7.15067 19.1305C7.64015 18.8479 8.25182 19.2012 8.25182 19.766C8.25182 20.9998 9.25201 22 10.4858 22H13.5182C14.7519 22 15.7518 20.9998 15.7518 19.7663C15.7518 19.2015 16.3632 18.8487 16.852 19.1309C17.9202 19.7476 19.2862 19.3816 19.9029 18.3134L21.4193 15.6869C22.0361 14.6185 21.6701 13.2523 20.6017 12.6355C20.1125 12.3531 20.1125 11.647 20.6017 11.3645C21.6701 10.7477 22.0362 9.38152 21.4193 8.3131L19.903 5.68667C19.2862 4.61842 17.9202 4.25241 16.852 4.86917C16.3632 5.15138 15.7518 4.79856 15.7518 4.23377C15.7518 3.00024 14.7519 2 13.5182 2ZM9.6659 11.9999C9.6659 10.7103 10.7113 9.66493 12.0009 9.66493C13.2905 9.66493 14.3359 10.7103 14.3359 11.9999C14.3359 13.2895 13.2905 14.3349 12.0009 14.3349C10.7113 14.3349 9.6659 13.2895 9.6659 11.9999ZM12.0009 8.16493C9.88289 8.16493 8.1659 9.88191 8.1659 11.9999C8.1659 14.1179 9.88289 15.8349 12.0009 15.8349C14.1189 15.8349 15.8359 14.1179 15.8359 11.9999C15.8359 9.88191 14.1189 8.16493 12.0009 8.16493Z\"\n                  fill=\"\"\n                />\n              </svg>\n              Account settings\n            </DropdownItem>\n          </li>\n          <li>\n            <DropdownItem\n              onItemClick={closeDropdown}\n              tag=\"a\"\n              to=\"/profile\"\n              className=\"flex items-center gap-3 px-3 py-2 font-medium text-gray-700 rounded-lg group text-theme-sm hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-white/5 dark:hover:text-gray-300\"\n            >\n              <svg\n                className=\"fill-gray-500 group-hover:fill-gray-700 dark:fill-gray-400 dark:group-hover:fill-gray-300\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M3.5 12C3.5 7.30558 7.30558 3.5 12 3.5C16.6944 3.5 20.5 7.30558 20.5 12C20.5 16.6944 16.6944 20.5 12 20.5C7.30558 20.5 3.5 16.6944 3.5 12ZM12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2ZM11.0991 7.52507C11.0991 8.02213 11.5021 8.42507 11.9991 8.42507H12.0001C12.4972 8.42507 12.9001 8.02213 12.9001 7.52507C12.9001 7.02802 12.4972 6.62507 12.0001 6.62507H11.9991C11.5021 6.62507 11.0991 7.02802 11.0991 7.52507ZM12.0001 17.3714C11.5859 17.3714 11.2501 17.0356 11.2501 16.6214V10.9449C11.2501 10.5307 11.5859 10.1949 12.0001 10.1949C12.4143 10.1949 12.7501 10.5307 12.7501 10.9449V16.6214C12.7501 17.0356 12.4143 17.3714 12.0001 17.3714Z\"\n                  fill=\"\"\n                />\n              </svg>\n              Support\n            </DropdownItem>\n          </li>\n        </ul>\n        <Link\n          to=\"/signin\"\n          className=\"flex items-center gap-3 px-3 py-2 mt-3 font-medium text-gray-700 rounded-lg group text-theme-sm hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-white/5 dark:hover:text-gray-300\"\n        >\n          <svg\n            className=\"fill-gray-500 group-hover:fill-gray-700 dark:group-hover:fill-gray-300\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M15.1007 19.247C14.6865 19.247 14.3507 18.9112 14.3507 18.497L14.3507 14.245H12.8507V18.497C12.8507 19.7396 13.8581 20.747 15.1007 20.747H18.5007C19.7434 20.747 20.7507 19.7396 20.7507 18.497L20.7507 5.49609C20.7507 4.25345 19.7433 3.24609 18.5007 3.24609H15.1007C13.8581 3.24609 12.8507 4.25345 12.8507 5.49609V9.74501L14.3507 9.74501V5.49609C14.3507 5.08188 14.6865 4.74609 15.1007 4.74609L18.5007 4.74609C18.9149 4.74609 19.2507 5.08188 19.2507 5.49609L19.2507 18.497C19.2507 18.9112 18.9149 19.247 18.5007 19.247H15.1007ZM3.25073 11.9984C3.25073 12.2144 3.34204 12.4091 3.48817 12.546L8.09483 17.1556C8.38763 17.4485 8.86251 17.4487 9.15549 17.1559C9.44848 16.8631 9.44863 16.3882 9.15583 16.0952L5.81116 12.7484L16.0007 12.7484C16.4149 12.7484 16.7507 12.4127 16.7507 11.9984C16.7507 11.5842 16.4149 11.2484 16.0007 11.2484L5.81528 11.2484L9.15585 7.90554C9.44864 7.61255 9.44847 7.13767 9.15547 6.84488C8.86248 6.55209 8.3876 6.55226 8.09481 6.84525L3.52309 11.4202C3.35673 11.5577 3.25073 11.7657 3.25073 11.9984Z\"\n              fill=\"\"\n            />\n          </svg>\n          Sign out\n        </Link>\n      </Dropdown>\n    </div>\n  );\n}\n","size_bytes":10603},"frontend/src/components/form/form-elements/FileInputExample.tsx":{"content":"import ComponentCard from \"../../common/ComponentCard\";\nimport FileInput from \"../input/FileInput\";\nimport Label from \"../Label\";\n\nexport default function FileInputExample() {\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      console.log(\"Selected file:\", file.name);\n    }\n  };\n\n  return (\n    <ComponentCard title=\"File Input\">\n      <div>\n        <Label>Upload file</Label>\n        <FileInput onChange={handleFileChange} className=\"custom-class\" />\n      </div>\n    </ComponentCard>\n  );\n}\n","size_bytes":584},"frontend/src/components/auth/SignUpForm.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"react-router\";\nimport { ChevronLeftIcon, EyeCloseIcon, EyeIcon } from \"../../icons\";\nimport Label from \"../form/Label\";\nimport Input from \"../form/input/InputField\";\nimport Checkbox from \"../form/input/Checkbox\";\n\nexport default function SignUpForm() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n  return (\n    <div className=\"flex flex-col flex-1 w-full overflow-y-auto lg:w-1/2 no-scrollbar\">\n      <div className=\"w-full max-w-md mx-auto mb-5 sm:pt-10\">\n        <Link\n          to=\"/\"\n          className=\"inline-flex items-center text-sm text-gray-500 transition-colors hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300\"\n        >\n          <ChevronLeftIcon className=\"size-5\" />\n          Back to dashboard\n        </Link>\n      </div>\n      <div className=\"flex flex-col justify-center flex-1 w-full max-w-md mx-auto\">\n        <div>\n          <div className=\"mb-5 sm:mb-8\">\n            <h1 className=\"mb-2 font-semibold text-gray-800 text-title-sm dark:text-white/90 sm:text-title-md\">\n              Sign Up\n            </h1>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              Enter your email and password to sign up!\n            </p>\n          </div>\n          <div>\n            <div className=\"grid grid-cols-1 gap-3 sm:grid-cols-2 sm:gap-5\">\n              <button className=\"inline-flex items-center justify-center gap-3 py-3 text-sm font-normal text-gray-700 transition-colors bg-gray-100 rounded-lg px-7 hover:bg-gray-200 hover:text-gray-800 dark:bg-white/5 dark:text-white/90 dark:hover:bg-white/10\">\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M18.7511 10.1944C18.7511 9.47495 18.6915 8.94995 18.5626 8.40552H10.1797V11.6527H15.1003C15.0011 12.4597 14.4654 13.675 13.2749 14.4916L13.2582 14.6003L15.9087 16.6126L16.0924 16.6305C17.7788 15.1041 18.7511 12.8583 18.7511 10.1944Z\"\n                    fill=\"#4285F4\"\n                  />\n                  <path\n                    d=\"M10.1788 18.75C12.5895 18.75 14.6133 17.9722 16.0915 16.6305L13.274 14.4916C12.5201 15.0068 11.5081 15.3666 10.1788 15.3666C7.81773 15.3666 5.81379 13.8402 5.09944 11.7305L4.99473 11.7392L2.23868 13.8295L2.20264 13.9277C3.67087 16.786 6.68674 18.75 10.1788 18.75Z\"\n                    fill=\"#34A853\"\n                  />\n                  <path\n                    d=\"M5.10014 11.7305C4.91165 11.186 4.80257 10.6027 4.80257 9.99992C4.80257 9.3971 4.91165 8.81379 5.09022 8.26935L5.08523 8.1534L2.29464 6.02954L2.20333 6.0721C1.5982 7.25823 1.25098 8.5902 1.25098 9.99992C1.25098 11.4096 1.5982 12.7415 2.20333 13.9277L5.10014 11.7305Z\"\n                    fill=\"#FBBC05\"\n                  />\n                  <path\n                    d=\"M10.1789 4.63331C11.8554 4.63331 12.9864 5.34303 13.6312 5.93612L16.1511 3.525C14.6035 2.11528 12.5895 1.25 10.1789 1.25C6.68676 1.25 3.67088 3.21387 2.20264 6.07218L5.08953 8.26943C5.81381 6.15972 7.81776 4.63331 10.1789 4.63331Z\"\n                    fill=\"#EB4335\"\n                  />\n                </svg>\n                Sign up with Google\n              </button>\n              <button className=\"inline-flex items-center justify-center gap-3 py-3 text-sm font-normal text-gray-700 transition-colors bg-gray-100 rounded-lg px-7 hover:bg-gray-200 hover:text-gray-800 dark:bg-white/5 dark:text-white/90 dark:hover:bg-white/10\">\n                <svg\n                  width=\"21\"\n                  className=\"fill-current\"\n                  height=\"20\"\n                  viewBox=\"0 0 21 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path d=\"M15.6705 1.875H18.4272L12.4047 8.75833L19.4897 18.125H13.9422L9.59717 12.4442L4.62554 18.125H1.86721L8.30887 10.7625L1.51221 1.875H7.20054L11.128 7.0675L15.6705 1.875ZM14.703 16.475H16.2305L6.37054 3.43833H4.73137L14.703 16.475Z\" />\n                </svg>\n                Sign up with X\n              </button>\n            </div>\n            <div className=\"relative py-3 sm:py-5\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-200 dark:border-gray-800\"></div>\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"p-2 text-gray-400 bg-white dark:bg-gray-900 sm:px-5 sm:py-2\">\n                  Or\n                </span>\n              </div>\n            </div>\n            <form>\n              <div className=\"space-y-5\">\n                <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2\">\n                  {/* <!-- First Name --> */}\n                  <div className=\"sm:col-span-1\">\n                    <Label>\n                      First Name<span className=\"text-error-500\">*</span>\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      id=\"fname\"\n                      name=\"fname\"\n                      placeholder=\"Enter your first name\"\n                    />\n                  </div>\n                  {/* <!-- Last Name --> */}\n                  <div className=\"sm:col-span-1\">\n                    <Label>\n                      Last Name<span className=\"text-error-500\">*</span>\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      id=\"lname\"\n                      name=\"lname\"\n                      placeholder=\"Enter your last name\"\n                    />\n                  </div>\n                </div>\n                {/* <!-- Email --> */}\n                <div>\n                  <Label>\n                    Email<span className=\"text-error-500\">*</span>\n                  </Label>\n                  <Input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n                {/* <!-- Password --> */}\n                <div>\n                  <Label>\n                    Password<span className=\"text-error-500\">*</span>\n                  </Label>\n                  <div className=\"relative\">\n                    <Input\n                      placeholder=\"Enter your password\"\n                      type={showPassword ? \"text\" : \"password\"}\n                    />\n                    <span\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute z-30 -translate-y-1/2 cursor-pointer right-4 top-1/2\"\n                    >\n                      {showPassword ? (\n                        <EyeIcon className=\"fill-gray-500 dark:fill-gray-400 size-5\" />\n                      ) : (\n                        <EyeCloseIcon className=\"fill-gray-500 dark:fill-gray-400 size-5\" />\n                      )}\n                    </span>\n                  </div>\n                </div>\n                {/* <!-- Checkbox --> */}\n                <div className=\"flex items-center gap-3\">\n                  <Checkbox\n                    className=\"w-5 h-5\"\n                    checked={isChecked}\n                    onChange={setIsChecked}\n                  />\n                  <p className=\"inline-block font-normal text-gray-500 dark:text-gray-400\">\n                    By creating an account means you agree to the{\" \"}\n                    <span className=\"text-gray-800 dark:text-white/90\">\n                      Terms and Conditions,\n                    </span>{\" \"}\n                    and our{\" \"}\n                    <span className=\"text-gray-800 dark:text-white\">\n                      Privacy Policy\n                    </span>\n                  </p>\n                </div>\n                {/* <!-- Button --> */}\n                <div>\n                  <button className=\"flex items-center justify-center w-full px-4 py-3 text-sm font-medium text-white transition rounded-lg bg-brand-500 shadow-theme-xs hover:bg-brand-600\">\n                    Sign Up\n                  </button>\n                </div>\n              </div>\n            </form>\n\n            <div className=\"mt-5\">\n              <p className=\"text-sm font-normal text-center text-gray-700 dark:text-gray-400 sm:text-start\">\n                Already have an account? {\"\"}\n                <Link\n                  to=\"/signin\"\n                  className=\"text-brand-500 hover:text-brand-600 dark:text-brand-400\"\n                >\n                  Sign In\n                </Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8870},"frontend/src/pages/AuthPages/Login.tsx":{"content":"import { useState, FormEvent } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useAuth } from '../../context/AuthContext';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      await login(username, password);\n      navigate('/');\n    } catch (err) {\n      setError('Invalid username or password');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const quickLogin = async (user: string, pass: string) => {\n    setUsername(user);\n    setPassword(pass);\n    setError('');\n    setIsLoading(true);\n\n    try {\n      await login(user, pass);\n      navigate('/');\n    } catch (err) {\n      setError('Invalid username or password');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-blue-50 to-blue-100 px-4\">\n      <div className=\"w-full max-w-md\">\n        <div className=\"mb-6 text-center\">\n          <div className=\"mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-2xl bg-blue-500\">\n            <span className=\"text-2xl font-bold text-white\">P</span>\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">PROCAPP</h1>\n          <p className=\"text-gray-600\">Procurement Management System</p>\n        </div>\n\n        <div className=\"rounded-lg bg-white p-8 shadow-xl\">\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label className=\"mb-2 block text-sm font-medium text-gray-700\">\n                Username\n              </label>\n              <input\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                className=\"w-full rounded-lg border border-gray-300 px-4 py-2 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                placeholder=\"Enter your username\"\n                required\n              />\n            </div>\n\n            <div>\n              <label className=\"mb-2 block text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"w-full rounded-lg border border-gray-300 px-4 py-2 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                placeholder=\"Enter your password\"\n                autoComplete=\"current-password\"\n                required\n              />\n            </div>\n\n            {error && (\n              <div className=\"rounded-lg bg-red-50 p-3 text-sm text-red-600\">\n                {error}\n              </div>\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"w-full rounded-lg bg-blue-500 py-2.5 font-medium text-white transition-colors hover:bg-blue-600 disabled:opacity-50\"\n            >\n              {isLoading ? 'Signing in...' : 'Sign in'}\n            </button>\n          </form>\n\n          <div className=\"mt-6\">\n            <div className=\"mb-3 text-center text-sm text-gray-600\">\n              Quick Login (Demo)\n            </div>\n            <div className=\"grid grid-cols-2 gap-2\">\n              <button\n                onClick={() => quickLogin('user', 'password123')}\n                className=\"rounded-lg border border-gray-300 p-2 text-left transition-colors hover:bg-gray-50\"\n                disabled={isLoading}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-xl\">👤</span>\n                  <div>\n                    <div className=\"text-sm font-medium\">user</div>\n                    <div className=\"text-xs text-gray-500\">Regular User</div>\n                  </div>\n                </div>\n              </button>\n\n              <button\n                onClick={() => quickLogin('superuser', 'password123')}\n                className=\"rounded-lg border border-gray-300 p-2 text-left transition-colors hover:bg-gray-50\"\n                disabled={isLoading}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-xl\">⭐</span>\n                  <div>\n                    <div className=\"text-sm font-medium\">superuser</div>\n                    <div className=\"text-xs text-gray-500\">Super User</div>\n                  </div>\n                </div>\n              </button>\n\n              <button\n                onClick={() => quickLogin('manager', 'password123')}\n                className=\"rounded-lg border border-gray-300 p-2 text-left transition-colors hover:bg-gray-50\"\n                disabled={isLoading}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-xl\">💼</span>\n                  <div>\n                    <div className=\"text-sm font-medium\">manager</div>\n                    <div className=\"text-xs text-gray-500\">Manager</div>\n                  </div>\n                </div>\n              </button>\n\n              <button\n                onClick={() => quickLogin('director', 'password123')}\n                className=\"rounded-lg border border-gray-300 p-2 text-left transition-colors hover:bg-gray-50\"\n                disabled={isLoading}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-xl\">🎯</span>\n                  <div>\n                    <div className=\"text-sm font-medium\">director</div>\n                    <div className=\"text-xs text-gray-500\">Director</div>\n                  </div>\n                </div>\n              </button>\n            </div>\n            <p className=\"mt-3 text-center text-xs text-gray-500\">\n              Click any user to auto-fill credentials (password: password123)\n            </p>\n          </div>\n        </div>\n\n        <p className=\"mt-6 text-center text-sm text-gray-600\">\n          © 2025 PROCAPP. All rights reserved.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","size_bytes":6460},"frontend/src/pages/Charts/BarChart.tsx":{"content":"import PageBreadcrumb from \"../../components/common/PageBreadCrumb\";\nimport ComponentCard from \"../../components/common/ComponentCard\";\nimport BarChartOne from \"../../components/charts/bar/BarChartOne\";\nimport PageMeta from \"../../components/common/PageMeta\";\n\nexport default function BarChart() {\n  return (\n    <div>\n      <PageMeta\n        title=\"React.js Chart Dashboard | TailAdmin - React.js Admin Dashboard Template\"\n        description=\"This is React.js Chart Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Bar Chart\" />\n      <div className=\"space-y-6\">\n        <ComponentCard title=\"Bar Chart 1\">\n          <BarChartOne />\n        </ComponentCard>\n      </div>\n    </div>\n  );\n}\n","size_bytes":763},"frontend/src/components/ui/badge/Badge.tsx":{"content":"type BadgeVariant = \"light\" | \"solid\";\ntype BadgeSize = \"sm\" | \"md\";\ntype BadgeColor =\n  | \"primary\"\n  | \"success\"\n  | \"error\"\n  | \"warning\"\n  | \"info\"\n  | \"light\"\n  | \"dark\";\n\ninterface BadgeProps {\n  variant?: BadgeVariant; // Light or solid variant\n  size?: BadgeSize; // Badge size\n  color?: BadgeColor; // Badge color\n  startIcon?: React.ReactNode; // Icon at the start\n  endIcon?: React.ReactNode; // Icon at the end\n  children: React.ReactNode; // Badge content\n}\n\nconst Badge: React.FC<BadgeProps> = ({\n  variant = \"light\",\n  color = \"primary\",\n  size = \"md\",\n  startIcon,\n  endIcon,\n  children,\n}) => {\n  const baseStyles =\n    \"inline-flex items-center px-2.5 py-0.5 justify-center gap-1 rounded-full font-medium\";\n\n  // Define size styles\n  const sizeStyles = {\n    sm: \"text-theme-xs\", // Smaller padding and font size\n    md: \"text-sm\", // Default padding and font size\n  };\n\n  // Define color styles for variants\n  const variants = {\n    light: {\n      primary:\n        \"bg-brand-50 text-brand-500 dark:bg-brand-500/15 dark:text-brand-400\",\n      success:\n        \"bg-success-50 text-success-600 dark:bg-success-500/15 dark:text-success-500\",\n      error:\n        \"bg-error-50 text-error-600 dark:bg-error-500/15 dark:text-error-500\",\n      warning:\n        \"bg-warning-50 text-warning-600 dark:bg-warning-500/15 dark:text-orange-400\",\n      info: \"bg-blue-light-50 text-blue-light-500 dark:bg-blue-light-500/15 dark:text-blue-light-500\",\n      light: \"bg-gray-100 text-gray-700 dark:bg-white/5 dark:text-white/80\",\n      dark: \"bg-gray-500 text-white dark:bg-white/5 dark:text-white\",\n    },\n    solid: {\n      primary: \"bg-brand-500 text-white dark:text-white\",\n      success: \"bg-success-500 text-white dark:text-white\",\n      error: \"bg-error-500 text-white dark:text-white\",\n      warning: \"bg-warning-500 text-white dark:text-white\",\n      info: \"bg-blue-light-500 text-white dark:text-white\",\n      light: \"bg-gray-400 dark:bg-white/5 text-white dark:text-white/80\",\n      dark: \"bg-gray-700 text-white dark:text-white\",\n    },\n  };\n\n  // Get styles based on size and color variant\n  const sizeClass = sizeStyles[size];\n  const colorStyles = variants[variant][color];\n\n  return (\n    <span className={`${baseStyles} ${sizeClass} ${colorStyles}`}>\n      {startIcon && <span className=\"mr-1\">{startIcon}</span>}\n      {children}\n      {endIcon && <span className=\"ml-1\">{endIcon}</span>}\n    </span>\n  );\n};\n\nexport default Badge;\n","size_bytes":2450},"frontend/src/components/charts/bar/BarChartOne.tsx":{"content":"import Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\nexport default function BarChartOne() {\n  const options: ApexOptions = {\n    colors: [\"#465fff\"],\n    chart: {\n      fontFamily: \"Outfit, sans-serif\",\n      type: \"bar\",\n      height: 180,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"39%\",\n        borderRadius: 5,\n        borderRadiusApplication: \"end\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      show: true,\n      width: 4,\n      colors: [\"transparent\"],\n    },\n    xaxis: {\n      categories: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ],\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    legend: {\n      show: true,\n      position: \"top\",\n      horizontalAlign: \"left\",\n      fontFamily: \"Outfit\",\n    },\n    yaxis: {\n      title: {\n        text: undefined,\n      },\n    },\n    grid: {\n      yaxis: {\n        lines: {\n          show: true,\n        },\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n\n    tooltip: {\n      x: {\n        show: false,\n      },\n      y: {\n        formatter: (val: number) => `${val}`,\n      },\n    },\n  };\n  const series = [\n    {\n      name: \"Sales\",\n      data: [168, 385, 201, 298, 187, 195, 291, 110, 215, 390, 280, 112],\n    },\n  ];\n  return (\n    <div className=\"max-w-full overflow-x-auto custom-scrollbar\">\n      <div id=\"chartOne\" className=\"min-w-[1000px]\">\n        <Chart options={options} series={series} type=\"bar\" height={180} />\n      </div>\n    </div>\n  );\n}\n","size_bytes":1777},"frontend/src/pages/Charts/LineChart.tsx":{"content":"import PageBreadcrumb from \"../../components/common/PageBreadCrumb\";\nimport ComponentCard from \"../../components/common/ComponentCard\";\nimport LineChartOne from \"../../components/charts/line/LineChartOne\";\nimport PageMeta from \"../../components/common/PageMeta\";\n\nexport default function LineChart() {\n  return (\n    <>\n      <PageMeta\n        title=\"React.js Chart Dashboard | TailAdmin - React.js Admin Dashboard Template\"\n        description=\"This is React.js Chart Dashboard page for TailAdmin - React.js Tailwind CSS Admin Dashboard Template\"\n      />\n      <PageBreadcrumb pageTitle=\"Line Chart\" />\n      <div className=\"space-y-6\">\n        <ComponentCard title=\"Line Chart 1\">\n          <LineChartOne />\n        </ComponentCard>\n      </div>\n    </>\n  );\n}\n","size_bytes":764},"frontend/src/components/ui/avatar/Avatar.tsx":{"content":"interface AvatarProps {\n  src: string; // URL of the avatar image\n  alt?: string; // Alt text for the avatar\n  size?: \"xsmall\" | \"small\" | \"medium\" | \"large\" | \"xlarge\" | \"xxlarge\"; // Avatar size\n  status?: \"online\" | \"offline\" | \"busy\" | \"none\"; // Status indicator\n}\n\nconst sizeClasses = {\n  xsmall: \"h-6 w-6 max-w-6\",\n  small: \"h-8 w-8 max-w-8\",\n  medium: \"h-10 w-10 max-w-10\",\n  large: \"h-12 w-12 max-w-12\",\n  xlarge: \"h-14 w-14 max-w-14\",\n  xxlarge: \"h-16 w-16 max-w-16\",\n};\n\nconst statusSizeClasses = {\n  xsmall: \"h-1.5 w-1.5 max-w-1.5\",\n  small: \"h-2 w-2 max-w-2\",\n  medium: \"h-2.5 w-2.5 max-w-2.5\",\n  large: \"h-3 w-3 max-w-3\",\n  xlarge: \"h-3.5 w-3.5 max-w-3.5\",\n  xxlarge: \"h-4 w-4 max-w-4\",\n};\n\nconst statusColorClasses = {\n  online: \"bg-success-500\",\n  offline: \"bg-error-400\",\n  busy: \"bg-warning-500\",\n};\n\nconst Avatar: React.FC<AvatarProps> = ({\n  src,\n  alt = \"User Avatar\",\n  size = \"medium\",\n  status = \"none\",\n}) => {\n  return (\n    <div className={`relative  rounded-full ${sizeClasses[size]}`}>\n      {/* Avatar Image */}\n      <img src={src} alt={alt} className=\"object-cover rounded-full\" />\n\n      {/* Status Indicator */}\n      {status !== \"none\" && (\n        <span\n          className={`absolute bottom-0 right-0 rounded-full border-[1.5px] border-white dark:border-gray-900 ${\n            statusSizeClasses[size]\n          } ${statusColorClasses[status] || \"\"}`}\n        ></span>\n      )}\n    </div>\n  );\n};\n\nexport default Avatar;\n","size_bytes":1458}},"version":2}